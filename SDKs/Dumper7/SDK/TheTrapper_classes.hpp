#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheTrapper

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "AnimationUtilities_classes.hpp"
#include "Engine_classes.hpp"
#include "DBDInteraction_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class TheTrapper.Addon_Beartrap_05
// 0x0000 (0x02B8 - 0x02B8)
class UAddon_Beartrap_05 final : public UItemAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_Beartrap_05">();
	}
	static class UAddon_Beartrap_05* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_Beartrap_05>();
	}
};
static_assert(alignof(UAddon_Beartrap_05) == 0x000008, "Wrong alignment on UAddon_Beartrap_05");
static_assert(sizeof(UAddon_Beartrap_05) == 0x0002B8, "Wrong size on UAddon_Beartrap_05");

// Class TheTrapper.Addon_Beartrap_DisarmRevealer
// 0x0060 (0x0318 - 0x02B8)
class UAddon_Beartrap_DisarmRevealer final : public UItemAddon
{
public:
	class FName                                   _auraRevealStatusEffectID;                         // 0x02B8(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _auraRevealDuration;                               // 0x02C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ABearTrap*, class ACamperPlayer*>  _disarmedTrapMap;                                  // 0x02C8(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_Beartrap_DisarmRevealer">();
	}
	static class UAddon_Beartrap_DisarmRevealer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_Beartrap_DisarmRevealer>();
	}
};
static_assert(alignof(UAddon_Beartrap_DisarmRevealer) == 0x000008, "Wrong alignment on UAddon_Beartrap_DisarmRevealer");
static_assert(sizeof(UAddon_Beartrap_DisarmRevealer) == 0x000318, "Wrong size on UAddon_Beartrap_DisarmRevealer");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _auraRevealStatusEffectID) == 0x0002B8, "Member 'UAddon_Beartrap_DisarmRevealer::_auraRevealStatusEffectID' has a wrong offset!");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _auraRevealDuration) == 0x0002C4, "Member 'UAddon_Beartrap_DisarmRevealer::_auraRevealDuration' has a wrong offset!");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _disarmedTrapMap) == 0x0002C8, "Member 'UAddon_Beartrap_DisarmRevealer::_disarmedTrapMap' has a wrong offset!");

// Class TheTrapper.BearTrap
// 0x0118 (0x05D0 - 0x04B8)
class alignas(0x10) ABearTrap final : public ABaseTrap
{
public:
	class UBoxPlayerOverlapComponent*             _interactionVolume;                                // 0x04B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsulePlayerOverlapComponent*         _trapPlayerDetectionZone;                          // 0x04C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          _killerSafetyZoneComponent;                        // 0x04C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x04D0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBearTrapOutlineUpdateStrategy*         _outlineUpdateStrategy;                            // 0x04D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMapActorComponent*                     _mapActorComponent;                                // 0x04E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       _mapActorCollision;                                // 0x04E8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       _trapBlocker;                                      // 0x04F0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                         _montagePlayer;                                    // 0x04F8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              _onIsTrapSetChanged;                               // 0x0500(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ADBDPlayer*                             _ownerPlayer;                                      // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDNavModifierComponent*               _dangerNavModifierComponent;                       // 0x0518(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isTrapperOutOfSafetyZone;                         // 0x0520(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _maximumAttemptsForSelfUntrap;                     // 0x0524(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _selfUntrapAttemptsRemaining;                      // 0x0528(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractor*                            _mainInteractor;                                   // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                 _trapSurvivor;                                     // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                 _trapKiller;                                       // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                             _trappedPlayer;                                    // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_550[0x58];                                     // 0x0550(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationMontageSlave*                 _animationMontageSlave;                            // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5B0[0x20];                                     // 0x05B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnPlayerTrapped(class ADBDPlayer* trappedPlayer);
	void InitializeMainInteractor(class UInteractor* interactor);
	void InitializeTrapKillerInteraction(class UInteractionDefinition* interaction);
	void InitializeTrapSurvivorInteraction(class UInteractionDefinition* interaction);
	void OnCollectUpdateEnd();
	void OnCollectUpdateStart();
	void OnLevelReadyToPlay_Implementation();
	void OnSafetyZoneEndOverlap(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex);
	void OnSlasherSet(class ASlasherPlayer* slasher);
	void OnTrapDetectionZoneOverlapBegin(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult);
	void OnTrapDetectionZoneOverlapEnd(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex);
	void OnTrappedPlayerPickedUp(class ADBDPlayer* picker);
	void SetTrappedPlayer(class ADBDPlayer* trappedPlayer);
	void SetTrappedPlayerSinceMoved(bool didTrap);
	void TrySetTrappedPlayer(class ADBDPlayer* player);

	class UAkComponent* GetAkAudioComponent() const;
	class UBearTrapAnimInstance* GetAnimInstance() const;
	class ADBDPlayer* GetTrappedPlayer() const;
	bool HasTrappedPlayer() const;
	bool HasTrappedPlayerSinceMoved() const;
	bool IsTrapperOutOfSafetyZone() const;
	void PlayMontage(class UAnimMontage* montage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrap">();
	}
	static class ABearTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABearTrap>();
	}
};
static_assert(alignof(ABearTrap) == 0x000010, "Wrong alignment on ABearTrap");
static_assert(sizeof(ABearTrap) == 0x0005D0, "Wrong size on ABearTrap");
static_assert(offsetof(ABearTrap, _interactionVolume) == 0x0004B8, "Member 'ABearTrap::_interactionVolume' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapPlayerDetectionZone) == 0x0004C0, "Member 'ABearTrap::_trapPlayerDetectionZone' has a wrong offset!");
static_assert(offsetof(ABearTrap, _killerSafetyZoneComponent) == 0x0004C8, "Member 'ABearTrap::_killerSafetyZoneComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _outlineComponent) == 0x0004D0, "Member 'ABearTrap::_outlineComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _outlineUpdateStrategy) == 0x0004D8, "Member 'ABearTrap::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mapActorComponent) == 0x0004E0, "Member 'ABearTrap::_mapActorComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mapActorCollision) == 0x0004E8, "Member 'ABearTrap::_mapActorCollision' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapBlocker) == 0x0004F0, "Member 'ABearTrap::_trapBlocker' has a wrong offset!");
static_assert(offsetof(ABearTrap, _montagePlayer) == 0x0004F8, "Member 'ABearTrap::_montagePlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _onIsTrapSetChanged) == 0x000500, "Member 'ABearTrap::_onIsTrapSetChanged' has a wrong offset!");
static_assert(offsetof(ABearTrap, _ownerPlayer) == 0x000510, "Member 'ABearTrap::_ownerPlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _dangerNavModifierComponent) == 0x000518, "Member 'ABearTrap::_dangerNavModifierComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _isTrapperOutOfSafetyZone) == 0x000520, "Member 'ABearTrap::_isTrapperOutOfSafetyZone' has a wrong offset!");
static_assert(offsetof(ABearTrap, _maximumAttemptsForSelfUntrap) == 0x000524, "Member 'ABearTrap::_maximumAttemptsForSelfUntrap' has a wrong offset!");
static_assert(offsetof(ABearTrap, _selfUntrapAttemptsRemaining) == 0x000528, "Member 'ABearTrap::_selfUntrapAttemptsRemaining' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mainInteractor) == 0x000530, "Member 'ABearTrap::_mainInteractor' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapSurvivor) == 0x000538, "Member 'ABearTrap::_trapSurvivor' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapKiller) == 0x000540, "Member 'ABearTrap::_trapKiller' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trappedPlayer) == 0x000548, "Member 'ABearTrap::_trappedPlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _animationMontageSlave) == 0x0005A8, "Member 'ABearTrap::_animationMontageSlave' has a wrong offset!");

// Class TheTrapper.BearTrapAnimInstance
// 0x0000 (0x02D0 - 0x02D0)
class UBearTrapAnimInstance final : public USleepingAnimInstance
{
public:
	bool                                          _isBeingCollected;                                 // 0x02C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _containsSurvivor;                                 // 0x02C9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isTrapSet;                                        // 0x02CA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wasJustDisarmed;                                  // 0x02CB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetContainsSurvivor(bool containsSurvivor);
	void SetIsBeingCollected(bool isBeingCollected);
	void SetIsTrapSet(bool isTrapSet);
	void SetWasJustDisarmed(bool wasJustDisarmed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrapAnimInstance">();
	}
	static class UBearTrapAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBearTrapAnimInstance>();
	}
};
static_assert(alignof(UBearTrapAnimInstance) == 0x000010, "Wrong alignment on UBearTrapAnimInstance");
static_assert(sizeof(UBearTrapAnimInstance) == 0x0002D0, "Wrong size on UBearTrapAnimInstance");
static_assert(offsetof(UBearTrapAnimInstance, _isBeingCollected) == 0x0002C8, "Member 'UBearTrapAnimInstance::_isBeingCollected' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _containsSurvivor) == 0x0002C9, "Member 'UBearTrapAnimInstance::_containsSurvivor' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _isTrapSet) == 0x0002CA, "Member 'UBearTrapAnimInstance::_isTrapSet' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _wasJustDisarmed) == 0x0002CB, "Member 'UBearTrapAnimInstance::_wasJustDisarmed' has a wrong offset!");

// Class TheTrapper.BearTrapKillerComponent
// 0x0000 (0x00B8 - 0x00B8)
class UBearTrapKillerComponent final : public UActorComponent
{
public:
	void Multicast_DisarmTrap(class ABearTrap* trapToDisarm);
	void Server_TryDisarmTrap(class ABearTrap* trapToDisarm);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrapKillerComponent">();
	}
	static class UBearTrapKillerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBearTrapKillerComponent>();
	}
};
static_assert(alignof(UBearTrapKillerComponent) == 0x000008, "Wrong alignment on UBearTrapKillerComponent");
static_assert(sizeof(UBearTrapKillerComponent) == 0x0000B8, "Wrong size on UBearTrapKillerComponent");

// Class TheTrapper.DisarmBearTrapInteraction
// 0x0030 (0x0770 - 0x0740)
class UDisarmBearTrapInteraction final : public UChargeableInteractionDefinition
{
public:
	float                                         _averageMaxVelocity;                               // 0x0740(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _averageMaxVelocitySquared;                        // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateMontageID;                                  // 0x0748(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _loudNoiseAudibleRangeTunable;                     // 0x0754(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_760[0x10];                                     // 0x0760(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisarmBearTrapInteraction">();
	}
	static class UDisarmBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmBearTrapInteraction>();
	}
};
static_assert(alignof(UDisarmBearTrapInteraction) == 0x000010, "Wrong alignment on UDisarmBearTrapInteraction");
static_assert(sizeof(UDisarmBearTrapInteraction) == 0x000770, "Wrong size on UDisarmBearTrapInteraction");
static_assert(offsetof(UDisarmBearTrapInteraction, _averageMaxVelocity) == 0x000740, "Member 'UDisarmBearTrapInteraction::_averageMaxVelocity' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _averageMaxVelocitySquared) == 0x000744, "Member 'UDisarmBearTrapInteraction::_averageMaxVelocitySquared' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _updateMontageID) == 0x000748, "Member 'UDisarmBearTrapInteraction::_updateMontageID' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _loudNoiseAudibleRangeTunable) == 0x000754, "Member 'UDisarmBearTrapInteraction::_loudNoiseAudibleRangeTunable' has a wrong offset!");

// Class TheTrapper.IridescentStone
// 0x0000 (0x02B8 - 0x02B8)
class UIridescentStone final : public UItemAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IridescentStone">();
	}
	static class UIridescentStone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIridescentStone>();
	}
};
static_assert(alignof(UIridescentStone) == 0x000008, "Wrong alignment on UIridescentStone");
static_assert(sizeof(UIridescentStone) == 0x0002B8, "Wrong size on UIridescentStone");

// Class TheTrapper.ResetBearTrapInteraction
// 0x0090 (0x07D0 - 0x0740)
class UResetBearTrapInteraction final : public UChargeableInteractionDefinition
{
public:
	class FName                                   _enterMontageIDForBeartrap;                        // 0x0740(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _udpateMontageIDForBeartrap;                       // 0x074C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          _updateSequenceForBeartrap;                        // 0x0758(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _exitMontageForIDBeartrap;                         // 0x0760(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _cancelExitMontage;                                // 0x076C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_778[0x58];                                     // 0x0778(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResetBearTrapInteraction">();
	}
	static class UResetBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResetBearTrapInteraction>();
	}
};
static_assert(alignof(UResetBearTrapInteraction) == 0x000010, "Wrong alignment on UResetBearTrapInteraction");
static_assert(sizeof(UResetBearTrapInteraction) == 0x0007D0, "Wrong size on UResetBearTrapInteraction");
static_assert(offsetof(UResetBearTrapInteraction, _enterMontageIDForBeartrap) == 0x000740, "Member 'UResetBearTrapInteraction::_enterMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _udpateMontageIDForBeartrap) == 0x00074C, "Member 'UResetBearTrapInteraction::_udpateMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _updateSequenceForBeartrap) == 0x000758, "Member 'UResetBearTrapInteraction::_updateSequenceForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _exitMontageForIDBeartrap) == 0x000760, "Member 'UResetBearTrapInteraction::_exitMontageForIDBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _cancelExitMontage) == 0x00076C, "Member 'UResetBearTrapInteraction::_cancelExitMontage' has a wrong offset!");

// Class TheTrapper.SelfUntrap
// 0x00B0 (0x07F0 - 0x0740)
class USelfUntrap final : public UChargeableInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _trapImmunityDuration;                             // 0x0740(0x0028)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeHealthy;                          // 0x0768(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeInjured;                          // 0x0788(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeCrawling;                         // 0x07A8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _failedEscape;                                     // 0x07C8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_7E8[0x1];                                      // 0x07E8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _canEscape;                                        // 0x07E9(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7EA[0x6];                                      // 0x07EA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SelfUntrap">();
	}
	static class USelfUntrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfUntrap>();
	}
};
static_assert(alignof(USelfUntrap) == 0x000010, "Wrong alignment on USelfUntrap");
static_assert(sizeof(USelfUntrap) == 0x0007F0, "Wrong size on USelfUntrap");
static_assert(offsetof(USelfUntrap, _trapImmunityDuration) == 0x000740, "Member 'USelfUntrap::_trapImmunityDuration' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeHealthy) == 0x000768, "Member 'USelfUntrap::_successfulEscapeHealthy' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeInjured) == 0x000788, "Member 'USelfUntrap::_successfulEscapeInjured' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeCrawling) == 0x0007A8, "Member 'USelfUntrap::_successfulEscapeCrawling' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _failedEscape) == 0x0007C8, "Member 'USelfUntrap::_failedEscape' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _canEscape) == 0x0007E9, "Member 'USelfUntrap::_canEscape' has a wrong offset!");

// Class TheTrapper.SetBearTrap
// 0x0060 (0x0800 - 0x07A0)
class USetBearTrap final : public USetTrapInteraction
{
public:
	class FName                                   _enterMontageIDForBeartrap;                        // 0x07A0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _udpateMontageIDForBeartrap;                       // 0x07AC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          _updateSequenceForBeartrap;                        // 0x07B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _exitMontageForIDBeartrap;                         // 0x07C0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _cancelExitMontage;                                // 0x07CC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7D8[0x28];                                     // 0x07D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetBearTrap">();
	}
	static class USetBearTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetBearTrap>();
	}
};
static_assert(alignof(USetBearTrap) == 0x000010, "Wrong alignment on USetBearTrap");
static_assert(sizeof(USetBearTrap) == 0x000800, "Wrong size on USetBearTrap");
static_assert(offsetof(USetBearTrap, _enterMontageIDForBeartrap) == 0x0007A0, "Member 'USetBearTrap::_enterMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _udpateMontageIDForBeartrap) == 0x0007AC, "Member 'USetBearTrap::_udpateMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _updateSequenceForBeartrap) == 0x0007B8, "Member 'USetBearTrap::_updateSequenceForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _exitMontageForIDBeartrap) == 0x0007C0, "Member 'USetBearTrap::_exitMontageForIDBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _cancelExitMontage) == 0x0007CC, "Member 'USetBearTrap::_cancelExitMontage' has a wrong offset!");

// Class TheTrapper.SlashedOutOfBearTrapInteraction
// 0x0010 (0x0630 - 0x0620)
class USlashedOutOfBearTrapInteraction final : public UInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x0618(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                           _updateMontage;                                    // 0x0628(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SlashedOutOfBearTrapInteraction">();
	}
	static class USlashedOutOfBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlashedOutOfBearTrapInteraction>();
	}
};
static_assert(alignof(USlashedOutOfBearTrapInteraction) == 0x000010, "Wrong alignment on USlashedOutOfBearTrapInteraction");
static_assert(sizeof(USlashedOutOfBearTrapInteraction) == 0x000630, "Wrong size on USlashedOutOfBearTrapInteraction");
static_assert(offsetof(USlashedOutOfBearTrapInteraction, _overridableInteractions) == 0x000618, "Member 'USlashedOutOfBearTrapInteraction::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(USlashedOutOfBearTrapInteraction, _updateMontage) == 0x000628, "Member 'USlashedOutOfBearTrapInteraction::_updateMontage' has a wrong offset!");

// Class TheTrapper.SurvivorBearTrapAnimInstance
// 0x0010 (0x0560 - 0x0550)
class USurvivorBearTrapAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_548[0x8];                                      // 0x0548(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isTrapped;                                        // 0x0550(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInteractionAnimation                         _interactionType;                                  // 0x0551(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_552[0xE];                                      // 0x0552(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorBearTrapAnimInstance">();
	}
	static class USurvivorBearTrapAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorBearTrapAnimInstance>();
	}
};
static_assert(alignof(USurvivorBearTrapAnimInstance) == 0x000010, "Wrong alignment on USurvivorBearTrapAnimInstance");
static_assert(sizeof(USurvivorBearTrapAnimInstance) == 0x000560, "Wrong size on USurvivorBearTrapAnimInstance");
static_assert(offsetof(USurvivorBearTrapAnimInstance, _isTrapped) == 0x000550, "Member 'USurvivorBearTrapAnimInstance::_isTrapped' has a wrong offset!");
static_assert(offsetof(USurvivorBearTrapAnimInstance, _interactionType) == 0x000551, "Member 'USurvivorBearTrapAnimInstance::_interactionType' has a wrong offset!");

// Class TheTrapper.TrapCamperInteraction
// 0x0080 (0x06A0 - 0x0620)
class UTrapCamperInteraction final : public UInteractionDefinition
{
public:
	TArray<class FString>                         _nonOverridableInteractions;                       // 0x0618(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _trapAttachSocket;                                 // 0x0628(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateMontageID;                                  // 0x0634(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateNoScreamMontageID;                          // 0x0640(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _loudNoiseRangeTunable;                            // 0x0650(0x0028)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _hemorrhageEffectDurationTunable;                  // 0x0678(0x0028)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapCamperInteraction">();
	}
	static class UTrapCamperInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapCamperInteraction>();
	}
};
static_assert(alignof(UTrapCamperInteraction) == 0x000010, "Wrong alignment on UTrapCamperInteraction");
static_assert(sizeof(UTrapCamperInteraction) == 0x0006A0, "Wrong size on UTrapCamperInteraction");
static_assert(offsetof(UTrapCamperInteraction, _nonOverridableInteractions) == 0x000618, "Member 'UTrapCamperInteraction::_nonOverridableInteractions' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _trapAttachSocket) == 0x000628, "Member 'UTrapCamperInteraction::_trapAttachSocket' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _updateMontageID) == 0x000634, "Member 'UTrapCamperInteraction::_updateMontageID' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _updateNoScreamMontageID) == 0x000640, "Member 'UTrapCamperInteraction::_updateNoScreamMontageID' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _loudNoiseRangeTunable) == 0x000650, "Member 'UTrapCamperInteraction::_loudNoiseRangeTunable' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _hemorrhageEffectDurationTunable) == 0x000678, "Member 'UTrapCamperInteraction::_hemorrhageEffectDurationTunable' has a wrong offset!");

// Class TheTrapper.TrapKillerInteraction
// 0x0060 (0x0680 - 0x0620)
class UTrapKillerInteraction final : public UInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x0618(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               _caughtFootRotationOffset;                         // 0x0628(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _openNotifyID;                                     // 0x0634(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _footSocketName;                                   // 0x0640(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64C[0x34];                                     // 0x064C(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapKillerInteraction">();
	}
	static class UTrapKillerInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapKillerInteraction>();
	}
};
static_assert(alignof(UTrapKillerInteraction) == 0x000010, "Wrong alignment on UTrapKillerInteraction");
static_assert(sizeof(UTrapKillerInteraction) == 0x000680, "Wrong size on UTrapKillerInteraction");
static_assert(offsetof(UTrapKillerInteraction, _overridableInteractions) == 0x000618, "Member 'UTrapKillerInteraction::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _caughtFootRotationOffset) == 0x000628, "Member 'UTrapKillerInteraction::_caughtFootRotationOffset' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _openNotifyID) == 0x000634, "Member 'UTrapKillerInteraction::_openNotifyID' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _footSocketName) == 0x000640, "Member 'UTrapKillerInteraction::_footSocketName' has a wrong offset!");

// Class TheTrapper.TrapperAnimInstance
// 0x0000 (0x0600 - 0x0600)
class UTrapperAnimInstance final : public UKillerAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapperAnimInstance">();
	}
	static class UTrapperAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapperAnimInstance>();
	}
};
static_assert(alignof(UTrapperAnimInstance) == 0x000010, "Wrong alignment on UTrapperAnimInstance");
static_assert(sizeof(UTrapperAnimInstance) == 0x000600, "Wrong size on UTrapperAnimInstance");

// Class TheTrapper.Untrap
// 0x0030 (0x0770 - 0x0740)
class UUntrap final : public UChargeableInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x0740(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _bearTrapUpdateMontageID;                          // 0x0750(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _bearTrapFinishMontageID;                          // 0x075C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_768[0x8];                                      // 0x0768(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ABearTrap* GetTrap() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Untrap">();
	}
	static class UUntrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUntrap>();
	}
};
static_assert(alignof(UUntrap) == 0x000010, "Wrong alignment on UUntrap");
static_assert(sizeof(UUntrap) == 0x000770, "Wrong size on UUntrap");
static_assert(offsetof(UUntrap, _overridableInteractions) == 0x000740, "Member 'UUntrap::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(UUntrap, _bearTrapUpdateMontageID) == 0x000750, "Member 'UUntrap::_bearTrapUpdateMontageID' has a wrong offset!");
static_assert(offsetof(UUntrap, _bearTrapFinishMontageID) == 0x00075C, "Member 'UUntrap::_bearTrapFinishMontageID' has a wrong offset!");

}

