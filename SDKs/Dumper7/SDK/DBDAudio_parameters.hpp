#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAudio

#include "Basic.hpp"


namespace SDK::Params
{

// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBank
// 0x0008 (0x0008 - 0x0000)
struct AudioUtilities_DBD_LoadPersistentBank final
{
public:
	class UAkAudioBank*                           bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioUtilities_DBD_LoadPersistentBank) == 0x000008, "Wrong alignment on AudioUtilities_DBD_LoadPersistentBank");
static_assert(sizeof(AudioUtilities_DBD_LoadPersistentBank) == 0x000008, "Wrong size on AudioUtilities_DBD_LoadPersistentBank");
static_assert(offsetof(AudioUtilities_DBD_LoadPersistentBank, bank) == 0x000000, "Member 'AudioUtilities_DBD_LoadPersistentBank::bank' has a wrong offset!");

// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBankAsync
// 0x0008 (0x0008 - 0x0000)
struct AudioUtilities_DBD_LoadPersistentBankAsync final
{
public:
	class UAkAudioBank*                           bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioUtilities_DBD_LoadPersistentBankAsync) == 0x000008, "Wrong alignment on AudioUtilities_DBD_LoadPersistentBankAsync");
static_assert(sizeof(AudioUtilities_DBD_LoadPersistentBankAsync) == 0x000008, "Wrong size on AudioUtilities_DBD_LoadPersistentBankAsync");
static_assert(offsetof(AudioUtilities_DBD_LoadPersistentBankAsync, bank) == 0x000000, "Member 'AudioUtilities_DBD_LoadPersistentBankAsync::bank' has a wrong offset!");

// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBankByAssetPtr
// 0x0038 (0x0038 - 0x0000)
struct AudioUtilities_DBD_LoadPersistentBankByAssetPtr final
{
public:
	TSoftObjectPtr<class UAkAudioBank>            bank;                                              // 0x0000(0x0030)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioUtilities_DBD_LoadPersistentBankByAssetPtr) == 0x000008, "Wrong alignment on AudioUtilities_DBD_LoadPersistentBankByAssetPtr");
static_assert(sizeof(AudioUtilities_DBD_LoadPersistentBankByAssetPtr) == 0x000038, "Wrong size on AudioUtilities_DBD_LoadPersistentBankByAssetPtr");
static_assert(offsetof(AudioUtilities_DBD_LoadPersistentBankByAssetPtr, bank) == 0x000000, "Member 'AudioUtilities_DBD_LoadPersistentBankByAssetPtr::bank' has a wrong offset!");
static_assert(offsetof(AudioUtilities_DBD_LoadPersistentBankByAssetPtr, ReturnValue) == 0x000030, "Member 'AudioUtilities_DBD_LoadPersistentBankByAssetPtr::ReturnValue' has a wrong offset!");

// Function DBDAudio.AudioUtilities.DBD_PostUiEvent
// 0x0008 (0x0008 - 0x0000)
struct AudioUtilities_DBD_PostUiEvent final
{
public:
	class UAkAudioEvent*                          event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioUtilities_DBD_PostUiEvent) == 0x000008, "Wrong alignment on AudioUtilities_DBD_PostUiEvent");
static_assert(sizeof(AudioUtilities_DBD_PostUiEvent) == 0x000008, "Wrong size on AudioUtilities_DBD_PostUiEvent");
static_assert(offsetof(AudioUtilities_DBD_PostUiEvent, event) == 0x000000, "Member 'AudioUtilities_DBD_PostUiEvent::event' has a wrong offset!");

// Function DBDAudio.AudioUtilities.PostAkAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct AudioUtilities_PostAkAudioEvent final
{
public:
	class UAkAudioEvent*                          audioEvent;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioUtilities_PostAkAudioEvent) == 0x000008, "Wrong alignment on AudioUtilities_PostAkAudioEvent");
static_assert(sizeof(AudioUtilities_PostAkAudioEvent) == 0x000008, "Wrong size on AudioUtilities_PostAkAudioEvent");
static_assert(offsetof(AudioUtilities_PostAkAudioEvent, audioEvent) == 0x000000, "Member 'AudioUtilities_PostAkAudioEvent::audioEvent' has a wrong offset!");

// Function DBDAudio.InteractionAudioComponent.PostAkEvent
// 0x0010 (0x0010 - 0x0000)
struct InteractionAudioComponent_PostAkEvent final
{
public:
	class UAkAudioEvent*                          akEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InteractionAudioComponent_PostAkEvent) == 0x000008, "Wrong alignment on InteractionAudioComponent_PostAkEvent");
static_assert(sizeof(InteractionAudioComponent_PostAkEvent) == 0x000010, "Wrong size on InteractionAudioComponent_PostAkEvent");
static_assert(offsetof(InteractionAudioComponent_PostAkEvent, akEvent) == 0x000000, "Member 'InteractionAudioComponent_PostAkEvent::akEvent' has a wrong offset!");
static_assert(offsetof(InteractionAudioComponent_PostAkEvent, ReturnValue) == 0x000008, "Member 'InteractionAudioComponent_PostAkEvent::ReturnValue' has a wrong offset!");

}

