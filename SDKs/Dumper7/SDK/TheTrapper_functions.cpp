#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheTrapper

#include "Basic.hpp"

#include "TheTrapper_classes.hpp"
#include "TheTrapper_parameters.hpp"


namespace SDK
{

// Function TheTrapper.BearTrap.Cosmetic_OnPlayerTrapped
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       trappedPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::Cosmetic_OnPlayerTrapped(class ADBDPlayer* trappedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "Cosmetic_OnPlayerTrapped");

	Params::BearTrap_Cosmetic_OnPlayerTrapped Parms{};

	Parms.trappedPlayer = trappedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheTrapper.BearTrap.InitializeMainInteractor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractor*                      interactor                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::InitializeMainInteractor(class UInteractor* interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "InitializeMainInteractor");

	Params::BearTrap_InitializeMainInteractor Parms{};

	Parms.interactor = interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.InitializeTrapKillerInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*           interaction                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::InitializeTrapKillerInteraction(class UInteractionDefinition* interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "InitializeTrapKillerInteraction");

	Params::BearTrap_InitializeTrapKillerInteraction Parms{};

	Parms.interaction = interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.InitializeTrapSurvivorInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInteractionDefinition*           interaction                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::InitializeTrapSurvivorInteraction(class UInteractionDefinition* interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "InitializeTrapSurvivorInteraction");

	Params::BearTrap_InitializeTrapSurvivorInteraction Parms{};

	Parms.interaction = interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnCollectUpdateEnd
// (Final, Native, Private)

void ABearTrap::OnCollectUpdateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnCollectUpdateEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnCollectUpdateStart
// (Final, Native, Private)

void ABearTrap::OnCollectUpdateStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnCollectUpdateStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnLevelReadyToPlay_Implementation
// (Final, Native, Private)

void ABearTrap::OnLevelReadyToPlay_Implementation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnLevelReadyToPlay_Implementation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnSafetyZoneEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::OnSafetyZoneEndOverlap(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnSafetyZoneEndOverlap");

	Params::BearTrap_OnSafetyZoneEndOverlap Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnSlasherSet
// (Final, Native, Protected)
// Parameters:
// class ASlasherPlayer*                   slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::OnSlasherSet(class ASlasherPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnSlasherSet");

	Params::BearTrap_OnSlasherSet Parms{};

	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnTrapDetectionZoneOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABearTrap::OnTrapDetectionZoneOverlapBegin(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnTrapDetectionZoneOverlapBegin");

	Params::BearTrap_OnTrapDetectionZoneOverlapBegin Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnTrapDetectionZoneOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::OnTrapDetectionZoneOverlapEnd(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnTrapDetectionZoneOverlapEnd");

	Params::BearTrap_OnTrapDetectionZoneOverlapEnd Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.OnTrappedPlayerPickedUp
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       picker                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::OnTrappedPlayerPickedUp(class ADBDPlayer* picker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "OnTrappedPlayerPickedUp");

	Params::BearTrap_OnTrappedPlayerPickedUp Parms{};

	Parms.picker = picker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.SetTrappedPlayer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       trappedPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::SetTrappedPlayer(class ADBDPlayer* trappedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "SetTrappedPlayer");

	Params::BearTrap_SetTrappedPlayer Parms{};

	Parms.trappedPlayer = trappedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.SetTrappedPlayerSinceMoved
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    didTrap                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::SetTrappedPlayerSinceMoved(bool didTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "SetTrappedPlayerSinceMoved");

	Params::BearTrap_SetTrappedPlayerSinceMoved Parms{};

	Parms.didTrap = didTrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.TrySetTrappedPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::TrySetTrappedPlayer(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "TrySetTrappedPlayer");

	Params::BearTrap_TrySetTrappedPlayer Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrap.GetAkAudioComponent
// (Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAkComponent*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* ABearTrap::GetAkAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "GetAkAudioComponent");

	Params::BearTrap_GetAkAudioComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.GetAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBearTrapAnimInstance*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBearTrapAnimInstance* ABearTrap::GetAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "GetAnimInstance");

	Params::BearTrap_GetAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.GetTrappedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADBDPlayer* ABearTrap::GetTrappedPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "GetTrappedPlayer");

	Params::BearTrap_GetTrappedPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.HasTrappedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABearTrap::HasTrappedPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "HasTrappedPlayer");

	Params::BearTrap_HasTrappedPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.HasTrappedPlayerSinceMoved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABearTrap::HasTrappedPlayerSinceMoved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "HasTrappedPlayerSinceMoved");

	Params::BearTrap_HasTrappedPlayerSinceMoved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.IsTrapperOutOfSafetyZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABearTrap::IsTrapperOutOfSafetyZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "IsTrapperOutOfSafetyZone");

	Params::BearTrap_IsTrapperOutOfSafetyZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheTrapper.BearTrap.PlayMontage
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UAnimMontage*                     montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABearTrap::PlayMontage(class UAnimMontage* montage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrap", "PlayMontage");

	Params::BearTrap_PlayMontage Parms{};

	Parms.montage = montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapAnimInstance.SetContainsSurvivor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    containsSurvivor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapAnimInstance::SetContainsSurvivor(bool containsSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapAnimInstance", "SetContainsSurvivor");

	Params::BearTrapAnimInstance_SetContainsSurvivor Parms{};

	Parms.containsSurvivor = containsSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapAnimInstance.SetIsBeingCollected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isBeingCollected                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapAnimInstance::SetIsBeingCollected(bool isBeingCollected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapAnimInstance", "SetIsBeingCollected");

	Params::BearTrapAnimInstance_SetIsBeingCollected Parms{};

	Parms.isBeingCollected = isBeingCollected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapAnimInstance.SetIsTrapSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isTrapSet                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapAnimInstance::SetIsTrapSet(bool isTrapSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapAnimInstance", "SetIsTrapSet");

	Params::BearTrapAnimInstance_SetIsTrapSet Parms{};

	Parms.isTrapSet = isTrapSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapAnimInstance.SetWasJustDisarmed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    wasJustDisarmed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapAnimInstance::SetWasJustDisarmed(bool wasJustDisarmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapAnimInstance", "SetWasJustDisarmed");

	Params::BearTrapAnimInstance_SetWasJustDisarmed Parms{};

	Parms.wasJustDisarmed = wasJustDisarmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapKillerComponent.Multicast_DisarmTrap
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ABearTrap*                        trapToDisarm                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapKillerComponent::Multicast_DisarmTrap(class ABearTrap* trapToDisarm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapKillerComponent", "Multicast_DisarmTrap");

	Params::BearTrapKillerComponent_Multicast_DisarmTrap Parms{};

	Parms.trapToDisarm = trapToDisarm;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.BearTrapKillerComponent.Server_TryDisarmTrap
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class ABearTrap*                        trapToDisarm                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBearTrapKillerComponent::Server_TryDisarmTrap(class ABearTrap* trapToDisarm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BearTrapKillerComponent", "Server_TryDisarmTrap");

	Params::BearTrapKillerComponent_Server_TryDisarmTrap Parms{};

	Parms.trapToDisarm = trapToDisarm;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheTrapper.Untrap.GetTrap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABearTrap*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABearTrap* UUntrap::GetTrap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Untrap", "GetTrap");

	Params::Untrap_GetTrap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

