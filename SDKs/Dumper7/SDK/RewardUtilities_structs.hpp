#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardUtilities

#include "Basic.hpp"


namespace SDK
{

// Enum RewardUtilities.ERewardItemType
// NumValues: 0x0004
enum class ERewardItemType : uint8
{
	None                                     = 0,
	Currency                                 = 1,
	Inventory                                = 2,
	ERewardItemType_MAX                      = 3,
};

// ScriptStruct RewardUtilities.RewardItem
// 0x0020 (0x0020 - 0x0000)
struct FRewardItem final
{
public:
	ERewardItemType                               Type;                                              // 0x0000(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Id;                                                // 0x0008(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRewardItem) == 0x000008, "Wrong alignment on FRewardItem");
static_assert(sizeof(FRewardItem) == 0x000020, "Wrong size on FRewardItem");
static_assert(offsetof(FRewardItem, Type) == 0x000000, "Member 'FRewardItem::Type' has a wrong offset!");
static_assert(offsetof(FRewardItem, Id) == 0x000008, "Member 'FRewardItem::Id' has a wrong offset!");
static_assert(offsetof(FRewardItem, Amount) == 0x000018, "Member 'FRewardItem::Amount' has a wrong offset!");

}

