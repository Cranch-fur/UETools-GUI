#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Achievements

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function Achievements.OnGameEventAchievement.OnScoreTypeEvent
// 0x0018 (0x0018 - 0x0000)
struct OnGameEventAchievement_OnScoreTypeEvent final
{
public:
	EDBDScoreTypes                                scoreType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         amount;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 instigator;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 target;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnGameEventAchievement_OnScoreTypeEvent) == 0x000008, "Wrong alignment on OnGameEventAchievement_OnScoreTypeEvent");
static_assert(sizeof(OnGameEventAchievement_OnScoreTypeEvent) == 0x000018, "Wrong size on OnGameEventAchievement_OnScoreTypeEvent");
static_assert(offsetof(OnGameEventAchievement_OnScoreTypeEvent, scoreType) == 0x000000, "Member 'OnGameEventAchievement_OnScoreTypeEvent::scoreType' has a wrong offset!");
static_assert(offsetof(OnGameEventAchievement_OnScoreTypeEvent, amount) == 0x000004, "Member 'OnGameEventAchievement_OnScoreTypeEvent::amount' has a wrong offset!");
static_assert(offsetof(OnGameEventAchievement_OnScoreTypeEvent, instigator) == 0x000008, "Member 'OnGameEventAchievement_OnScoreTypeEvent::instigator' has a wrong offset!");
static_assert(offsetof(OnGameEventAchievement_OnScoreTypeEvent, target) == 0x000010, "Member 'OnGameEventAchievement_OnScoreTypeEvent::target' has a wrong offset!");

}

