#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PanoramaCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PanoramaCamera.BP_PanoramaCamera_C.ExecuteUbergraph_BP_PanoramaCamera
// 0x0050 (0x0050 - 0x0000)
struct BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Quality_Level;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Rotation_Step;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera) == 0x000004, "Wrong alignment on BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera");
static_assert(sizeof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera) == 0x000050, "Wrong size on BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, EntryPoint) == 0x000000, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, Temp_int_Variable) == 0x000004, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, K2Node_CustomEvent_Quality_Level) == 0x00000C, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::K2Node_CustomEvent_Quality_Level' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, K2Node_CustomEvent_Rotation_Step) == 0x000010, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::K2Node_CustomEvent_Rotation_Step' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_Round_ReturnValue) == 0x000018, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00004C, "Member 'BP_PanoramaCamera_C_ExecuteUbergraph_BP_PanoramaCamera::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_PanoramaCamera.BP_PanoramaCamera_C.Event Create Panorama Shot
// 0x0008 (0x0008 - 0x0000)
struct BP_PanoramaCamera_C_Event_Create_Panorama_Shot final
{
public:
	int32                                         Quality_Level;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Step;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PanoramaCamera_C_Event_Create_Panorama_Shot) == 0x000004, "Wrong alignment on BP_PanoramaCamera_C_Event_Create_Panorama_Shot");
static_assert(sizeof(BP_PanoramaCamera_C_Event_Create_Panorama_Shot) == 0x000008, "Wrong size on BP_PanoramaCamera_C_Event_Create_Panorama_Shot");
static_assert(offsetof(BP_PanoramaCamera_C_Event_Create_Panorama_Shot, Quality_Level) == 0x000000, "Member 'BP_PanoramaCamera_C_Event_Create_Panorama_Shot::Quality_Level' has a wrong offset!");
static_assert(offsetof(BP_PanoramaCamera_C_Event_Create_Panorama_Shot, Rotation_Step) == 0x000004, "Member 'BP_PanoramaCamera_C_Event_Create_Panorama_Shot::Rotation_Step' has a wrong offset!");

}

