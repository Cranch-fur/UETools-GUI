#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SnowmanWinterEvent

#include "Basic.hpp"

#include "SnowmanWinterEvent_classes.hpp"
#include "SnowmanWinterEvent_parameters.hpp"


namespace SDK
{

// Function SnowmanWinterEvent.HideInSnowmanInteraction.Multicast_StartControllingSnowman
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHideInSnowmanInteraction::Multicast_StartControllingSnowman(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HideInSnowmanInteraction", "Multicast_StartControllingSnowman");

	Params::HideInSnowmanInteraction_Multicast_StartControllingSnowman Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.HideInSnowmanInteraction.Multicast_StopControllingSnowman
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHideInSnowmanInteraction::Multicast_StopControllingSnowman(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HideInSnowmanInteraction", "Multicast_StopControllingSnowman");

	Params::HideInSnowmanInteraction_Multicast_StopControllingSnowman Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Authority_OnSnowmanHandOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              hitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASnowman::Authority_OnSnowmanHandOverlapBegin(class UPrimitiveComponent* hitComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Authority_OnSnowmanHandOverlapBegin");

	Params::Snowman_Authority_OnSnowmanHandOverlapBegin Parms{};

	Parms.hitComponent = hitComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Authority_OnSnowmanHandOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              hitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Authority_OnSnowmanHandOverlapEnd(class UPrimitiveComponent* hitComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Authority_OnSnowmanHandOverlapEnd");

	Params::Snowman_Authority_OnSnowmanHandOverlapEnd Parms{};

	Parms.hitComponent = hitComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForKiller
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killerAttackingSnowman                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForKiller(class ASlasherPlayer* killerAttackingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForKiller");

	Params::Snowman_Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForKiller Parms{};

	Parms.killerAttackingSnowman = killerAttackingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForSurvivor(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForSurvivor");

	Params::Snowman_Cosmetic_OnCosmeticUnlockRequirementsSatisfiedForSurvivor Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanDestroyedByAttackWhileControlled
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASlasherPlayer*                   killerAttackingSnowman                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanDestroyedByAttackWhileControlled(class ACamperPlayer* survivorUsingSnowman, class ASlasherPlayer* killerAttackingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanDestroyedByAttackWhileControlled");

	Params::Snowman_Cosmetic_OnSnowmanDestroyedByAttackWhileControlled Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;
	Parms.killerAttackingSnowman = killerAttackingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanDestroyedByAttackWhileEmpty
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killerAttackingSnowman                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanDestroyedByAttackWhileEmpty(class ASlasherPlayer* killerAttackingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanDestroyedByAttackWhileEmpty");

	Params::Snowman_Cosmetic_OnSnowmanDestroyedByAttackWhileEmpty Parms{};

	Parms.killerAttackingSnowman = killerAttackingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanDestroyedByKillerAttackExit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killerUsingSnowman                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanDestroyedByKillerAttackExit(class ASlasherPlayer* killerUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanDestroyedByKillerAttackExit");

	Params::Snowman_Cosmetic_OnSnowmanDestroyedByKillerAttackExit Parms{};

	Parms.killerUsingSnowman = killerUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanDestroyedByKillerCancelExit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ASnowman::Cosmetic_OnSnowmanDestroyedByKillerCancelExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanDestroyedByKillerCancelExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanDestroyedBySurvivorRunExit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanDestroyedBySurvivorRunExit(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanDestroyedBySurvivorRunExit");

	Params::Snowman_Cosmetic_OnSnowmanDestroyedBySurvivorRunExit Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanHighFive
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASnowman*                         otherSnowman                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanHighFive(class ASnowman* otherSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanHighFive");

	Params::Snowman_Cosmetic_OnSnowmanHighFive Parms{};

	Parms.otherSnowman = otherSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanSpawned
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ASnowman::Cosmetic_OnSnowmanSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanStartBeingControlledByKiller
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killerUsingSnowman                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanStartBeingControlledByKiller(class ASlasherPlayer* killerUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanStartBeingControlledByKiller");

	Params::Snowman_Cosmetic_OnSnowmanStartBeingControlledByKiller Parms{};

	Parms.killerUsingSnowman = killerUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanStartBeingControlledBySurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanStartBeingControlledBySurvivor(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanStartBeingControlledBySurvivor");

	Params::Snowman_Cosmetic_OnSnowmanStartBeingControlledBySurvivor Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanStartBeingUsedByKiller
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killerUsingSnowman                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanStartBeingUsedByKiller(class ASlasherPlayer* killerUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanStartBeingUsedByKiller");

	Params::Snowman_Cosmetic_OnSnowmanStartBeingUsedByKiller Parms{};

	Parms.killerUsingSnowman = killerUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_OnSnowmanStartBeingUsedBySurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_OnSnowmanStartBeingUsedBySurvivor(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_OnSnowmanStartBeingUsedBySurvivor");

	Params::Snowman_Cosmetic_OnSnowmanStartBeingUsedBySurvivor Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Cosmetic_SetSnowmanMaterialVariant
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             materialVariantIndex                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Cosmetic_SetSnowmanMaterialVariant(const int32 materialVariantIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Cosmetic_SetSnowmanMaterialVariant");

	Params::Snowman_Cosmetic_SetSnowmanMaterialVariant Parms{};

	Parms.materialVariantIndex = materialVariantIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.Snowman.Multicast_OnSnowmanStartBeingControlledByKiller
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ASlasherPlayer*                   killerUsingSnowman                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_OnSnowmanStartBeingControlledByKiller(class ASlasherPlayer* killerUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_OnSnowmanStartBeingControlledByKiller");

	Params::Snowman_Multicast_OnSnowmanStartBeingControlledByKiller Parms{};

	Parms.killerUsingSnowman = killerUsingSnowman;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_OnSnowmanStartBeingControlledBySurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_OnSnowmanStartBeingControlledBySurvivor(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_OnSnowmanStartBeingControlledBySurvivor");

	Params::Snowman_Multicast_OnSnowmanStartBeingControlledBySurvivor Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_OnSnowmanStartBeingUsedByKiller
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ASlasherPlayer*                   killerUsingSnowman                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_OnSnowmanStartBeingUsedByKiller(class ASlasherPlayer* killerUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_OnSnowmanStartBeingUsedByKiller");

	Params::Snowman_Multicast_OnSnowmanStartBeingUsedByKiller Parms{};

	Parms.killerUsingSnowman = killerUsingSnowman;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_OnSnowmanStartBeingUsedBySurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*                    survivorUsingSnowman                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_OnSnowmanStartBeingUsedBySurvivor(class ACamperPlayer* survivorUsingSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_OnSnowmanStartBeingUsedBySurvivor");

	Params::Snowman_Multicast_OnSnowmanStartBeingUsedBySurvivor Parms{};

	Parms.survivorUsingSnowman = survivorUsingSnowman;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_SetSnowmanHiddenInGame
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    isHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_SetSnowmanHiddenInGame(bool isHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_SetSnowmanHiddenInGame");

	Params::Snowman_Multicast_SetSnowmanHiddenInGame Parms{};

	Parms.isHidden = isHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_SetSnowmanMaterialVariant
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const int32                             materialVariantIndex                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_SetSnowmanMaterialVariant(const int32 materialVariantIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_SetSnowmanMaterialVariant");

	Params::Snowman_Multicast_SetSnowmanMaterialVariant Parms{};

	Parms.materialVariantIndex = materialVariantIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_SpawnSnowman
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FSnowmanSpawnData&         spawnData                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASnowman::Multicast_SpawnSnowman(const struct FSnowmanSpawnData& spawnData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_SpawnSnowman");

	Params::Snowman_Multicast_SpawnSnowman Parms{};

	Parms.spawnData = std::move(spawnData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_StartSnowmanDestruction
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// ESnowmanDestructionType                 snowmanDestructionType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    unlockRequirementsSatisfiedForSurvivor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    unlockRequirementsSatisfiedForKiller                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       playerInSnowman                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_StartSnowmanDestruction(ESnowmanDestructionType snowmanDestructionType, bool unlockRequirementsSatisfiedForSurvivor, bool unlockRequirementsSatisfiedForKiller, class ADBDPlayer* playerInSnowman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_StartSnowmanDestruction");

	Params::Snowman_Multicast_StartSnowmanDestruction Parms{};

	Parms.snowmanDestructionType = snowmanDestructionType;
	Parms.unlockRequirementsSatisfiedForSurvivor = unlockRequirementsSatisfiedForSurvivor;
	Parms.unlockRequirementsSatisfiedForKiller = unlockRequirementsSatisfiedForKiller;
	Parms.playerInSnowman = playerInSnowman;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnFinishedPlaying
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ASnowman::OnFinishedPlaying(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnFinishedPlaying");

	Params::Snowman_OnFinishedPlaying Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnRep_HighFiveFollower
// (Final, Native, Private)

void ASnowman::OnRep_HighFiveFollower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnRep_HighFiveFollower");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnRep_IsMoving
// (Final, Native, Private)

void ASnowman::OnRep_IsMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnRep_IsMoving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnRep_PlayerUsingSnowman
// (Final, Native, Private)

void ASnowman::OnRep_PlayerUsingSnowman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnRep_PlayerUsingSnowman");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnRep_SnowmanDestructionType
// (Final, Native, Private)

void ASnowman::OnRep_SnowmanDestructionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnRep_SnowmanDestructionType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.OnRep_SnowmanState
// (Final, Native, Private)

void ASnowman::OnRep_SnowmanState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "OnRep_SnowmanState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.Snowman.Multicast_DrawDebugCollisionCheck
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// const struct FVector&                   boxExtent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   debugLifetime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASnowman::Multicast_DrawDebugCollisionCheck(const struct FVector& boxExtent, float debugLifetime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snowman", "Multicast_DrawDebugCollisionCheck");

	Params::Snowman_Multicast_DrawDebugCollisionCheck Parms{};

	Parms.boxExtent = std::move(boxExtent);
	Parms.debugLifetime = debugLifetime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SnowmanAnimInstance.Cosmetic_OnSnowmanDestroyedEvent
// (BlueprintCosmetic, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESnowmanDestructionType                 snowmanDestructionType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnowmanAnimInstance::Cosmetic_OnSnowmanDestroyedEvent(ESnowmanDestructionType snowmanDestructionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanAnimInstance", "Cosmetic_OnSnowmanDestroyedEvent");

	Params::SnowmanAnimInstance_Cosmetic_OnSnowmanDestroyedEvent Parms{};

	Parms.snowmanDestructionType = snowmanDestructionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SnowmanWinterEvent.SnowmanWinterEventComponent.DBD_Winter2021ForceRespawnAllSnowmen
// (Final, Exec, Native, Private)

void USnowmanWinterEventComponent::DBD_Winter2021ForceRespawnAllSnowmen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanWinterEventComponent", "DBD_Winter2021ForceRespawnAllSnowmen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SnowmanWinterEventComponent.DBD_Winter2021RecalculateSpawnPoints
// (Final, Exec, Native, Private)

void USnowmanWinterEventComponent::DBD_Winter2021RecalculateSpawnPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanWinterEventComponent", "DBD_Winter2021RecalculateSpawnPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SnowmanWinterEventComponent.DBD_Winter2021ShowSnowmenSpawnCollisionChecks
// (Final, Exec, Native, Private)
// Parameters:
// float                                   numberOfSeconds                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnowmanWinterEventComponent::DBD_Winter2021ShowSnowmenSpawnCollisionChecks(float numberOfSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanWinterEventComponent", "DBD_Winter2021ShowSnowmenSpawnCollisionChecks");

	Params::SnowmanWinterEventComponent_DBD_Winter2021ShowSnowmenSpawnCollisionChecks Parms{};

	Parms.numberOfSeconds = numberOfSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SnowmanWinterEventComponent.DBD_Winter2021VisualizeCalculatedSpawnData
// (Final, Exec, Native, Private)
// Parameters:
// float                                   numberOfSeconds                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnowmanWinterEventComponent::DBD_Winter2021VisualizeCalculatedSpawnData(float numberOfSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanWinterEventComponent", "DBD_Winter2021VisualizeCalculatedSpawnData");

	Params::SnowmanWinterEventComponent_DBD_Winter2021VisualizeCalculatedSpawnData Parms{};

	Parms.numberOfSeconds = numberOfSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SnowmanSpawnPlacementStrategy.Authority_OnIntroCompletedOrLevelReadyToPlay
// (Final, Native, Private)

void USnowmanSpawnPlacementStrategy::Authority_OnIntroCompletedOrLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnowmanSpawnPlacementStrategy", "Authority_OnIntroCompletedOrLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SnowmanWinterEvent.SurvivorHideInSnowmanInteraction.Authority_OnDamageStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      currentDamageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorHideInSnowmanInteraction::Authority_OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState currentDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorHideInSnowmanInteraction", "Authority_OnDamageStateChanged");

	Params::SurvivorHideInSnowmanInteraction_Authority_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.currentDamageState = currentDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

