#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UITween

#include "Basic.hpp"

#include "UITween_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class UITween.UITween
// 0x0018 (0x0050 - 0x0038)
class UUITween final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUITweenInstance*>               ActiveInstances;                                   // 0x0040(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	static void Clear(class UWidget* targetWidget);
	static class UUITweenInstance* Create(class UWidget* targetWidget, float duration, float delay, EEasingType easing);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UITween">();
	}
	static class UUITween* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUITween>();
	}
};
static_assert(alignof(UUITween) == 0x000008, "Wrong alignment on UUITween");
static_assert(sizeof(UUITween) == 0x000050, "Wrong size on UUITween");
static_assert(offsetof(UUITween, ActiveInstances) == 0x000040, "Member 'UUITween::ActiveInstances' has a wrong offset!");

// Class UITween.UITweenMaterialScalarProperties
// 0x0028 (0x0058 - 0x0030)
class UUITweenMaterialScalarProperties final : public UObject
{
public:
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UITweenMaterialScalarProperties">();
	}
	static class UUITweenMaterialScalarProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUITweenMaterialScalarProperties>();
	}
};
static_assert(alignof(UUITweenMaterialScalarProperties) == 0x000008, "Wrong alignment on UUITweenMaterialScalarProperties");
static_assert(sizeof(UUITweenMaterialScalarProperties) == 0x000058, "Wrong size on UUITweenMaterialScalarProperties");
static_assert(offsetof(UUITweenMaterialScalarProperties, MaterialInstance) == 0x000030, "Member 'UUITweenMaterialScalarProperties::MaterialInstance' has a wrong offset!");

// Class UITween.UITweenMaterialVectorProperties
// 0x0048 (0x0078 - 0x0030)
class UUITweenMaterialVectorProperties final : public UObject
{
public:
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x40];                                      // 0x0038(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UITweenMaterialVectorProperties">();
	}
	static class UUITweenMaterialVectorProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUITweenMaterialVectorProperties>();
	}
};
static_assert(alignof(UUITweenMaterialVectorProperties) == 0x000008, "Wrong alignment on UUITweenMaterialVectorProperties");
static_assert(sizeof(UUITweenMaterialVectorProperties) == 0x000078, "Wrong size on UUITweenMaterialVectorProperties");
static_assert(offsetof(UUITweenMaterialVectorProperties, MaterialInstance) == 0x000030, "Member 'UUITweenMaterialVectorProperties::MaterialInstance' has a wrong offset!");

// Class UITween.UITweenInstance
// 0x00E8 (0x0118 - 0x0030)
class UUITweenInstance final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UUITweenInstance* tween)> TweenCompletedDelegate;            // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UUITweenInstance* tween)> TweenUpdatedDelegate;              // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x98];                                      // 0x0050(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUITweenMaterialScalarProperties*> _materialScalarProperties;                       // 0x00E8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UUITweenMaterialVectorProperties*> _materialVectorProperties;                       // 0x00F8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Begin();
	class UUITweenInstance* Easing(EEasingType InType);
	class UUITweenInstance* FromColor(const struct FLinearColor& startValue);
	class UUITweenInstance* FromMaterialScalarParameter(class UMaterialInstanceDynamic* targetMaterialInstance, class FName targetParameterName, float targetValue);
	class UUITweenInstance* FromMaterialVectorParameter(class UMaterialInstanceDynamic* targetMaterialInstance, class FName targetParameterName, const struct FLinearColor& targetValue);
	class UUITweenInstance* FromOpacity(float startValue);
	class UUITweenInstance* FromScale(const struct FVector2D& startValue);
	class UUITweenInstance* FromTranslation(const struct FVector2D& startValue);
	class UUITweenInstance* ToColor(const struct FLinearColor& targetValue);
	class UUITweenInstance* ToMaterialScalarParameter(class UMaterialInstanceDynamic* targetMaterialInstance, class FName targetParameterName, float targetValue);
	class UUITweenInstance* ToMaterialVectorParameter(class UMaterialInstanceDynamic* targetMaterialInstance, class FName targetParameterName, const struct FLinearColor& targetValue);
	class UUITweenInstance* ToOpacity(float targetValue);
	class UUITweenInstance* ToReset();
	class UUITweenInstance* ToScale(const struct FVector2D& targetValue);
	class UUITweenInstance* ToTranslation(const struct FVector2D& targetValue);
	class UUITweenInstance* TweenFloatProperty(float startValue, float targetValue);

	float GetDelay() const;
	float GetDuration() const;
	EEasingType GetEasing() const;
	float GetFloatValue() const;
	float GetProgress() const;
	class UWidget* GetTargetWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UITweenInstance">();
	}
	static class UUITweenInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUITweenInstance>();
	}
};
static_assert(alignof(UUITweenInstance) == 0x000008, "Wrong alignment on UUITweenInstance");
static_assert(sizeof(UUITweenInstance) == 0x000118, "Wrong size on UUITweenInstance");
static_assert(offsetof(UUITweenInstance, TweenCompletedDelegate) == 0x000030, "Member 'UUITweenInstance::TweenCompletedDelegate' has a wrong offset!");
static_assert(offsetof(UUITweenInstance, TweenUpdatedDelegate) == 0x000040, "Member 'UUITweenInstance::TweenUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(UUITweenInstance, _materialScalarProperties) == 0x0000E8, "Member 'UUITweenInstance::_materialScalarProperties' has a wrong offset!");
static_assert(offsetof(UUITweenInstance, _materialVectorProperties) == 0x0000F8, "Member 'UUITweenInstance::_materialVectorProperties' has a wrong offset!");

}

