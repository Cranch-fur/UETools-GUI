#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Weapon_Base.BP_Weapon_Base_C
// 0x0050 (0x03E8 - 0x0398)
class ABP_Weapon_Base_C final : public ALWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PhysicsImpactSound_C*               BP_PhysicsImpactSound;                             // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULWeaponFXVaryingComponent*             LWeaponFXVarying;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoMakeCollisionHandle;                          // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAutoMakeCollisionBlade;                           // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVisibleAllMeshesInEditor;                         // 0x03B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ALWeapon*                               HandleTemplate;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AppliedMaterialCodename;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULMaterialVarying*                      StartMaterialVarying;                              // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      TrailElementFX;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              OwnedDurationParticles;                            // 0x03D8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_Weapon_Base(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void StartHideDerbisBlade();
	void OnWeaponChanged(class ALWeapon* From, class ALWeapon* To);
	void PlayDurabilityConsumeFX();
	void RemoveElement(class FName ElementName);
	void ApplyElement(class FName ElementName);
	void StopTrailElementFX();
	void PlayTrailElementFX();
	void OnDropWeapon();
	void OnWeaponOnOff(bool bOnOff);
	void RemoveMaterialVarying(class FName MaterialFxCodename);
	void ApplyMaterialVarying(class FName MaterialFxCodename);
	void OnWeaponHitDamage();
	void OnWeaponRespawn();
	void OnApplyRunningAbnormal(bool IsApply, class FName AbnormalCodeName);
	void JoinHandleAndBladeMeshComponents();
	void Build_Auto_Collision();
	void Post_Build();
	void BuildWeapon();
	void OnBreakBlade(const struct FVector& BreakPointLocation, const struct FVector& ImpulseDirection);
	void UserConstructionScript();
	void Duplicate_Handle();
	void Join_Handle_And__Blade_Mesh_Component();
	void OnImpl_Make_Weapon();
	void OnImpl_Break_Blade();
	void OnImpl_Drop_Weapon();
	void OnImpl_Weapon_Hit_Damage();
	void OnImpl_Apply_Running_Abnormal(bool IsApply, class FName Abnormal_Code_Name);
	void PutOnAbnormal(const class FName InAbnormalCodeName);
	void IsAppliedGroupAbnormal(const class FName GroupCodename, bool* Result);
	void TakeOffbyGroupAbnormal(const class FName GroupCodename);
	void OnImpl_Weapon_OnOff(bool bOn);
	void PutOn_TakeOff_EquipAbnormal(bool bPutOn);
	class ALWeapon* CreateHandleTemplateActor();
	void MoveWeaponActorOnPenetrait();
	void OnImpl_Weapon_Changed(class ALWeapon* From, class ALWeapon* To);
	void TakeOffAbnormal(class FName InAbnormalCodeName, bool Immediately);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Weapon_Base_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Weapon_Base_C")
	}
	static class ABP_Weapon_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Weapon_Base_C>();
	}
};
DUMPER7_ASSERTS_ABP_Weapon_Base_C;

}

