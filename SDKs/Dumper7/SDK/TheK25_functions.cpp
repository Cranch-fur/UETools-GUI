#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK25

#include "Basic.hpp"

#include "TheK25_classes.hpp"
#include "TheK25_parameters.hpp"


namespace SDK
{

// Function TheK25.LamentConfiguration.Authority_OnEndGameOver
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_OnEndGameOver(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnEndGameOver");

	Params::LamentConfiguration_Authority_OnEndGameOver Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_OnGameEnded
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_OnGameEnded(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnGameEnded");

	Params::LamentConfiguration_Authority_OnGameEnded Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_OnIntroCompletedOrLevelReadyToPlay
// (Final, Native, Private)

void ALamentConfiguration::Authority_OnIntroCompletedOrLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnIntroCompletedOrLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_OnOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_OnOverlapBegin(class UPrimitiveComponent* overlappedComponent, class AActor* other, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnOverlapBegin");

	Params::LamentConfiguration_Authority_OnOverlapBegin Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.other = other;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_OnOverlapEnd(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnOverlapEnd");

	Params::LamentConfiguration_Authority_OnOverlapEnd Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_OnSurvivorHitByControlledProjectile
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_OnSurvivorHitByControlledProjectile(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_OnSurvivorHitByControlledProjectile");

	Params::LamentConfiguration_Authority_OnSurvivorHitByControlledProjectile Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Authority_RespawnLamentConfiguration
// (Final, Native, Public)
// Parameters:
// bool                                    triggerChainHuntUponSpawning                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Authority_RespawnLamentConfiguration(bool triggerChainHuntUponSpawning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Authority_RespawnLamentConfiguration");

	Params::LamentConfiguration_Authority_RespawnLamentConfiguration Parms{};

	Parms.triggerChainHuntUponSpawning = triggerChainHuntUponSpawning;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Cosmetic_BeginSolvingCubeSFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ALamentConfiguration::Cosmetic_BeginSolvingCubeSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_BeginSolvingCubeSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_EndSolvingCubeSFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    hasBeenSolved                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Cosmetic_EndSolvingCubeSFX(bool hasBeenSolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_EndSolvingCubeSFX");

	Params::LamentConfiguration_Cosmetic_EndSolvingCubeSFX Parms{};

	Parms.hasBeenSolved = hasBeenSolved;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnChainHuntChargeEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_OnChainHuntChargeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnChainHuntChargeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnChainHuntChargeStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   chargeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Cosmetic_OnChainHuntChargeStart(float chargeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnChainHuntChargeStart");

	Params::LamentConfiguration_Cosmetic_OnChainHuntChargeStart Parms{};

	Parms.chargeTime = chargeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnChainHuntEndedEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_OnChainHuntEndedEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnChainHuntEndedEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnChainHuntStartedEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_OnChainHuntStartedEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnChainHuntStartedEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnHoldingSurvivorHostageEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    hasEndedThroughKillerAttack                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Cosmetic_OnHoldingSurvivorHostageEnd(bool hasEndedThroughKillerAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnHoldingSurvivorHostageEnd");

	Params::LamentConfiguration_Cosmetic_OnHoldingSurvivorHostageEnd Parms{};

	Parms.hasEndedThroughKillerAttack = hasEndedThroughKillerAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnHoldingSurvivorHostageStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   hostageDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Cosmetic_OnHoldingSurvivorHostageStart(float hostageDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnHoldingSurvivorHostageStart");

	Params::LamentConfiguration_Cosmetic_OnHoldingSurvivorHostageStart Parms{};

	Parms.hostageDuration = hostageDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.Cosmetic_OnKillerDownedSurvivorHoldingLamentConfiguration
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACamperPlayer*                    survivorDowned                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Cosmetic_OnKillerDownedSurvivorHoldingLamentConfiguration(class ASlasherPlayer* killer, class ACamperPlayer* survivorDowned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_OnKillerDownedSurvivorHoldingLamentConfiguration");

	Params::LamentConfiguration_Cosmetic_OnKillerDownedSurvivorHoldingLamentConfiguration Parms{};

	Parms.killer = killer;
	Parms.survivorDowned = survivorDowned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerDisappearsSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerDisappearsSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerDisappearsSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerOnSurvivorEscapedWithLamentConfigurationSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerOnSurvivorEscapedWithLamentConfigurationSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerOnSurvivorEscapedWithLamentConfigurationSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerRespawnDuringChainHuntSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerRespawnDuringChainHuntSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerRespawnDuringChainHuntSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerSolvedSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerSolvedSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerSolvedSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerSpawnedSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerSpawnedSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerSpawnedSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Cosmetic_TriggerSurvivorPickUpSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ALamentConfiguration::Cosmetic_TriggerSurvivorPickUpSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Cosmetic_TriggerSurvivorPickUpSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.LamentConfiguration.Multicast_CorrectLamentConfigurationPosition
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   newPosition                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Multicast_CorrectLamentConfigurationPosition(const struct FVector& newPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Multicast_CorrectLamentConfigurationPosition");

	Params::LamentConfiguration_Multicast_CorrectLamentConfigurationPosition Parms{};

	Parms.newPosition = std::move(newPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Multicast_DownedSurvivorHoldingLamentConfiguration
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::Multicast_DownedSurvivorHoldingLamentConfiguration(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Multicast_DownedSurvivorHoldingLamentConfiguration");

	Params::LamentConfiguration_Multicast_DownedSurvivorHoldingLamentConfiguration Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Multicast_TriggerKillerPickUpSFX
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<class ACamperPlayer*>&     affectedSurvivors                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ALamentConfiguration::Multicast_TriggerKillerPickUpSFX(const TArray<class ACamperPlayer*>& affectedSurvivors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Multicast_TriggerKillerPickUpSFX");

	Params::LamentConfiguration_Multicast_TriggerKillerPickUpSFX Parms{};

	Parms.affectedSurvivors = std::move(affectedSurvivors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.Multicast_TriggerSolvedSFX
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void ALamentConfiguration::Multicast_TriggerSolvedSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "Multicast_TriggerSolvedSFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.OnCamperEscaped
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALamentConfiguration::OnCamperEscaped(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "OnCamperEscaped");

	Params::LamentConfiguration_OnCamperEscaped Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.OnRep_LamentConfigurationState
// (Final, Native, Private)

void ALamentConfiguration::OnRep_LamentConfigurationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "OnRep_LamentConfigurationState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.OnRep_SurvivorHeldHostage
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    oldSurvivorHeldHostage                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALamentConfiguration::OnRep_SurvivorHeldHostage(class ACamperPlayer* oldSurvivorHeldHostage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "OnRep_SurvivorHeldHostage");

	Params::LamentConfiguration_OnRep_SurvivorHeldHostage Parms{};

	Parms.oldSurvivorHeldHostage = oldSurvivorHeldHostage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfiguration.TriggerKillerPickUpSFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class ACamperPlayer*>&     affectedSurvivors                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ALamentConfiguration::TriggerKillerPickUpSFX(const TArray<class ACamperPlayer*>& affectedSurvivors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "TriggerKillerPickUpSFX");

	Params::LamentConfiguration_TriggerKillerPickUpSFX Parms{};

	Parms.affectedSurvivors = std::move(affectedSurvivors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.LamentConfiguration.GetChainHuntProgressPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ALamentConfiguration::GetChainHuntProgressPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfiguration", "GetChainHuntProgressPercentage");

	Params::LamentConfiguration_GetChainHuntProgressPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.ChainAttachedGateBlockerEffect.OnSurvivorDamageStateChanged
// (Final, Native, Private)
// Parameters:
// const ECamperDamageState                oldState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ECamperDamageState                newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChainAttachedGateBlockerEffect::OnSurvivorDamageStateChanged(const ECamperDamageState oldState, const ECamperDamageState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainAttachedGateBlockerEffect", "OnSurvivorDamageStateChanged");

	Params::ChainAttachedGateBlockerEffect_OnSurvivorDamageStateChanged Parms{};

	Parms.oldState = oldState;
	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25AttackSubAnimInstance.OnAttackStart
// (Final, Native, Protected)
// Parameters:
// const EAttackType                       attackType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25AttackSubAnimInstance::OnAttackStart(const EAttackType attackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25AttackSubAnimInstance", "OnAttackStart");

	Params::K25AttackSubAnimInstance_OnAttackStart Parms{};

	Parms.attackType = attackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Chain.Cosmetic_OnChainAppears
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Chain::Cosmetic_OnChainAppears()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainAppears");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnChainAttachedToSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    wasReachingSurvivorAnchorPoint                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Chain::Cosmetic_OnChainAttachedToSurvivor(bool wasReachingSurvivorAnchorPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainAttachedToSurvivor");

	Params::K25Chain_Cosmetic_OnChainAttachedToSurvivor Parms{};

	Parms.wasReachingSurvivorAnchorPoint = wasReachingSurvivorAnchorPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Chain.Cosmetic_OnChainDetachedFromSurvivor
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EK25ChainDetachmentReason               detachmentReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Chain::Cosmetic_OnChainDetachedFromSurvivor(EK25ChainDetachmentReason detachmentReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainDetachedFromSurvivor");

	Params::K25Chain_Cosmetic_OnChainDetachedFromSurvivor Parms{};

	Parms.detachmentReason = detachmentReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Chain.Cosmetic_OnChainDisappears
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Chain::Cosmetic_OnChainDisappears()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainDisappears");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnChainStartedToReelback
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Chain::Cosmetic_OnChainStartedToReelback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainStartedToReelback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnChainUnleashedWithProjectile
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Chain::Cosmetic_OnChainUnleashedWithProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnChainUnleashedWithProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnInstantChainUnleashedTowardsAttachmentPointFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Chain::Cosmetic_OnInstantChainUnleashedTowardsAttachmentPointFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnInstantChainUnleashedTowardsAttachmentPointFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnSurvivorStartedRemovingChainSFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Chain::Cosmetic_OnSurvivorStartedRemovingChainSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnSurvivorStartedRemovingChainSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Chain.Cosmetic_OnSurvivorStoppedRemovingChainSFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    hasRemovedChainDueToInteraction                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Chain::Cosmetic_OnSurvivorStoppedRemovingChainSFX(bool hasRemovedChainDueToInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "Cosmetic_OnSurvivorStoppedRemovingChainSFX");

	Params::K25Chain_Cosmetic_OnSurvivorStoppedRemovingChainSFX Parms{};

	Parms.hasRemovedChainDueToInteraction = hasRemovedChainDueToInteraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Chain.SetInstancedMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInstancedStaticMeshComponent*    instancedMesh                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Chain::SetInstancedMeshComponent(class UInstancedStaticMeshComponent* instancedMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "SetInstancedMeshComponent");

	Params::K25Chain_SetInstancedMeshComponent Parms{};

	Parms.instancedMesh = instancedMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Chain.SetSplineComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USplineComponent*                 component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Chain::SetSplineComponent(class USplineComponent* component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "SetSplineComponent");

	Params::K25Chain_SetSplineComponent Parms{};

	Parms.component = component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Chain.GetChainEndLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25Chain::GetChainEndLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "GetChainEndLocation");

	Params::K25Chain_GetChainEndLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Chain.GetChainStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25Chain::GetChainStartLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "GetChainStartLocation");

	Params::K25Chain_GetChainStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Chain.GetSurvivorChainAttachmentAnchor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK25SurvivorChainAttachmentAnchor*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25SurvivorChainAttachmentAnchor* AK25Chain::GetSurvivorChainAttachmentAnchor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "GetSurvivorChainAttachmentAnchor");

	Params::K25Chain_GetSurvivorChainAttachmentAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Chain.IsAttachedToControlledProjectile
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK25Chain::IsAttachedToControlledProjectile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Chain", "IsAttachedToControlledProjectile");

	Params::K25Chain_IsAttachedToControlledProjectile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ChainAttachedStatusEffect.OnRep_ChainAttachementComponent
// (Final, Native, Private)

void UK25ChainAttachedStatusEffect::OnRep_ChainAttachementComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainAttachedStatusEffect", "OnRep_ChainAttachementComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainAttachmentReplicationComponent.Multicast_AttachChainToAnchor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UK25SurvivorChainAttachmentComponent*chainAttachementComponent                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25Chain*                        chainToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25SurvivorChainAttachmentAnchor*anchorPoint                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainAttachmentReplicationComponent::Multicast_AttachChainToAnchor(class UK25SurvivorChainAttachmentComponent* chainAttachementComponent, class AK25Chain* chainToAttach, class AK25SurvivorChainAttachmentAnchor* anchorPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainAttachmentReplicationComponent", "Multicast_AttachChainToAnchor");

	Params::K25ChainAttachmentReplicationComponent_Multicast_AttachChainToAnchor Parms{};

	Parms.chainAttachementComponent = chainAttachementComponent;
	Parms.chainToAttach = chainToAttach;
	Parms.anchorPoint = anchorPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainAttachmentReplicationComponent.Multicast_DetachChains
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UK25SurvivorChainAttachmentComponent*chainAttachementComponent                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AK25Chain*>&         chainsToDetach                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EK25ChainDetachmentReason               detachmentReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AK25Chain*>&         chainsAttached                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UK25ChainAttachmentReplicationComponent::Multicast_DetachChains(class UK25SurvivorChainAttachmentComponent* chainAttachementComponent, const TArray<class AK25Chain*>& chainsToDetach, EK25ChainDetachmentReason detachmentReason, const TArray<class AK25Chain*>& chainsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainAttachmentReplicationComponent", "Multicast_DetachChains");

	Params::K25ChainAttachmentReplicationComponent_Multicast_DetachChains Parms{};

	Parms.chainAttachementComponent = chainAttachementComponent;
	Parms.chainsToDetach = std::move(chainsToDetach);
	Parms.detachmentReason = detachmentReason;
	Parms.chainsAttached = std::move(chainsAttached);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainAttachmentReplicationComponent.Multicast_LaunchInstantHitChainTowardsSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class AK25Chain*                        newChainToAttach                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25SurvivorChainAttachmentAnchor*targetAnchor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   startPosition                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainAttachmentReplicationComponent::Multicast_LaunchInstantHitChainTowardsSurvivor(class AK25Chain* newChainToAttach, class AK25SurvivorChainAttachmentAnchor* targetAnchor, const struct FVector& startPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainAttachmentReplicationComponent", "Multicast_LaunchInstantHitChainTowardsSurvivor");

	Params::K25ChainAttachmentReplicationComponent_Multicast_LaunchInstantHitChainTowardsSurvivor Parms{};

	Parms.newChainToAttach = newChainToAttach;
	Parms.targetAnchor = targetAnchor;
	Parms.startPosition = std::move(startPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainAttachmentReplicationComponent.Multicast_StartChainReelback
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AK25Chain*                        chainToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainAttachmentReplicationComponent::Multicast_StartChainReelback(class AK25Chain* chainToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainAttachmentReplicationComponent", "Multicast_StartChainReelback");

	Params::K25ChainAttachmentReplicationComponent_Multicast_StartChainReelback Parms{};

	Parms.chainToAttach = chainToAttach;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainHuntEffectsComponent.Cosmetic_ActivateChainHuntEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              hasChainHuntStarted                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainHuntEffectsComponent::Cosmetic_ActivateChainHuntEffects(const bool hasChainHuntStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainHuntEffectsComponent", "Cosmetic_ActivateChainHuntEffects");

	Params::K25ChainHuntEffectsComponent_Cosmetic_ActivateChainHuntEffects Parms{};

	Parms.hasChainHuntStarted = hasChainHuntStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25ChainHuntEffectsComponent.Cosmetic_DeactivateChainHuntEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK25ChainHuntEffectsComponent::Cosmetic_DeactivateChainHuntEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainHuntEffectsComponent", "Cosmetic_DeactivateChainHuntEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25ChainHuntEffectsComponent.Cosmetic_TriggerChainHuntActivationSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UK25ChainHuntEffectsComponent::Cosmetic_TriggerChainHuntActivationSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainHuntEffectsComponent", "Cosmetic_TriggerChainHuntActivationSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25ChainHuntEffectsComponent.GetOwningPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADBDPlayer* UK25ChainHuntEffectsComponent::GetOwningPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainHuntEffectsComponent", "GetOwningPlayer");

	Params::K25ChainHuntEffectsComponent_GetOwningPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ChainLocomotionSurvivorAnimInstance.OnChainAttached
// (Final, Native, Protected)
// Parameters:
// class AK25Chain*                        chain                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25SurvivorChainAttachmentAnchor*chainAttachmentAnchor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainLocomotionSurvivorAnimInstance::OnChainAttached(class AK25Chain* chain, class AK25SurvivorChainAttachmentAnchor* chainAttachmentAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainLocomotionSurvivorAnimInstance", "OnChainAttached");

	Params::K25ChainLocomotionSurvivorAnimInstance_OnChainAttached Parms{};

	Parms.chain = chain;
	Parms.chainAttachmentAnchor = chainAttachmentAnchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainLocomotionSurvivorAnimInstance.OnChainDetached
// (Final, Native, Protected)
// Parameters:
// class AK25Chain*                        chain                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25SurvivorChainAttachmentAnchor*chainAttachmentAnchor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EK25ChainDetachmentReason               detachmentReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainLocomotionSurvivorAnimInstance::OnChainDetached(class AK25Chain* chain, class AK25SurvivorChainAttachmentAnchor* chainAttachmentAnchor, EK25ChainDetachmentReason detachmentReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainLocomotionSurvivorAnimInstance", "OnChainDetached");

	Params::K25ChainLocomotionSurvivorAnimInstance_OnChainDetached Parms{};

	Parms.chain = chain;
	Parms.chainAttachmentAnchor = chainAttachmentAnchor;
	Parms.detachmentReason = detachmentReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeBaseState.GetK25Gateway
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK25Gateway*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Gateway* UK25ChainStrikeBaseState::GetK25Gateway() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeBaseState", "GetK25Gateway");

	Params::K25ChainStrikeBaseState_GetK25Gateway Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ChainStrikeBaseState.GetK25Power
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK25Power*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Power* UK25ChainStrikeBaseState::GetK25Power() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeBaseState", "GetK25Power");

	Params::K25ChainStrikeBaseState_GetK25Power Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ChainStrikeBaseState.GetPlayerOwner
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADBDPlayer* UK25ChainStrikeBaseState::GetPlayerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeBaseState", "GetPlayerOwner");

	Params::K25ChainStrikeBaseState_GetPlayerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ChainStrikeInteraction.Cosmetic_ResetAllVignetteValues
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Cosmetic_ResetAllVignetteValues(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Cosmetic_ResetAllVignetteValues");

	Params::K25ChainStrikeInteraction_Cosmetic_ResetAllVignetteValues Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25ChainStrikeInteraction.Cosmetic_TriggerGatewayPossessionEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const float                             transitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Cosmetic_TriggerGatewayPossessionEffects(const float transitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Cosmetic_TriggerGatewayPossessionEffects");

	Params::K25ChainStrikeInteraction_Cosmetic_TriggerGatewayPossessionEffects Parms{};

	Parms.transitionTime = transitionTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25ChainStrikeInteraction.Cosmetic_TriggerKillerRepossessionFadeInEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              hasHitSurvivor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              preventAudioTriggers                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Cosmetic_TriggerKillerRepossessionFadeInEffects(class ASlasherPlayer* killer, const bool hasHitSurvivor, const bool preventAudioTriggers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Cosmetic_TriggerKillerRepossessionFadeInEffects");

	Params::K25ChainStrikeInteraction_Cosmetic_TriggerKillerRepossessionFadeInEffects Parms{};

	Parms.killer = killer;
	Parms.hasHitSurvivor = hasHitSurvivor;
	Parms.preventAudioTriggers = preventAudioTriggers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25ChainStrikeInteraction.Cosmetic_TriggerKillerRepossessionFadeOutEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              preventAudioTriggers                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Cosmetic_TriggerKillerRepossessionFadeOutEffects(class ASlasherPlayer* killer, const bool preventAudioTriggers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Cosmetic_TriggerKillerRepossessionFadeOutEffects");

	Params::K25ChainStrikeInteraction_Cosmetic_TriggerKillerRepossessionFadeOutEffects Parms{};

	Parms.killer = killer;
	Parms.preventAudioTriggers = preventAudioTriggers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25ChainStrikeInteraction.Multicast_AddStateTagToPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FGameplayTag&              tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Multicast_AddStateTagToPlayer(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Multicast_AddStateTagToPlayer");

	Params::K25ChainStrikeInteraction_Multicast_AddStateTagToPlayer Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Multicast_RemoveStateTagFromPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FGameplayTag&              tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Multicast_RemoveStateTagFromPlayer(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Multicast_RemoveStateTagFromPlayer");

	Params::K25ChainStrikeInteraction_Multicast_RemoveStateTagFromPlayer Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Multicast_SetFallbackEndReason
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EChainStrikeEndReason                   chainStrikeEndReason                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Multicast_SetFallbackEndReason(EChainStrikeEndReason chainStrikeEndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Multicast_SetFallbackEndReason");

	Params::K25ChainStrikeInteraction_Multicast_SetFallbackEndReason Parms{};

	Parms.chainStrikeEndReason = chainStrikeEndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.OnRep_ChainStrikeCameraViewTarget
// (Final, Native, Private)

void UK25ChainStrikeInteraction::OnRep_ChainStrikeCameraViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "OnRep_ChainStrikeCameraViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Server_AddStateTagToPlayer
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// const struct FGameplayTag&              tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Server_AddStateTagToPlayer(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Server_AddStateTagToPlayer");

	Params::K25ChainStrikeInteraction_Server_AddStateTagToPlayer Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Server_RemoveStateTagFromPlayer
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// const struct FGameplayTag&              tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Server_RemoveStateTagFromPlayer(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Server_RemoveStateTagFromPlayer");

	Params::K25ChainStrikeInteraction_Server_RemoveStateTagFromPlayer Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Server_SetFallbackEndReason
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EChainStrikeEndReason                   chainStrikeEndReason                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Server_SetFallbackEndReason(EChainStrikeEndReason chainStrikeEndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Server_SetFallbackEndReason");

	Params::K25ChainStrikeInteraction_Server_SetFallbackEndReason Parms{};

	Parms.chainStrikeEndReason = chainStrikeEndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Server_SetShouldIncrementChargeableComponent
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// bool                                    shouldIncrement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Server_SetShouldIncrementChargeableComponent(bool shouldIncrement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Server_SetShouldIncrementChargeableComponent");

	Params::K25ChainStrikeInteraction_Server_SetShouldIncrementChargeableComponent Parms{};

	Parms.shouldIncrement = shouldIncrement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeInteraction.Server_UpdateCameraViewTargetForObservers
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// EChainStrikeCameraViewTarget            newViewTarget                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeInteraction::Server_UpdateCameraViewTargetForObservers(EChainStrikeCameraViewTarget newViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeInteraction", "Server_UpdateCameraViewTargetForObservers");

	Params::K25ChainStrikeInteraction_Server_UpdateCameraViewTargetForObservers Parms{};

	Parms.newViewTarget = newViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeReplicationComponent.Multicast_EndChainStrike
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UK25ChainStrikeInteraction*       interaction                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChainStrikeEndReason                   endReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeReplicationComponent::Multicast_EndChainStrike(class UK25ChainStrikeInteraction* interaction, EChainStrikeEndReason endReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeReplicationComponent", "Multicast_EndChainStrike");

	Params::K25ChainStrikeReplicationComponent_Multicast_EndChainStrike Parms{};

	Parms.interaction = interaction;
	Parms.endReason = endReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ChainStrikeReplicationComponent.Server_EndChainStrike
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class UK25ChainStrikeInteraction*       interaction                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChainStrikeEndReason                   endReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25ChainStrikeReplicationComponent::Server_EndChainStrike(class UK25ChainStrikeInteraction* interaction, EChainStrikeEndReason endReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ChainStrikeReplicationComponent", "Server_EndChainStrike");

	Params::K25ChainStrikeReplicationComponent_Server_EndChainStrike Parms{};

	Parms.interaction = interaction;
	Parms.endReason = endReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ComeToMeLamentConfiguration
// (Final, Exec, Native, Public)

void UK25CheatComponent::DBD_K25ComeToMeLamentConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ComeToMeLamentConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ComeToPositionLamentConfiguration
// (Final, Exec, Native, Public)
// Parameters:
// float                                   x                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25ComeToPositionLamentConfiguration(float x, float y, float z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ComeToPositionLamentConfiguration");

	Params::K25CheatComponent_DBD_K25ComeToPositionLamentConfiguration Parms{};

	Parms.x = x;
	Parms.y = y;
	Parms.z = z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ForceRemoveAllChainsOnAllSurvivors
// (Final, Exec, Native, Public)

void UK25CheatComponent::DBD_K25ForceRemoveAllChainsOnAllSurvivors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ForceRemoveAllChainsOnAllSurvivors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ForceRemoveAllChainsOnClosestsSurvivorToPosition
// (Final, Exec, Native, Public)
// Parameters:
// float                                   x                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25ForceRemoveAllChainsOnClosestsSurvivorToPosition(float x, float y, float z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ForceRemoveAllChainsOnClosestsSurvivorToPosition");

	Params::K25CheatComponent_DBD_K25ForceRemoveAllChainsOnClosestsSurvivorToPosition Parms{};

	Parms.x = x;
	Parms.y = y;
	Parms.z = z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ForceRemoveAllChainsOnLocalSurvivor
// (Final, Exec, Native, Public)

void UK25CheatComponent::DBD_K25ForceRemoveAllChainsOnLocalSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ForceRemoveAllChainsOnLocalSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ForceRespawnLamentConfiguration
// (Final, Exec, Native, Public)

void UK25CheatComponent::DBD_K25ForceRespawnLamentConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ForceRespawnLamentConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25RevealLamentConfigurationLocation
// (Final, Exec, Native, Public)
// Parameters:
// float                                   timeDisplayed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25RevealLamentConfigurationLocation(float timeDisplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25RevealLamentConfigurationLocation");

	Params::K25CheatComponent_DBD_K25RevealLamentConfigurationLocation Parms{};

	Parms.timeDisplayed = timeDisplayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25SetPowerNoCooldown
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    noCooldown                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25SetPowerNoCooldown(bool noCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25SetPowerNoCooldown");

	Params::K25CheatComponent_DBD_K25SetPowerNoCooldown Parms{};

	Parms.noCooldown = noCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25ShowAllLamentConfigurationSpawnPoints
// (Final, Exec, Native, Public)
// Parameters:
// float                                   timeDisplayed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25ShowAllLamentConfigurationSpawnPoints(float timeDisplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25ShowAllLamentConfigurationSpawnPoints");

	Params::K25CheatComponent_DBD_K25ShowAllLamentConfigurationSpawnPoints Parms{};

	Parms.timeDisplayed = timeDisplayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25TriggerUncontrolledChainsOnAllSurvivors
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             numbChains                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25TriggerUncontrolledChainsOnAllSurvivors(const int32 numbChains)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25TriggerUncontrolledChainsOnAllSurvivors");

	Params::K25CheatComponent_DBD_K25TriggerUncontrolledChainsOnAllSurvivors Parms{};

	Parms.numbChains = numbChains;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25TriggerUncontrolledChainsOnClosestsSurvivorToPosition
// (Final, Exec, Native, Public)
// Parameters:
// float                                   x                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             numbChains                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25TriggerUncontrolledChainsOnClosestsSurvivorToPosition(float x, float y, float z, const int32 numbChains)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25TriggerUncontrolledChainsOnClosestsSurvivorToPosition");

	Params::K25CheatComponent_DBD_K25TriggerUncontrolledChainsOnClosestsSurvivorToPosition Parms{};

	Parms.x = x;
	Parms.y = y;
	Parms.z = z;
	Parms.numbChains = numbChains;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25CheatComponent.DBD_K25TriggerUncontrolledChainsOnLocalSurvivor
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             numbChains                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25CheatComponent::DBD_K25TriggerUncontrolledChainsOnLocalSurvivor(const int32 numbChains)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25CheatComponent", "DBD_K25TriggerUncontrolledChainsOnLocalSurvivor");

	Params::K25CheatComponent_DBD_K25TriggerUncontrolledChainsOnLocalSurvivor Parms{};

	Parms.numbChains = numbChains;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Projectile.Cosmetic_OnProjectileActivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Projectile::Cosmetic_OnProjectileActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "Cosmetic_OnProjectileActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Projectile.Cosmetic_OnProjectileDeactivated
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FK25ProjectileDeactivationData&deactivationData                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AK25Projectile::Cosmetic_OnProjectileDeactivated(const struct FK25ProjectileDeactivationData& deactivationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "Cosmetic_OnProjectileDeactivated");

	Params::K25Projectile_Cosmetic_OnProjectileDeactivated Parms{};

	Parms.deactivationData = std::move(deactivationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Projectile.OnProjectileStopped
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitResult&                result                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK25Projectile::OnProjectileStopped(const struct FHitResult& result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "OnProjectileStopped");

	Params::K25Projectile_OnProjectileStopped Parms{};

	Parms.result = std::move(result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Projectile.Server_RequestDisableProjectile
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EK25ProjectileDeactivateReason          deactivateReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Projectile::Server_RequestDisableProjectile(EK25ProjectileDeactivateReason deactivateReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "Server_RequestDisableProjectile");

	Params::K25Projectile_Server_RequestDisableProjectile Parms{};

	Parms.deactivateReason = deactivateReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Projectile.GetChainAttachmentLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25Projectile::GetChainAttachmentLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "GetChainAttachmentLocation");

	Params::K25Projectile_GetChainAttachmentLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Projectile.GetMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDBDProjectileMovementComponent*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDBDProjectileMovementComponent* AK25Projectile::GetMovementComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Projectile", "GetMovementComponent");

	Params::K25Projectile_GetMovementComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25ControlledProjectile.Cosmetic_OnKillerPossessProjectileEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25ControlledProjectile::Cosmetic_OnKillerPossessProjectileEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ControlledProjectile", "Cosmetic_OnKillerPossessProjectileEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25ControlledProjectile.OnRep_AngularVelocity
// (Final, Native, Private)

void AK25ControlledProjectile::OnRep_AngularVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ControlledProjectile", "OnRep_AngularVelocity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ControlledProjectile.Server_ProcessPitchInput
// (Net, Native, Event, Public, NetServer)
// Parameters:
// float                                   deltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   scaledInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25ControlledProjectile::Server_ProcessPitchInput(float deltaTime, float scaledInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ControlledProjectile", "Server_ProcessPitchInput");

	Params::K25ControlledProjectile_Server_ProcessPitchInput Parms{};

	Parms.deltaTime = deltaTime;
	Parms.scaledInput = scaledInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ControlledProjectile.Server_ProcessYawInput
// (Net, Native, Event, Public, NetServer)
// Parameters:
// float                                   deltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   scaledInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25ControlledProjectile::Server_ProcessYawInput(float deltaTime, float scaledInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ControlledProjectile", "Server_ProcessYawInput");

	Params::K25ControlledProjectile_Server_ProcessYawInput Parms{};

	Parms.deltaTime = deltaTime;
	Parms.scaledInput = scaledInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Cosmetic_SetIsGatewayPositionValid
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isGatewayPlacementValid                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Cosmetic_SetIsGatewayPositionValid(bool isGatewayPlacementValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_SetIsGatewayPositionValid");

	Params::K25Gateway_Cosmetic_SetIsGatewayPositionValid Parms{};

	Parms.isGatewayPlacementValid = isGatewayPlacementValid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Gateway.Cosmetic_SetKillerVisualVisibility
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Cosmetic_SetKillerVisualVisibility(bool isVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_SetKillerVisualVisibility");

	Params::K25Gateway_Cosmetic_SetKillerVisualVisibility Parms{};

	Parms.isVisible = isVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayPlacementCancel
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerGatewayPlacementCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayPlacementCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayPlacementStart
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerGatewayPlacementStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayPlacementStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayPlacementStop
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerGatewayPlacementStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayPlacementStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayPossessedEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const float                             transitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Cosmetic_TriggerGatewayPossessedEffects(const float transitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayPossessedEffects");

	Params::K25Gateway_Cosmetic_TriggerGatewayPossessedEffects Parms{};

	Parms.transitionTime = transitionTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayPossessionCancel
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerGatewayPossessionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayPossessionCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerGatewayUnpossessedEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerGatewayUnpossessedEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerGatewayUnpossessedEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Cosmetic_TriggerInvalidGatewayPlacementSFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Gateway::Cosmetic_TriggerInvalidGatewayPlacementSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Cosmetic_TriggerInvalidGatewayPlacementSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Gateway.Multicast_SetGatewayLocation
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   possessionLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Multicast_SetGatewayLocation(const struct FVector& possessionLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Multicast_SetGatewayLocation");

	Params::K25Gateway_Multicast_SetGatewayLocation Parms{};

	Parms.possessionLocation = std::move(possessionLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Multicast_SetGatewayOrientation
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FRotator&                  rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK25Gateway::Multicast_SetGatewayOrientation(const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Multicast_SetGatewayOrientation");

	Params::K25Gateway_Multicast_SetGatewayOrientation Parms{};

	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Multicast_SetGatewayTargetLocation
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   targetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isValidLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Multicast_SetGatewayTargetLocation(const struct FVector& targetLocation, bool isValidLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Multicast_SetGatewayTargetLocation");

	Params::K25Gateway_Multicast_SetGatewayTargetLocation Parms{};

	Parms.targetLocation = std::move(targetLocation);
	Parms.isValidLocation = isValidLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.OnRep_IsBeingPositionned
// (Final, Native, Private)

void AK25Gateway::OnRep_IsBeingPositionned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "OnRep_IsBeingPositionned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.OnRep_IsGatewayPossessed
// (Final, Native, Private)

void AK25Gateway::OnRep_IsGatewayPossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "OnRep_IsGatewayPossessed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Server_EndGatewayPossession
// (Net, NetReliable, Native, Event, Public, NetServer)

void AK25Gateway::Server_EndGatewayPossession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Server_EndGatewayPossession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Server_SetGatewayOrientation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FRotator&                  rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK25Gateway::Server_SetGatewayOrientation(const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Server_SetGatewayOrientation");

	Params::K25Gateway_Server_SetGatewayOrientation Parms{};

	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Server_SetGatewayTargetLocation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   targetLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isValidLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Server_SetGatewayTargetLocation(const struct FVector& targetLocation, bool isValidLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Server_SetGatewayTargetLocation");

	Params::K25Gateway_Server_SetGatewayTargetLocation Parms{};

	Parms.targetLocation = std::move(targetLocation);
	Parms.isValidLocation = isValidLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Server_SetIsGatewayBeingPositionned
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    isBeingPositionned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Gateway::Server_SetIsGatewayBeingPositionned(bool isBeingPositionned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Server_SetIsGatewayBeingPositionned");

	Params::K25Gateway_Server_SetIsGatewayBeingPositionned Parms{};

	Parms.isBeingPositionned = isBeingPositionned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.Server_StartGatewayPossession
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   possessionLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  gatewayRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK25Gateway::Server_StartGatewayPossession(const struct FVector& possessionLocation, const struct FRotator& gatewayRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "Server_StartGatewayPossession");

	Params::K25Gateway_Server_StartGatewayPossession Parms{};

	Parms.possessionLocation = std::move(possessionLocation);
	Parms.gatewayRotation = std::move(gatewayRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Gateway.GetCameraComponent
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UCameraComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraComponent* AK25Gateway::GetCameraComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "GetCameraComponent");

	Params::K25Gateway_GetCameraComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheK25.K25Gateway.IsGatewayPossessed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK25Gateway::IsGatewayPossessed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Gateway", "IsGatewayPossessed");

	Params::K25Gateway_IsGatewayPossessed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Husk.Cosmetic_HideHusk
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Husk::Cosmetic_HideHusk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Husk", "Cosmetic_HideHusk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Husk.Cosmetic_StartAppearing
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Husk::Cosmetic_StartAppearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Husk", "Cosmetic_StartAppearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25Husk.Cosmetic_StartDisappearing
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK25Husk::Cosmetic_StartDisappearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Husk", "Cosmetic_StartDisappearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25LamentConfigurationTeleportIndicator.Cosmetic_UpdateIndicatorVisibility
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25LamentConfigurationTeleportIndicator::Cosmetic_UpdateIndicatorVisibility(bool isVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25LamentConfigurationTeleportIndicator", "Cosmetic_UpdateIndicatorVisibility");

	Params::K25LamentConfigurationTeleportIndicator_Cosmetic_UpdateIndicatorVisibility Parms{};

	Parms.isVisible = isVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25P01.Authority_OnBlockTimerDone
// (Final, Native, Private)
// Parameters:
// class AGenerator*                       generator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25P01::Authority_OnBlockTimerDone(class AGenerator* generator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P01", "Authority_OnBlockTimerDone");

	Params::K25P01_Authority_OnBlockTimerDone Parms{};

	Parms.generator = generator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25P01.OnRep_GeneratorsBlocked
// (Final, Native, Private)

void UK25P01::OnRep_GeneratorsBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P01", "OnRep_GeneratorsBlocked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25P02.OnRep_CursedSurvivors
// (Final, Native, Private)

void UK25P02::OnRep_CursedSurvivors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P02", "OnRep_CursedSurvivors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25P02.GetTotemAuraRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK25P02::GetTotemAuraRevealRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P02", "GetTotemAuraRevealRadius");

	Params::K25P02_GetTotemAuraRevealRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25P02.GetTotemBlockerDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK25P02::GetTotemBlockerDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P02", "GetTotemBlockerDuration");

	Params::K25P02_GetTotemBlockerDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25P02.GetTotemBlockerHasLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK25P02::GetTotemBlockerHasLifetime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P02", "GetTotemBlockerHasLifetime");

	Params::K25P02_GetTotemBlockerHasLifetime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25P03.OnCamperUnhookedFromScourgeHook
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK25P03::OnCamperUnhookedFromScourgeHook(const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P03", "OnCamperUnhookedFromScourgeHook");

	Params::K25P03_OnCamperUnhookedFromScourgeHook Parms{};

	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25P03.OnDamageStateChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK25P03::OnDamageStateChanged(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P03", "OnDamageStateChanged");

	Params::K25P03_OnDamageStateChanged Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25P03.OnSurvivorRemoved
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25P03::OnSurvivorRemoved(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25P03", "OnSurvivorRemoved");

	Params::K25P03_OnSurvivorRemoved Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25PounceAttack.Client_InvalidateDownedTargetHoldingLamentConfiguration
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void UK25PounceAttack::Client_InvalidateDownedTargetHoldingLamentConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25PounceAttack", "Client_InvalidateDownedTargetHoldingLamentConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25PounceAttack.Multicast_DownedTargetHoldingLamentConfiguration
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK25PounceAttack::Multicast_DownedTargetHoldingLamentConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25PounceAttack", "Multicast_DownedTargetHoldingLamentConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Power.Cosmetic_OnKillerInterruptOpenHatchSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Power::Cosmetic_OnKillerInterruptOpenHatchSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "Cosmetic_OnKillerInterruptOpenHatchSFX");

	Params::K25Power_Cosmetic_OnKillerInterruptOpenHatchSFX Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Power.Cosmetic_OnKillerInterruptSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Power::Cosmetic_OnKillerInterruptSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "Cosmetic_OnKillerInterruptSFX");

	Params::K25Power_Cosmetic_OnKillerInterruptSFX Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25Power.OnKillerAdded
// (Final, Native, Private)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Power::OnKillerAdded(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "OnKillerAdded");

	Params::K25Power_OnKillerAdded Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Power.OnRep_K25ControlledProjectile
// (Final, Native, Private)

void AK25Power::OnRep_K25ControlledProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "OnRep_K25ControlledProjectile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Power.OnRep_K25Gateway
// (Final, Native, Private)

void AK25Power::OnRep_K25Gateway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "OnRep_K25Gateway");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Power.OnRep_LamentConfiguration
// (Final, Native, Private)

void AK25Power::OnRep_LamentConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "OnRep_LamentConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Power.OnSurvivorAdded
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25Power::OnSurvivorAdded(class ACamperPlayer* survivor, class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25Power", "OnSurvivorAdded");

	Params::K25Power_OnSurvivorAdded Parms{};

	Parms.survivor = survivor;
	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ProjectileReplicationComponent.Multicast_DeactivateProjectile
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AK25Projectile*                   projectile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FK25ProjectileDeactivationData&deactivationData                                       (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK25ProjectileReplicationComponent::Multicast_DeactivateProjectile(class AK25Projectile* projectile, const struct FK25ProjectileDeactivationData& deactivationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ProjectileReplicationComponent", "Multicast_DeactivateProjectile");

	Params::K25ProjectileReplicationComponent_Multicast_DeactivateProjectile Parms{};

	Parms.projectile = projectile;
	Parms.deactivationData = std::move(deactivationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25ProjectileReplicationComponent.Multicast_SetAttachedChain
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AK25Projectile*                   projectile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25Chain*                        chainToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLaunchInfo&               launchInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UK25ProjectileReplicationComponent::Multicast_SetAttachedChain(class AK25Projectile* projectile, class AK25Chain* chainToAttach, const struct FLaunchInfo& launchInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25ProjectileReplicationComponent", "Multicast_SetAttachedChain");

	Params::K25ProjectileReplicationComponent_Multicast_SetAttachedChain Parms{};

	Parms.projectile = projectile;
	Parms.chainToAttach = chainToAttach;
	Parms.launchInfo = std::move(launchInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SolveLamentConfigurationInteraction.Authority_OnSkillCheckResponseAuthority
// (Final, Native, Private)
// Parameters:
// bool                                    success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bonus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    triggerLoudNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillCheckCustomType                   type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SolveLamentConfigurationInteraction::Authority_OnSkillCheckResponseAuthority(bool success, bool bonus, class ADBDPlayer* player, bool triggerLoudNoise, ESkillCheckCustomType type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SolveLamentConfigurationInteraction", "Authority_OnSkillCheckResponseAuthority");

	Params::K25SolveLamentConfigurationInteraction_Authority_OnSkillCheckResponseAuthority Parms{};

	Parms.success = success;
	Parms.bonus = bonus;
	Parms.player = player;
	Parms.triggerLoudNoise = triggerLoudNoise;
	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SolveLamentConfigurationInteraction.Cosmetic_TriggerKillerStoppedInteractionViaAttackSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SolveLamentConfigurationInteraction::Cosmetic_TriggerKillerStoppedInteractionViaAttackSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SolveLamentConfigurationInteraction", "Cosmetic_TriggerKillerStoppedInteractionViaAttackSFX");

	Params::K25SolveLamentConfigurationInteraction_Cosmetic_TriggerKillerStoppedInteractionViaAttackSFX Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25SolveLamentConfigurationInteraction.Multicast_TriggerKillerStoppedInteractionViaAttackSFX
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SolveLamentConfigurationInteraction::Multicast_TriggerKillerStoppedInteractionViaAttackSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SolveLamentConfigurationInteraction", "Multicast_TriggerKillerStoppedInteractionViaAttackSFX");

	Params::K25SolveLamentConfigurationInteraction_Multicast_TriggerKillerStoppedInteractionViaAttackSFX Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.Cosmetic_OnChainAttached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AK25Chain*                        chainToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25SurvivorChainAttachmentAnchor::Cosmetic_OnChainAttached(class AK25Chain* chainToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "Cosmetic_OnChainAttached");

	Params::K25SurvivorChainAttachmentAnchor_Cosmetic_OnChainAttached Parms{};

	Parms.chainToAttach = chainToAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.Cosmetic_OnChainDetached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AK25Chain*                        chainToDetach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK25SurvivorChainAttachmentAnchor::Cosmetic_OnChainDetached(class AK25Chain* chainToDetach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "Cosmetic_OnChainDetached");

	Params::K25SurvivorChainAttachmentAnchor_Cosmetic_OnChainDetached Parms{};

	Parms.chainToDetach = chainToDetach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.OnRep_AttachmentData
// (Final, Native, Private)

void AK25SurvivorChainAttachmentAnchor::OnRep_AttachmentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "OnRep_AttachmentData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetChainAttachmentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FK25SurvivorChainAttachmentData  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FK25SurvivorChainAttachmentData AK25SurvivorChainAttachmentAnchor::GetChainAttachmentData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetChainAttachmentData");

	Params::K25SurvivorChainAttachmentAnchor_GetChainAttachmentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetChainAttachmentLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25SurvivorChainAttachmentAnchor::GetChainAttachmentLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetChainAttachmentLocation");

	Params::K25SurvivorChainAttachmentAnchor_GetChainAttachmentLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetChainPullDirectionAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK25SurvivorChainAttachmentAnchor::GetChainPullDirectionAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetChainPullDirectionAngle");

	Params::K25SurvivorChainAttachmentAnchor_GetChainPullDirectionAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetChainsPullDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25SurvivorChainAttachmentAnchor::GetChainsPullDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetChainsPullDirection");

	Params::K25SurvivorChainAttachmentAnchor_GetChainsPullDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetChainsPullLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK25SurvivorChainAttachmentAnchor::GetChainsPullLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetChainsPullLocation");

	Params::K25SurvivorChainAttachmentAnchor_GetChainsPullLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentAnchor.GetNumberOfChainsAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AK25SurvivorChainAttachmentAnchor::GetNumberOfChainsAttached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentAnchor", "GetNumberOfChainsAttached");

	Params::K25SurvivorChainAttachmentAnchor_GetNumberOfChainsAttached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainAttachmentComponent.Cosmetic_TriggerHitSurvivorInExitAreaSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SurvivorChainAttachmentComponent::Cosmetic_TriggerHitSurvivorInExitAreaSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentComponent", "Cosmetic_TriggerHitSurvivorInExitAreaSFX");

	Params::K25SurvivorChainAttachmentComponent_Cosmetic_TriggerHitSurvivorInExitAreaSFX Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25SurvivorChainAttachmentComponent.Multicast_TriggerHitSurvivorInExitAreaSFX
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SurvivorChainAttachmentComponent::Multicast_TriggerHitSurvivorInExitAreaSFX(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentComponent", "Multicast_TriggerHitSurvivorInExitAreaSFX");

	Params::K25SurvivorChainAttachmentComponent_Multicast_TriggerHitSurvivorInExitAreaSFX Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SurvivorChainAttachmentComponent.OnRep_RemoveChainChargeableComponent
// (Final, Native, Private)

void UK25SurvivorChainAttachmentComponent::OnRep_RemoveChainChargeableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentComponent", "OnRep_RemoveChainChargeableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SurvivorChainAttachmentComponent.GetFirstChainToRelease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK25Chain*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Chain* UK25SurvivorChainAttachmentComponent::GetFirstChainToRelease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainAttachmentComponent", "GetFirstChainToRelease");

	Params::K25SurvivorChainAttachmentComponent_GetFirstChainToRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainHuntEffectsComponent.GetOwningSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACamperPlayer* UK25SurvivorChainHuntEffectsComponent::GetOwningSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainHuntEffectsComponent", "GetOwningSurvivor");

	Params::K25SurvivorChainHuntEffectsComponent_GetOwningSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25SurvivorChainTargetterComponent.Authority_OnSurvivorHealthStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      currentDamageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SurvivorChainTargetterComponent::Authority_OnSurvivorHealthStateChanged(ECamperDamageState oldDamageState, ECamperDamageState currentDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainTargetterComponent", "Authority_OnSurvivorHealthStateChanged");

	Params::K25SurvivorChainTargetterComponent_Authority_OnSurvivorHealthStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.currentDamageState = currentDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25SurvivorChainTargetterComponent.Multicast_DebugPositionFind
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults, Const)
// Parameters:
// const struct FVector&                   startSweepPosition                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   endSweepPosition                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hasFoundPosition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   foundPosition                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hasFoundCollision                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   collisionPosition                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25SurvivorChainTargetterComponent::Multicast_DebugPositionFind(const struct FVector& startSweepPosition, const struct FVector& endSweepPosition, bool hasFoundPosition, const struct FVector& foundPosition, bool hasFoundCollision, const struct FVector& collisionPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25SurvivorChainTargetterComponent", "Multicast_DebugPositionFind");

	Params::K25SurvivorChainTargetterComponent_Multicast_DebugPositionFind Parms{};

	Parms.startSweepPosition = std::move(startSweepPosition);
	Parms.endSweepPosition = std::move(endSweepPosition);
	Parms.hasFoundPosition = hasFoundPosition;
	Parms.foundPosition = std::move(foundPosition);
	Parms.hasFoundCollision = hasFoundCollision;
	Parms.collisionPosition = std::move(collisionPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25TeleportInteraction.Cosmetic_TeleportAbortedEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25TeleportInteraction::Cosmetic_TeleportAbortedEffects(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25TeleportInteraction", "Cosmetic_TeleportAbortedEffects");

	Params::K25TeleportInteraction_Cosmetic_TeleportAbortedEffects Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25TeleportInteraction.Cosmetic_TeleportEndEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25TeleportInteraction::Cosmetic_TeleportEndEffects(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25TeleportInteraction", "Cosmetic_TeleportEndEffects");

	Params::K25TeleportInteraction_Cosmetic_TeleportEndEffects Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25TeleportInteraction.Cosmetic_TeleportStartEffects
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25TeleportInteraction::Cosmetic_TeleportStartEffects(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25TeleportInteraction", "Cosmetic_TeleportStartEffects");

	Params::K25TeleportInteraction_Cosmetic_TeleportStartEffects Parms{};

	Parms.killer = killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK25.K25TeleportInteraction.Multicast_InitializeHusk
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FVector&                   location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UK25TeleportInteraction::Multicast_InitializeHusk(const struct FVector& location, const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25TeleportInteraction", "Multicast_InitializeHusk");

	Params::K25TeleportInteraction_Multicast_InitializeHusk Parms{};

	Parms.location = std::move(location);
	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25TeleportInteraction.Multicast_TeleportKillerToTargetPosition
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UK25TeleportInteraction::Multicast_TeleportKillerToTargetPosition(class ASlasherPlayer* killer, const struct FVector& location, const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25TeleportInteraction", "Multicast_TeleportKillerToTargetPosition");

	Params::K25TeleportInteraction_Multicast_TeleportKillerToTargetPosition Parms{};

	Parms.killer = killer;
	Parms.location = std::move(location);
	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25UncontrolledProjectile.Cosmetic_TriggerUncontrolledProjectileSpawnSFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK25UncontrolledProjectile::Cosmetic_TriggerUncontrolledProjectileSpawnSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25UncontrolledProjectile", "Cosmetic_TriggerUncontrolledProjectileSpawnSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK25.K25UncontrolledProjectile.OnRep_TargetSurvivor
// (Final, Native, Private)

void AK25UncontrolledProjectile::OnRep_TargetSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25UncontrolledProjectile", "OnRep_TargetSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25UncontrolledProjectileReplicationComponent.Multicast_LaunchProjectile
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AK25UncontrolledProjectile*       projectile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLaunchInfo&               launchInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UK25UncontrolledProjectileReplicationComponent::Multicast_LaunchProjectile(class AK25UncontrolledProjectile* projectile, const struct FLaunchInfo& launchInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25UncontrolledProjectileReplicationComponent", "Multicast_LaunchProjectile");

	Params::K25UncontrolledProjectileReplicationComponent_Multicast_LaunchProjectile Parms{};

	Parms.projectile = projectile;
	Parms.launchInfo = std::move(launchInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.K25Utilities.GetK25ControlledProjectile
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          worldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25ControlledProjectile*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25ControlledProjectile* UK25Utilities::GetK25ControlledProjectile(class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K25Utilities", "GetK25ControlledProjectile");

	Params::K25Utilities_GetK25ControlledProjectile Parms{};

	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Utilities.GetK25Gateway
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          worldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25Gateway*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Gateway* UK25Utilities::GetK25Gateway(class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K25Utilities", "GetK25Gateway");

	Params::K25Utilities_GetK25Gateway Parms{};

	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Utilities.GetK25Husk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          worldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25Husk*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Husk* UK25Utilities::GetK25Husk(class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K25Utilities", "GetK25Husk");

	Params::K25Utilities_GetK25Husk Parms{};

	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Utilities.GetK25Power
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          worldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK25Power*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK25Power* UK25Utilities::GetK25Power(class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K25Utilities", "GetK25Power");

	Params::K25Utilities_GetK25Power Parms{};

	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25Utilities.GetLamentConfiguration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          worldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALamentConfiguration*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALamentConfiguration* UK25Utilities::GetLamentConfiguration(class UObject* worldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K25Utilities", "GetLamentConfiguration");

	Params::K25Utilities_GetLamentConfiguration Parms{};

	Parms.worldContextObject = worldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.K25WeaponAnimInstance.OnAttackStart
// (Final, Native, Protected)
// Parameters:
// const EAttackType                       attackType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK25WeaponAnimInstance::OnAttackStart(const EAttackType attackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K25WeaponAnimInstance", "OnAttackStart");

	Params::K25WeaponAnimInstance_OnAttackStart Parms{};

	Parms.attackType = attackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfigurationChainHuntComponent.OnRep_ChainHuntStateData
// (Final, Native, Private)

void ULamentConfigurationChainHuntComponent::OnRep_ChainHuntStateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfigurationChainHuntComponent", "OnRep_ChainHuntStateData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.LamentConfigurationChainHuntComponent.GetChainHuntProgressPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULamentConfigurationChainHuntComponent::GetChainHuntProgressPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfigurationChainHuntComponent", "GetChainHuntProgressPercentage");

	Params::LamentConfigurationChainHuntComponent_GetChainHuntProgressPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.LamentConfigurationPlayerAnalyticsComponent.OnRep_AnalyticsCount
// (Final, Native, Private)

void ULamentConfigurationPlayerAnalyticsComponent::OnRep_AnalyticsCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LamentConfigurationPlayerAnalyticsComponent", "OnRep_AnalyticsCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.S28P01.OnRep_IsInteractionOngoing
// (Final, Native, Private)

void US28P01::OnRep_IsInteractionOngoing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P01", "OnRep_IsInteractionOngoing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.S28P01.OnRep_IsPerkActive
// (Final, Native, Private)

void US28P01::OnRep_IsPerkActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P01", "OnRep_IsPerkActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.S28P01.OnRep_S28P01ChargeableComponent
// (Final, Native, Private)

void US28P01::OnRep_S28P01ChargeableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P01", "OnRep_S28P01ChargeableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK25.S28P01.GetAuraRevealDuration
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US28P01::GetAuraRevealDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P01", "GetAuraRevealDuration");

	Params::S28P01_GetAuraRevealDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.S28P01.GetAuraRevealRange
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US28P01::GetAuraRevealRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P01", "GetAuraRevealRange");

	Params::S28P01_GetAuraRevealRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.S28P02.CanSelfHeal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US28P02::CanSelfHeal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P02", "CanSelfHeal");

	Params::S28P02_CanSelfHeal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.S28P02.GetHealingSpeedGainPercentageAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US28P02::GetHealingSpeedGainPercentageAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P02", "GetHealingSpeedGainPercentageAtLevel");

	Params::S28P02_GetHealingSpeedGainPercentageAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.S28P02.GetSelfHealSpeedPenaltyAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US28P02::GetSelfHealSpeedPenaltyAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P02", "GetSelfHealSpeedPenaltyAtLevel");

	Params::S28P02_GetSelfHealSpeedPenaltyAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK25.S28P03.GetLingerDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float US28P03::GetLingerDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S28P03", "GetLingerDurationAtLevel");

	Params::S28P03_GetLingerDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

