#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FreeCamera.BP_FreeCamera_C
// 0x0120 (0x0350 - 0x0230)
class ABP_FreeCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bCurrentlyControlled;                              // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      RunningPC;                                         // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Movement_Multiplier;                               // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Multiplier;                               // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gamepad_Movement_Multiplier;                       // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gamepad_Rotation_Multiplier;                       // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Up_Multiplier;                                     // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Down_Multiplier;                                   // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key_MoveForward;                                   // 0x0270(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_MoveBack;                                      // 0x0290(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_MoveRight;                                     // 0x02B0(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_MoveLeft;                                      // 0x02D0(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_MoveDown;                                      // 0x02F0(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_MoveUp;                                        // 0x0310(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key_ResetRoll;                                     // 0x0330(0x0020)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FreeCamera(int32 EntryPoint);
	void Event_ForceStop_FlyUp();
	void Event_ForceStop_FlyDown();
	void Event_ForceStop_KeyLeft();
	void Event_ForceStop_KeyRight();
	void Event_ForceStop_KeyBack();
	void Event_ForceStop_KeyForward();
	void Event_FlyUp();
	void Event_FlyDown();
	void Event_KeyLeft();
	void Event_KeyRight();
	void Event_KeyBack();
	void Event_KeyForward();
	void Event_Update_Running_PC();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void K2_OnEndViewTarget(class APlayerController* PC);
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void Force_Stop_All_Movement();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FreeCamera_C">();
	}
	static class ABP_FreeCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FreeCamera_C>();
	}
};
static_assert(alignof(ABP_FreeCamera_C) == 0x000008, "Wrong alignment on ABP_FreeCamera_C");
static_assert(sizeof(ABP_FreeCamera_C) == 0x000350, "Wrong size on ABP_FreeCamera_C");
static_assert(offsetof(ABP_FreeCamera_C, UberGraphFrame) == 0x000230, "Member 'ABP_FreeCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Camera) == 0x000238, "Member 'ABP_FreeCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_FreeCamera_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, bCurrentlyControlled) == 0x000248, "Member 'ABP_FreeCamera_C::bCurrentlyControlled' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, RunningPC) == 0x000250, "Member 'ABP_FreeCamera_C::RunningPC' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Movement_Multiplier) == 0x000258, "Member 'ABP_FreeCamera_C::Movement_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Rotation_Multiplier) == 0x00025C, "Member 'ABP_FreeCamera_C::Rotation_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Gamepad_Movement_Multiplier) == 0x000260, "Member 'ABP_FreeCamera_C::Gamepad_Movement_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Gamepad_Rotation_Multiplier) == 0x000264, "Member 'ABP_FreeCamera_C::Gamepad_Rotation_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Up_Multiplier) == 0x000268, "Member 'ABP_FreeCamera_C::Up_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Down_Multiplier) == 0x00026C, "Member 'ABP_FreeCamera_C::Down_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveForward) == 0x000270, "Member 'ABP_FreeCamera_C::Key_MoveForward' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveBack) == 0x000290, "Member 'ABP_FreeCamera_C::Key_MoveBack' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveRight) == 0x0002B0, "Member 'ABP_FreeCamera_C::Key_MoveRight' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveLeft) == 0x0002D0, "Member 'ABP_FreeCamera_C::Key_MoveLeft' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveDown) == 0x0002F0, "Member 'ABP_FreeCamera_C::Key_MoveDown' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_MoveUp) == 0x000310, "Member 'ABP_FreeCamera_C::Key_MoveUp' has a wrong offset!");
static_assert(offsetof(ABP_FreeCamera_C, Key_ResetRoll) == 0x000330, "Member 'ABP_FreeCamera_C::Key_ResetRoll' has a wrong offset!");

}

