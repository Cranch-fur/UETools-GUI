#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PanoramaCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PanoramaCamera.BP_PanoramaCamera_C
// 0x0028 (0x0258 - 0x0230)
class ABP_PanoramaCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Up_Multiplier;                                     // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class BP_DBDGameInstance_0::UBP_DBDGameInstance_C* Game_Instance_Reference;                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PanoramaCamera(int32 EntryPoint);
	void Event_Create_Panorama_Shot(int32 Quality_Level, float Rotation_Step);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PanoramaCamera_C">();
	}
	static class ABP_PanoramaCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PanoramaCamera_C>();
	}
};
static_assert(alignof(ABP_PanoramaCamera_C) == 0x000008, "Wrong alignment on ABP_PanoramaCamera_C");
static_assert(sizeof(ABP_PanoramaCamera_C) == 0x000258, "Wrong size on ABP_PanoramaCamera_C");
static_assert(offsetof(ABP_PanoramaCamera_C, UberGraphFrame) == 0x000230, "Member 'ABP_PanoramaCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PanoramaCamera_C, Camera) == 0x000238, "Member 'ABP_PanoramaCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_PanoramaCamera_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_PanoramaCamera_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PanoramaCamera_C, Up_Multiplier) == 0x000248, "Member 'ABP_PanoramaCamera_C::Up_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_PanoramaCamera_C, Game_Instance_Reference) == 0x000250, "Member 'ABP_PanoramaCamera_C::Game_Instance_Reference' has a wrong offset!");

}

