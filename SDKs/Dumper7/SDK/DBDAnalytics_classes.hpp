#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAnalytics

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DeadByDaylight_classes.hpp"
#include "BHVRAnalytics_classes.hpp"


namespace SDK
{

// Class DBDAnalytics.PerkAnalyticsLibrary
// 0x0000 (0x0030 - 0x0030)
class UPerkAnalyticsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void SendFranklinsConsumeItemAnalytics(class ADBDPlayer* previousOwner);
	static void SendFranklinsHitSurvivorNearDroppedItemAnalytics(class ADBDPlayer* hitSurvivor, class ADBDPlayer* slasher);
	static void SendKnockoutSurvivorFoundAnalytics(class ADBDPlayer* findingSurvivor, class ADBDPlayer* foundSurvivor);
	static void SendLightbornAuraRevealedAnalytics(class ADBDPlayer* revealedPlayer, class ADBDPlayer* slasher);
	static void SendTinkererUndetectableHitNearGeneratorAnalytics(class ADBDPlayer* hitPlayer, class ADBDPlayer* slasher);
	static void SendTinkererUndetectableInterruptAnalytics(class ADBDPlayer* interruptedPlayer, class ADBDPlayer* slasher);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PerkAnalyticsLibrary">();
	}
	static class UPerkAnalyticsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerkAnalyticsLibrary>();
	}
};
static_assert(alignof(UPerkAnalyticsLibrary) == 0x000008, "Wrong alignment on UPerkAnalyticsLibrary");
static_assert(sizeof(UPerkAnalyticsLibrary) == 0x000030, "Wrong size on UPerkAnalyticsLibrary");

// Class DBDAnalytics.AnalyticsDelegates
// 0x0000 (0x0038 - 0x0038)
class UAnalyticsDelegates final : public UGameInstanceSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnalyticsDelegates">();
	}
	static class UAnalyticsDelegates* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalyticsDelegates>();
	}
};
static_assert(alignof(UAnalyticsDelegates) == 0x000008, "Wrong alignment on UAnalyticsDelegates");
static_assert(sizeof(UAnalyticsDelegates) == 0x000038, "Wrong size on UAnalyticsDelegates");

// Class DBDAnalytics.AnalyticsFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UAnalyticsFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void IncrementHookSpawned();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnalyticsFunctionLibrary">();
	}
	static class UAnalyticsFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalyticsFunctionLibrary>();
	}
};
static_assert(alignof(UAnalyticsFunctionLibrary) == 0x000008, "Wrong alignment on UAnalyticsFunctionLibrary");
static_assert(sizeof(UAnalyticsFunctionLibrary) == 0x000030, "Wrong size on UAnalyticsFunctionLibrary");

// Class DBDAnalytics.AnalyticsManager
// 0x3B68 (0x3BA0 - 0x0038)
class UAnalyticsManager final : public UAbstractAnalyticsManager
{
public:
	uint8                                         Pad_38[0x3B68];                                    // 0x0038(0x3B68)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnalyticsManager">();
	}
	static class UAnalyticsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalyticsManager>();
	}
};
static_assert(alignof(UAnalyticsManager) == 0x000008, "Wrong alignment on UAnalyticsManager");
static_assert(sizeof(UAnalyticsManager) == 0x003BA0, "Wrong size on UAnalyticsManager");

// Class DBDAnalytics.ClosetAnalytics
// 0x0000 (0x0030 - 0x0030)
class UClosetAnalytics final : public UBlueprintFunctionLibrary
{
public:
	static void IncrementClosetEnter(class ACamperPlayer* survivor);
	static void RecordClosetSearchFail(class ASlasherPlayer* killer);
	static void RecordClosetSearchSuccess(class ASlasherPlayer* killer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClosetAnalytics">();
	}
	static class UClosetAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClosetAnalytics>();
	}
};
static_assert(alignof(UClosetAnalytics) == 0x000008, "Wrong alignment on UClosetAnalytics");
static_assert(sizeof(UClosetAnalytics) == 0x000030, "Wrong size on UClosetAnalytics");

// Class DBDAnalytics.DBDAnalytics
// 0x0000 (0x0030 - 0x0030)
class UDBDAnalytics final : public UBHVRAnalytics
{
public:
	static void RecordGameProgress(const class FString& InProgressType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDAnalytics">();
	}
	static class UDBDAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDAnalytics>();
	}
};
static_assert(alignof(UDBDAnalytics) == 0x000008, "Wrong alignment on UDBDAnalytics");
static_assert(sizeof(UDBDAnalytics) == 0x000030, "Wrong size on UDBDAnalytics");

// Class DBDAnalytics.EmblemAnalyticsComponent
// 0x00F8 (0x01B0 - 0x00B8)
class UEmblemAnalyticsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0xF8];                                      // 0x00B8(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmblemAnalyticsComponent">();
	}
	static class UEmblemAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmblemAnalyticsComponent>();
	}
};
static_assert(alignof(UEmblemAnalyticsComponent) == 0x000008, "Wrong alignment on UEmblemAnalyticsComponent");
static_assert(sizeof(UEmblemAnalyticsComponent) == 0x0001B0, "Wrong size on UEmblemAnalyticsComponent");

// Class DBDAnalytics.InteractionAnalyticsComponent
// 0x00C8 (0x0180 - 0x00B8)
class UInteractionAnalyticsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0xC8];                                      // 0x00B8(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InteractionAnalyticsComponent">();
	}
	static class UInteractionAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionAnalyticsComponent>();
	}
};
static_assert(alignof(UInteractionAnalyticsComponent) == 0x000008, "Wrong alignment on UInteractionAnalyticsComponent");
static_assert(sizeof(UInteractionAnalyticsComponent) == 0x000180, "Wrong size on UInteractionAnalyticsComponent");

// Class DBDAnalytics.PigAnalytics
// 0x0000 (0x0030 - 0x0030)
class UPigAnalytics final : public UBlueprintFunctionLibrary
{
public:
	static void IncrementRBTKilledCount(class ACamperPlayer* playerKilled, bool killedByExecutionZone);
	static void IncrementRBTTimerActived(class ACamperPlayer* attachedPlayer);
	static void OnRBTAttached_Analytics(class ASlasherPlayer* attacher, class ACamperPlayer* attachee);
	static void RecordRBTSearch(class ACamperPlayer* searchingPlayer, bool success);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PigAnalytics">();
	}
	static class UPigAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPigAnalytics>();
	}
};
static_assert(alignof(UPigAnalytics) == 0x000008, "Wrong alignment on UPigAnalytics");
static_assert(sizeof(UPigAnalytics) == 0x000030, "Wrong size on UPigAnalytics");

// Class DBDAnalytics.PlayerHookAnalyticsComponent
// 0x0330 (0x03E8 - 0x00B8)
class UPlayerHookAnalyticsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x330];                                     // 0x00B8(0x0330)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerHookAnalyticsComponent">();
	}
	static class UPlayerHookAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerHookAnalyticsComponent>();
	}
};
static_assert(alignof(UPlayerHookAnalyticsComponent) == 0x000008, "Wrong alignment on UPlayerHookAnalyticsComponent");
static_assert(sizeof(UPlayerHookAnalyticsComponent) == 0x0003E8, "Wrong size on UPlayerHookAnalyticsComponent");

// Class DBDAnalytics.PulldownAnalytics
// 0x0000 (0x0030 - 0x0030)
class UPulldownAnalytics final : public UBlueprintFunctionLibrary
{
public:
	static void IncrementPalletDestroy(class ASlasherPlayer* killer);
	static void IncrementPalletDrop(class ACamperPlayer* survivor);
	static void IncrementPalletSpawned(class AActor* actor);
	static void IncrementPalletStun(class ACamperPlayer* survivor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PulldownAnalytics">();
	}
	static class UPulldownAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPulldownAnalytics>();
	}
};
static_assert(alignof(UPulldownAnalytics) == 0x000008, "Wrong alignment on UPulldownAnalytics");
static_assert(sizeof(UPulldownAnalytics) == 0x000030, "Wrong size on UPulldownAnalytics");

// Class DBDAnalytics.SurvivorAnalyticsComponent
// 0x00A8 (0x0160 - 0x00B8)
class USurvivorAnalyticsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0xA8];                                      // 0x00B8(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorAnalyticsComponent">();
	}
	static class USurvivorAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorAnalyticsComponent>();
	}
};
static_assert(alignof(USurvivorAnalyticsComponent) == 0x000008, "Wrong alignment on USurvivorAnalyticsComponent");
static_assert(sizeof(USurvivorAnalyticsComponent) == 0x000160, "Wrong size on USurvivorAnalyticsComponent");

// Class DBDAnalytics.SurvivorInteractionAnalytics
// 0x0000 (0x0030 - 0x0030)
class USurvivorInteractionAnalytics final : public UBlueprintFunctionLibrary
{
public:
	static void IncrementHealCount(class ACamperPlayer* survivor);
	static void RecordHatchEscape(class ACamperPlayer* survivor);
	static void RecordHealSuccess(class ACamperPlayer* survivor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorInteractionAnalytics">();
	}
	static class USurvivorInteractionAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorInteractionAnalytics>();
	}
};
static_assert(alignof(USurvivorInteractionAnalytics) == 0x000008, "Wrong alignment on USurvivorInteractionAnalytics");
static_assert(sizeof(USurvivorInteractionAnalytics) == 0x000030, "Wrong size on USurvivorInteractionAnalytics");

}

