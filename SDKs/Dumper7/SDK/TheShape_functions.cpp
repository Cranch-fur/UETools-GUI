#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheShape

#include "Basic.hpp"

#include "TheShape_classes.hpp"
#include "TheShape_parameters.hpp"


namespace SDK
{

// Function TheShape.ObjectOfObsession.Authority_OnDamageStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      currentDamageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectOfObsession::Authority_OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState currentDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectOfObsession", "Authority_OnDamageStateChanged");

	Params::ObjectOfObsession_Authority_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.currentDamageState = currentDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheShape.ObjectOfObsession.Authority_OnPlayerImmobilizeStateChanged
// (Final, Native, Private)
// Parameters:
// const ECamperImmobilizeState            oldImmobilizeState                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ECamperImmobilizeState            newImmobilizeState                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectOfObsession::Authority_OnPlayerImmobilizeStateChanged(const ECamperImmobilizeState oldImmobilizeState, const ECamperImmobilizeState newImmobilizeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectOfObsession", "Authority_OnPlayerImmobilizeStateChanged");

	Params::ObjectOfObsession_Authority_OnPlayerImmobilizeStateChanged Parms{};

	Parms.oldImmobilizeState = oldImmobilizeState;
	Parms.newImmobilizeState = newImmobilizeState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

