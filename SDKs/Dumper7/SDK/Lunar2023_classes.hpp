#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lunar2023

#include "Basic.hpp"

#include "Lunar2022_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SpecialEventUtilities_classes.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class Lunar2023.Lunar2023EventComponent
// 0x0070 (0x0230 - 0x01C0)
class ULunar2023EventComponent final : public ULunar2022EventComponent
{
public:
	struct FDBDTunableRowHandle                   _paperLanternSwitchTimerMin;                       // 0x01C0(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternSwitchTimerMax;                       // 0x01E8(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimedInteractionRespawnableTrigger*    _timedInteractionRespawnableTrigger;               // 0x0210(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_218[0x18];                                     // 0x0218(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Lunar2023EventComponent">();
	}
	static class ULunar2023EventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULunar2023EventComponent>();
	}
};
static_assert(alignof(ULunar2023EventComponent) == 0x000008, "Wrong alignment on ULunar2023EventComponent");
static_assert(sizeof(ULunar2023EventComponent) == 0x000230, "Wrong size on ULunar2023EventComponent");
static_assert(offsetof(ULunar2023EventComponent, _paperLanternSwitchTimerMin) == 0x0001C0, "Member 'ULunar2023EventComponent::_paperLanternSwitchTimerMin' has a wrong offset!");
static_assert(offsetof(ULunar2023EventComponent, _paperLanternSwitchTimerMax) == 0x0001E8, "Member 'ULunar2023EventComponent::_paperLanternSwitchTimerMax' has a wrong offset!");
static_assert(offsetof(ULunar2023EventComponent, _timedInteractionRespawnableTrigger) == 0x000210, "Member 'ULunar2023EventComponent::_timedInteractionRespawnableTrigger' has a wrong offset!");

// Class Lunar2023.PaperLantern
// 0x0128 (0x0478 - 0x0350)
class APaperLantern final : public ARespawnableInteractable
{
public:
	class UPaperLanternInteraction*               _paperLanternInteractionSurvivor;                  // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPaperLanternInteraction*               _paperLanternInteractionKiller;                    // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _paperLanternInteractionChargeableSurvivor;        // 0x0360(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _paperLanternInteractionChargeableKiller;          // 0x0368(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                            _paperLanternInteractor;                           // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                    _paperLanternInteractionZone;                      // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   _paperLanternStaticMesh;                           // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternInteractionSecondsToChargeSurvivor;   // 0x0390(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternInteractionSecondsToChargeKiller;     // 0x03B8(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternSpeedBoost;                           // 0x03E0(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternVaultSpeedBoost;                      // 0x0408(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _paperLanternBuffDuration;                         // 0x0430(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           _auraColorWhileInteracting;                        // 0x0458(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _paperLanternSpeedEffect;                          // 0x0468(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _paperLanternVaultSpeedEffect;                     // 0x0470(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnInteractionCancelled(class ADBDPlayer* interactingPlayer);
	void Cosmetic_OnInteractionCompleted(class ADBDPlayer* interactingPlayer);
	void Cosmetic_OnStartedInteracting(class ADBDPlayer* interactingPlayer, float interactionDuration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperLantern">();
	}
	static class APaperLantern* GetDefaultObj()
	{
		return GetDefaultObjImpl<APaperLantern>();
	}
};
static_assert(alignof(APaperLantern) == 0x000008, "Wrong alignment on APaperLantern");
static_assert(sizeof(APaperLantern) == 0x000478, "Wrong size on APaperLantern");
static_assert(offsetof(APaperLantern, _paperLanternInteractionSurvivor) == 0x000350, "Member 'APaperLantern::_paperLanternInteractionSurvivor' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionKiller) == 0x000358, "Member 'APaperLantern::_paperLanternInteractionKiller' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionChargeableSurvivor) == 0x000360, "Member 'APaperLantern::_paperLanternInteractionChargeableSurvivor' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionChargeableKiller) == 0x000368, "Member 'APaperLantern::_paperLanternInteractionChargeableKiller' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractor) == 0x000370, "Member 'APaperLantern::_paperLanternInteractor' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionZone) == 0x000378, "Member 'APaperLantern::_paperLanternInteractionZone' has a wrong offset!");
static_assert(offsetof(APaperLantern, _outlineComponent) == 0x000380, "Member 'APaperLantern::_outlineComponent' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternStaticMesh) == 0x000388, "Member 'APaperLantern::_paperLanternStaticMesh' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionSecondsToChargeSurvivor) == 0x000390, "Member 'APaperLantern::_paperLanternInteractionSecondsToChargeSurvivor' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternInteractionSecondsToChargeKiller) == 0x0003B8, "Member 'APaperLantern::_paperLanternInteractionSecondsToChargeKiller' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternSpeedBoost) == 0x0003E0, "Member 'APaperLantern::_paperLanternSpeedBoost' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternVaultSpeedBoost) == 0x000408, "Member 'APaperLantern::_paperLanternVaultSpeedBoost' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternBuffDuration) == 0x000430, "Member 'APaperLantern::_paperLanternBuffDuration' has a wrong offset!");
static_assert(offsetof(APaperLantern, _auraColorWhileInteracting) == 0x000458, "Member 'APaperLantern::_auraColorWhileInteracting' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternSpeedEffect) == 0x000468, "Member 'APaperLantern::_paperLanternSpeedEffect' has a wrong offset!");
static_assert(offsetof(APaperLantern, _paperLanternVaultSpeedEffect) == 0x000470, "Member 'APaperLantern::_paperLanternVaultSpeedEffect' has a wrong offset!");

// Class Lunar2023.PaperLanternInteraction
// 0x0020 (0x0760 - 0x0740)
class UPaperLanternInteraction final : public UChargeableInteractionDefinition
{
public:
	uint8                                         Pad_740[0x20];                                     // 0x0740(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PaperLanternInteraction">();
	}
	static class UPaperLanternInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPaperLanternInteraction>();
	}
};
static_assert(alignof(UPaperLanternInteraction) == 0x000010, "Wrong alignment on UPaperLanternInteraction");
static_assert(sizeof(UPaperLanternInteraction) == 0x000760, "Wrong size on UPaperLanternInteraction");

}

