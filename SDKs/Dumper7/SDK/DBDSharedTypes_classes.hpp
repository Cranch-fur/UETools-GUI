#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDSharedTypes

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class DBDSharedTypes.ObjectiveIndicatorViewData
// 0x0008 (0x0038 - 0x0030)
class UObjectiveIndicatorViewData final : public UObject
{
public:
	class UTexture2D*                             IndicatorIcon;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectiveIndicatorViewData">();
	}
	static class UObjectiveIndicatorViewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectiveIndicatorViewData>();
	}
};
static_assert(alignof(UObjectiveIndicatorViewData) == 0x000008, "Wrong alignment on UObjectiveIndicatorViewData");
static_assert(sizeof(UObjectiveIndicatorViewData) == 0x000038, "Wrong size on UObjectiveIndicatorViewData");
static_assert(offsetof(UObjectiveIndicatorViewData, IndicatorIcon) == 0x000030, "Member 'UObjectiveIndicatorViewData::IndicatorIcon' has a wrong offset!");

// Class DBDSharedTypes.TerrorRadiusIndicatorViewData
// 0x0010 (0x0040 - 0x0030)
class UTerrorRadiusIndicatorViewData final : public UObject
{
public:
	struct FGameplayTag                           TerrorRadiusHeartState;                            // 0x0030(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TerrorRadiusIndicatorViewData">();
	}
	static class UTerrorRadiusIndicatorViewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTerrorRadiusIndicatorViewData>();
	}
};
static_assert(alignof(UTerrorRadiusIndicatorViewData) == 0x000008, "Wrong alignment on UTerrorRadiusIndicatorViewData");
static_assert(sizeof(UTerrorRadiusIndicatorViewData) == 0x000040, "Wrong size on UTerrorRadiusIndicatorViewData");
static_assert(offsetof(UTerrorRadiusIndicatorViewData, TerrorRadiusHeartState) == 0x000030, "Member 'UTerrorRadiusIndicatorViewData::TerrorRadiusHeartState' has a wrong offset!");

}

