#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheHag

#include "Basic.hpp"

#include "TheHag_classes.hpp"
#include "TheHag_parameters.hpp"


namespace SDK
{

// Function TheHag.HagScoreComponent.Authority_OnActorEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          endPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHagScoreComponent::Authority_OnActorEndPlay(class AActor* actor, EEndPlayReason endPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HagScoreComponent", "Authority_OnActorEndPlay");

	Params::HagScoreComponent_Authority_OnActorEndPlay Parms{};

	Parms.actor = actor;
	Parms.endPlayReason = endPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.BP_OnTrapDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    playerDestroyingTrap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::BP_OnTrapDestroyed(class ACamperPlayer* playerDestroyingTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "BP_OnTrapDestroyed");

	Params::PhantomTrap_BP_OnTrapDestroyed Parms{};

	Parms.playerDestroyingTrap = playerDestroyingTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.PhantomTrap.CanActivateTrap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    camper                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInUse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::CanActivateTrap(class ACamperPlayer* camper, bool isInUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "CanActivateTrap");

	Params::PhantomTrap_CanActivateTrap Parms{};

	Parms.camper = camper;
	Parms.isInUse = isInUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.InitializeTerrorRadiusEmitter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   OwningSlasher                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::InitializeTerrorRadiusEmitter(class ASlasherPlayer* OwningSlasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "InitializeTerrorRadiusEmitter");

	Params::PhantomTrap_InitializeTerrorRadiusEmitter Parms{};

	Parms.OwningSlasher = OwningSlasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.Multicast_DestroyTrap
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ACamperPlayer*                    playerDestroyingTrap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::Multicast_DestroyTrap(class ACamperPlayer* playerDestroyingTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "Multicast_DestroyTrap");

	Params::PhantomTrap_Multicast_DestroyTrap Parms{};

	Parms.playerDestroyingTrap = playerDestroyingTrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.OnTrapActivated
// (Final, Native, Protected, BlueprintCallable)

void APhantomTrap::OnTrapActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "OnTrapActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.OnTrapReset
// (Final, Native, Protected, BlueprintCallable)

void APhantomTrap::OnTrapReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "OnTrapReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.GetMesh
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* APhantomTrap::GetMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "GetMesh");

	Params::PhantomTrap_GetMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.IsTrapSet
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::IsTrapSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "IsTrapSet");

	Params::PhantomTrap_IsTrapSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.TeleportToPhantomTrap.BP_OnTeleport
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APhantomTrap*                     trap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::BP_OnTeleport(class ASlasherPlayer* slasher, class APhantomTrap* trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "BP_OnTeleport");

	Params::TeleportToPhantomTrap_BP_OnTeleport Parms{};

	Parms.slasher = slasher;
	Parms.trap = trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.Cosmetic_OnInteractionFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hasInteractionStarted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::Cosmetic_OnInteractionFinished(class ADBDPlayer* slasher, bool hasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "Cosmetic_OnInteractionFinished");

	Params::TeleportToPhantomTrap_Cosmetic_OnInteractionFinished Parms{};

	Parms.slasher = slasher;
	Parms.hasInteractionStarted = hasInteractionStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.Cosmetic_OnTeleport
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APhantomTrap*                     trap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::Cosmetic_OnTeleport(class ASlasherPlayer* slasher, class APhantomTrap* trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "Cosmetic_OnTeleport");

	Params::TeleportToPhantomTrap_Cosmetic_OnTeleport Parms{};

	Parms.slasher = slasher;
	Parms.trap = trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.GetPhantomTrap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APhantomTrap*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APhantomTrap* UTeleportToPhantomTrap::GetPhantomTrap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "GetPhantomTrap");

	Params::TeleportToPhantomTrap_GetPhantomTrap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.TeleportToPhantomTrap.GetTeleportMaxDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASlasherPlayer*                   slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTeleportToPhantomTrap::GetTeleportMaxDistance(class ASlasherPlayer* slasher) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "GetTeleportMaxDistance");

	Params::TeleportToPhantomTrap_GetTeleportMaxDistance Parms{};

	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.WipeAwayPhantomTrapInteraction.CancelInteraction
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWipeAwayPhantomTrapInteraction::CancelInteraction(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WipeAwayPhantomTrapInteraction", "CancelInteraction");

	Params::WipeAwayPhantomTrapInteraction_CancelInteraction Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

