#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAnalytics

#include "Basic.hpp"

#include "DBDAnalytics_classes.hpp"
#include "DBDAnalytics_parameters.hpp"


namespace SDK
{

// Function DBDAnalytics.PerkAnalyticsLibrary.SendFranklinsConsumeItemAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       previousOwner                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendFranklinsConsumeItemAnalytics(class ADBDPlayer* previousOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendFranklinsConsumeItemAnalytics");

	Params::PerkAnalyticsLibrary_SendFranklinsConsumeItemAnalytics Parms{};

	Parms.previousOwner = previousOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PerkAnalyticsLibrary.SendFranklinsHitSurvivorNearDroppedItemAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       hitSurvivor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendFranklinsHitSurvivorNearDroppedItemAnalytics(class ADBDPlayer* hitSurvivor, class ADBDPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendFranklinsHitSurvivorNearDroppedItemAnalytics");

	Params::PerkAnalyticsLibrary_SendFranklinsHitSurvivorNearDroppedItemAnalytics Parms{};

	Parms.hitSurvivor = hitSurvivor;
	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PerkAnalyticsLibrary.SendKnockoutSurvivorFoundAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       findingSurvivor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendKnockoutSurvivorFoundAnalytics(class ADBDPlayer* findingSurvivor, class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendKnockoutSurvivorFoundAnalytics");

	Params::PerkAnalyticsLibrary_SendKnockoutSurvivorFoundAnalytics Parms{};

	Parms.findingSurvivor = findingSurvivor;
	Parms.foundSurvivor = foundSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PerkAnalyticsLibrary.SendLightbornAuraRevealedAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       revealedPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendLightbornAuraRevealedAnalytics(class ADBDPlayer* revealedPlayer, class ADBDPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendLightbornAuraRevealedAnalytics");

	Params::PerkAnalyticsLibrary_SendLightbornAuraRevealedAnalytics Parms{};

	Parms.revealedPlayer = revealedPlayer;
	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PerkAnalyticsLibrary.SendTinkererUndetectableHitNearGeneratorAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       hitPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendTinkererUndetectableHitNearGeneratorAnalytics(class ADBDPlayer* hitPlayer, class ADBDPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendTinkererUndetectableHitNearGeneratorAnalytics");

	Params::PerkAnalyticsLibrary_SendTinkererUndetectableHitNearGeneratorAnalytics Parms{};

	Parms.hitPlayer = hitPlayer;
	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PerkAnalyticsLibrary.SendTinkererUndetectableInterruptAnalytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADBDPlayer*                       interruptedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerkAnalyticsLibrary::SendTinkererUndetectableInterruptAnalytics(class ADBDPlayer* interruptedPlayer, class ADBDPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PerkAnalyticsLibrary", "SendTinkererUndetectableInterruptAnalytics");

	Params::PerkAnalyticsLibrary_SendTinkererUndetectableInterruptAnalytics Parms{};

	Parms.interruptedPlayer = interruptedPlayer;
	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.AnalyticsFunctionLibrary.IncrementHookSpawned
// (Final, Native, Static, Public, BlueprintCallable)

void UAnalyticsFunctionLibrary::IncrementHookSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AnalyticsFunctionLibrary", "IncrementHookSpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.ClosetAnalytics.IncrementClosetEnter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClosetAnalytics::IncrementClosetEnter(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClosetAnalytics", "IncrementClosetEnter");

	Params::ClosetAnalytics_IncrementClosetEnter Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.ClosetAnalytics.RecordClosetSearchFail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClosetAnalytics::RecordClosetSearchFail(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClosetAnalytics", "RecordClosetSearchFail");

	Params::ClosetAnalytics_RecordClosetSearchFail Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.ClosetAnalytics.RecordClosetSearchSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UClosetAnalytics::RecordClosetSearchSuccess(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ClosetAnalytics", "RecordClosetSearchSuccess");

	Params::ClosetAnalytics_RecordClosetSearchSuccess Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.DBDAnalytics.RecordGameProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InProgressType                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDBDAnalytics::RecordGameProgress(const class FString& InProgressType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DBDAnalytics", "RecordGameProgress");

	Params::DBDAnalytics_RecordGameProgress Parms{};

	Parms.InProgressType = std::move(InProgressType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PigAnalytics.IncrementRBTKilledCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    playerKilled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    killedByExecutionZone                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPigAnalytics::IncrementRBTKilledCount(class ACamperPlayer* playerKilled, bool killedByExecutionZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PigAnalytics", "IncrementRBTKilledCount");

	Params::PigAnalytics_IncrementRBTKilledCount Parms{};

	Parms.playerKilled = playerKilled;
	Parms.killedByExecutionZone = killedByExecutionZone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PigAnalytics.IncrementRBTTimerActived
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    attachedPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPigAnalytics::IncrementRBTTimerActived(class ACamperPlayer* attachedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PigAnalytics", "IncrementRBTTimerActived");

	Params::PigAnalytics_IncrementRBTTimerActived Parms{};

	Parms.attachedPlayer = attachedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PigAnalytics.OnRBTAttached_Analytics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   attacher                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACamperPlayer*                    attachee                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPigAnalytics::OnRBTAttached_Analytics(class ASlasherPlayer* attacher, class ACamperPlayer* attachee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PigAnalytics", "OnRBTAttached_Analytics");

	Params::PigAnalytics_OnRBTAttached_Analytics Parms{};

	Parms.attacher = attacher;
	Parms.attachee = attachee;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PigAnalytics.RecordRBTSearch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    searchingPlayer                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPigAnalytics::RecordRBTSearch(class ACamperPlayer* searchingPlayer, bool success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PigAnalytics", "RecordRBTSearch");

	Params::PigAnalytics_RecordRBTSearch Parms{};

	Parms.searchingPlayer = searchingPlayer;
	Parms.success = success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PulldownAnalytics.IncrementPalletDestroy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPulldownAnalytics::IncrementPalletDestroy(class ASlasherPlayer* killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PulldownAnalytics", "IncrementPalletDestroy");

	Params::PulldownAnalytics_IncrementPalletDestroy Parms{};

	Parms.killer = killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PulldownAnalytics.IncrementPalletDrop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPulldownAnalytics::IncrementPalletDrop(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PulldownAnalytics", "IncrementPalletDrop");

	Params::PulldownAnalytics_IncrementPalletDrop Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PulldownAnalytics.IncrementPalletSpawned
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPulldownAnalytics::IncrementPalletSpawned(class AActor* actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PulldownAnalytics", "IncrementPalletSpawned");

	Params::PulldownAnalytics_IncrementPalletSpawned Parms{};

	Parms.actor = actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.PulldownAnalytics.IncrementPalletStun
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPulldownAnalytics::IncrementPalletStun(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PulldownAnalytics", "IncrementPalletStun");

	Params::PulldownAnalytics_IncrementPalletStun Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.SurvivorInteractionAnalytics.IncrementHealCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorInteractionAnalytics::IncrementHealCount(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SurvivorInteractionAnalytics", "IncrementHealCount");

	Params::SurvivorInteractionAnalytics_IncrementHealCount Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.SurvivorInteractionAnalytics.RecordHatchEscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorInteractionAnalytics::RecordHatchEscape(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SurvivorInteractionAnalytics", "RecordHatchEscape");

	Params::SurvivorInteractionAnalytics_RecordHatchEscape Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAnalytics.SurvivorInteractionAnalytics.RecordHealSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorInteractionAnalytics::RecordHealSuccess(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SurvivorInteractionAnalytics", "RecordHealSuccess");

	Params::SurvivorInteractionAnalytics_RecordHealSuccess Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

