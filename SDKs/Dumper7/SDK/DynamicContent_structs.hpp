#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicContent

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK
{

// ScriptStruct DynamicContent.BaseBannerData
// 0x0038 (0x0038 - 0x0000)
struct FBaseBannerData
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TitleId;                                           // 0x0010(0x0018)(Transient, NativeAccessSpecifierPublic)
	class FString                                 BannerContentId;                                   // 0x0028(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBaseBannerData) == 0x000008, "Wrong alignment on FBaseBannerData");
static_assert(sizeof(FBaseBannerData) == 0x000038, "Wrong size on FBaseBannerData");
static_assert(offsetof(FBaseBannerData, Priority) == 0x000008, "Member 'FBaseBannerData::Priority' has a wrong offset!");
static_assert(offsetof(FBaseBannerData, TitleId) == 0x000010, "Member 'FBaseBannerData::TitleId' has a wrong offset!");
static_assert(offsetof(FBaseBannerData, BannerContentId) == 0x000028, "Member 'FBaseBannerData::BannerContentId' has a wrong offset!");

// ScriptStruct DynamicContent.TaskContainer
// 0x0018 (0x0018 - 0x0000)
struct FTaskContainer final
{
public:
	class UDownloadMultiTextureTask*              DownloadTask;                                      // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTaskContainer) == 0x000008, "Wrong alignment on FTaskContainer");
static_assert(sizeof(FTaskContainer) == 0x000018, "Wrong size on FTaskContainer");
static_assert(offsetof(FTaskContainer, DownloadTask) == 0x000000, "Member 'FTaskContainer::DownloadTask' has a wrong offset!");

// ScriptStruct DynamicContent.LoadingImagesHintInfo
// 0x00C8 (0x00C8 - 0x0000)
struct FLoadingImagesHintInfo final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(Transient, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0018(0x0018)(Transient, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0030(0x0090)(Transient, NativeAccessSpecifierPublic)
	bool                                          IsAvailableForKiller;                              // 0x00C0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAvailableForSurvivor;                            // 0x00C1(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLoadingImagesHintInfo) == 0x000008, "Wrong alignment on FLoadingImagesHintInfo");
static_assert(sizeof(FLoadingImagesHintInfo) == 0x0000C8, "Wrong size on FLoadingImagesHintInfo");
static_assert(offsetof(FLoadingImagesHintInfo, Title) == 0x000000, "Member 'FLoadingImagesHintInfo::Title' has a wrong offset!");
static_assert(offsetof(FLoadingImagesHintInfo, Description) == 0x000018, "Member 'FLoadingImagesHintInfo::Description' has a wrong offset!");
static_assert(offsetof(FLoadingImagesHintInfo, Icon) == 0x000030, "Member 'FLoadingImagesHintInfo::Icon' has a wrong offset!");
static_assert(offsetof(FLoadingImagesHintInfo, IsAvailableForKiller) == 0x0000C0, "Member 'FLoadingImagesHintInfo::IsAvailableForKiller' has a wrong offset!");
static_assert(offsetof(FLoadingImagesHintInfo, IsAvailableForSurvivor) == 0x0000C1, "Member 'FLoadingImagesHintInfo::IsAvailableForSurvivor' has a wrong offset!");

// ScriptStruct DynamicContent.LoadingImages
// 0x0038 (0x0038 - 0x0000)
struct FLoadingImages final
{
public:
	class FName                                   ID;                                                // 0x0000(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSlateBrush>                    Images;                                            // 0x0010(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FLoadingImagesHintInfo>         ImagesHintInfo;                                    // 0x0020(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                          IsAvailableForSurvivor;                            // 0x0030(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAvailableForKiller;                              // 0x0031(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGenericImages;                                   // 0x0032(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLoadingImages) == 0x000008, "Wrong alignment on FLoadingImages");
static_assert(sizeof(FLoadingImages) == 0x000038, "Wrong size on FLoadingImages");
static_assert(offsetof(FLoadingImages, ID) == 0x000000, "Member 'FLoadingImages::ID' has a wrong offset!");
static_assert(offsetof(FLoadingImages, Images) == 0x000010, "Member 'FLoadingImages::Images' has a wrong offset!");
static_assert(offsetof(FLoadingImages, ImagesHintInfo) == 0x000020, "Member 'FLoadingImages::ImagesHintInfo' has a wrong offset!");
static_assert(offsetof(FLoadingImages, IsAvailableForSurvivor) == 0x000030, "Member 'FLoadingImages::IsAvailableForSurvivor' has a wrong offset!");
static_assert(offsetof(FLoadingImages, IsAvailableForKiller) == 0x000031, "Member 'FLoadingImages::IsAvailableForKiller' has a wrong offset!");
static_assert(offsetof(FLoadingImages, IsGenericImages) == 0x000032, "Member 'FLoadingImages::IsGenericImages' has a wrong offset!");

// ScriptStruct DynamicContent.LRUTextureCache
// 0x0068 (0x0068 - 0x0000)
struct FLRUTextureCache final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UTexture2DDynamic*>   _cachedTextures;                                   // 0x0010(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLRUTextureCache) == 0x000008, "Wrong alignment on FLRUTextureCache");
static_assert(sizeof(FLRUTextureCache) == 0x000068, "Wrong size on FLRUTextureCache");
static_assert(offsetof(FLRUTextureCache, _cachedTextures) == 0x000010, "Member 'FLRUTextureCache::_cachedTextures' has a wrong offset!");

// ScriptStruct DynamicContent.MarketingBannerData
// 0x0028 (0x0060 - 0x0038)
struct FMarketingBannerData final : public FBaseBannerData
{
public:
	class FText                                   SubTitleId;                                        // 0x0038(0x0018)(Transient, NativeAccessSpecifierPublic)
	class FString                                 DeepLink;                                          // 0x0050(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMarketingBannerData) == 0x000008, "Wrong alignment on FMarketingBannerData");
static_assert(sizeof(FMarketingBannerData) == 0x000060, "Wrong size on FMarketingBannerData");
static_assert(offsetof(FMarketingBannerData, SubTitleId) == 0x000038, "Member 'FMarketingBannerData::SubTitleId' has a wrong offset!");
static_assert(offsetof(FMarketingBannerData, DeepLink) == 0x000050, "Member 'FMarketingBannerData::DeepLink' has a wrong offset!");

}

