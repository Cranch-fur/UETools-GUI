#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SharedAuthenticationUtilities

#include "Basic.hpp"

#include "SharedAuthenticationUtilities_structs.hpp"


namespace SDK::Params
{

// Function SharedAuthenticationUtilities.UMGAuthenticationProviderSelection.SetMigrateWarningMessageAndShowPopup
// 0x0010 (0x0010 - 0x0000)
struct UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup final
{
public:
	class FString                                 playerName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup) == 0x000008, "Wrong alignment on UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup");
static_assert(sizeof(UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup) == 0x000010, "Wrong size on UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup");
static_assert(offsetof(UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup, playerName) == 0x000000, "Member 'UMGAuthenticationProviderSelection_SetMigrateWarningMessageAndShowPopup::playerName' has a wrong offset!");

// Function SharedAuthenticationUtilities.UMGAuthenticationProviderSelection.SetSelectedAuthenticationProvider
// 0x0001 (0x0001 - 0x0000)
struct UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider final
{
public:
	ESharedAuthenticationProvider                 provider;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider) == 0x000001, "Wrong alignment on UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider");
static_assert(sizeof(UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider) == 0x000001, "Wrong size on UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider");
static_assert(offsetof(UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider, provider) == 0x000000, "Member 'UMGAuthenticationProviderSelection_SetSelectedAuthenticationProvider::provider' has a wrong offset!");

// Function SharedAuthenticationUtilities.UMGAutheticationProviderSelection.SetSelectedAuthenticationProvider
// 0x0001 (0x0001 - 0x0000)
struct UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider final
{
public:
	ESharedAuthenticationProvider                 provider;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider) == 0x000001, "Wrong alignment on UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider");
static_assert(sizeof(UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider) == 0x000001, "Wrong size on UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider");
static_assert(offsetof(UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider, provider) == 0x000000, "Member 'UMGAutheticationProviderSelection_SetSelectedAuthenticationProvider::provider' has a wrong offset!");

}

