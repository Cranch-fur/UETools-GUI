#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Halloween2020

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class Halloween2020.BlightedSerumAddon
// 0x0058 (0x0310 - 0x02B8)
class UBlightedSerumAddon final : public UItemAddon
{
public:
	TSubclassOf<class ACollectable>               _blightedSerumCollectable;                         // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlightedSerumDashInteraction*          _dashInteraction;                                  // 0x02C0(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _theBlightExtraTokens;                             // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _numberOfDashesPerEvent;                           // 0x02CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x40];                                     // 0x02D0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBlightedDashEnabledVfxSfx();
	void OnRep_DashInteraction();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumAddon">();
	}
	static class UBlightedSerumAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumAddon>();
	}
};
static_assert(alignof(UBlightedSerumAddon) == 0x000008, "Wrong alignment on UBlightedSerumAddon");
static_assert(sizeof(UBlightedSerumAddon) == 0x000310, "Wrong size on UBlightedSerumAddon");
static_assert(offsetof(UBlightedSerumAddon, _blightedSerumCollectable) == 0x0002B8, "Member 'UBlightedSerumAddon::_blightedSerumCollectable' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _dashInteraction) == 0x0002C0, "Member 'UBlightedSerumAddon::_dashInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _theBlightExtraTokens) == 0x0002C8, "Member 'UBlightedSerumAddon::_theBlightExtraTokens' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _numberOfDashesPerEvent) == 0x0002CC, "Member 'UBlightedSerumAddon::_numberOfDashesPerEvent' has a wrong offset!");

// Class Halloween2020.BlightedSerumCollisionInteraction
// 0x0010 (0x0630 - 0x0620)
class UBlightedSerumCollisionInteraction final : public UInteractionDefinition
{
public:
	class UBlightedSerumCooldownInteraction*      _cooldownInteraction;                              // 0x0618(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _bounceTime;                                       // 0x0620(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_624[0xC];                                      // 0x0624(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCooldownInteraction(class UBlightedSerumCooldownInteraction* cooldownInteraction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumCollisionInteraction">();
	}
	static class UBlightedSerumCollisionInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumCollisionInteraction>();
	}
};
static_assert(alignof(UBlightedSerumCollisionInteraction) == 0x000010, "Wrong alignment on UBlightedSerumCollisionInteraction");
static_assert(sizeof(UBlightedSerumCollisionInteraction) == 0x000630, "Wrong size on UBlightedSerumCollisionInteraction");
static_assert(offsetof(UBlightedSerumCollisionInteraction, _cooldownInteraction) == 0x000618, "Member 'UBlightedSerumCollisionInteraction::_cooldownInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumCollisionInteraction, _bounceTime) == 0x000620, "Member 'UBlightedSerumCollisionInteraction::_bounceTime' has a wrong offset!");

// Class Halloween2020.BlightedSerumCooldownInteraction
// 0x0010 (0x0630 - 0x0620)
class UBlightedSerumCooldownInteraction final : public UInteractionDefinition
{
public:
	float                                         _cooldownTime;                                     // 0x0618(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cameraPitchRecenterTime;                          // 0x061C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_620[0x10];                                     // 0x0620(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumCooldownInteraction">();
	}
	static class UBlightedSerumCooldownInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumCooldownInteraction>();
	}
};
static_assert(alignof(UBlightedSerumCooldownInteraction) == 0x000010, "Wrong alignment on UBlightedSerumCooldownInteraction");
static_assert(sizeof(UBlightedSerumCooldownInteraction) == 0x000630, "Wrong size on UBlightedSerumCooldownInteraction");
static_assert(offsetof(UBlightedSerumCooldownInteraction, _cooldownTime) == 0x000618, "Member 'UBlightedSerumCooldownInteraction::_cooldownTime' has a wrong offset!");
static_assert(offsetof(UBlightedSerumCooldownInteraction, _cameraPitchRecenterTime) == 0x00061C, "Member 'UBlightedSerumCooldownInteraction::_cameraPitchRecenterTime' has a wrong offset!");

// Class Halloween2020.BlightedSerumDashInteraction
// 0x0090 (0x06B0 - 0x0620)
class UBlightedSerumDashInteraction final : public UInteractionDefinition
{
public:
	class UBlightedSerumCooldownInteraction*      _cooldownInteraction;                              // 0x0618(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlightedSerumCollisionInteraction*     _collisionInteraction;                             // 0x0620(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _dashSpeedCurve;                                   // 0x0628(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _lookAngleToTurnRateCurveController;               // 0x0630(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _lookAngleToTurnRateCurveMouse;                    // 0x0638(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _dashDuration;                                     // 0x0640(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _vectorInterpToSpeed;                              // 0x0644(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashAccelerationMultiplier;                   // 0x0648(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cameraPitchRecenterTime;                          // 0x064C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _lookAngleTurnRateModifier;                        // 0x0650(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionRadius;                          // 0x0654(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionHeight;                          // 0x0658(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionRange;                           // 0x065C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_660[0x50];                                     // 0x0660(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCollisionInteraction(class UBlightedSerumCollisionInteraction* collisionInteraction);
	void SetCooldownInteraction(class UBlightedSerumCooldownInteraction* cooldownInteraction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumDashInteraction">();
	}
	static class UBlightedSerumDashInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumDashInteraction>();
	}
};
static_assert(alignof(UBlightedSerumDashInteraction) == 0x000010, "Wrong alignment on UBlightedSerumDashInteraction");
static_assert(sizeof(UBlightedSerumDashInteraction) == 0x0006B0, "Wrong size on UBlightedSerumDashInteraction");
static_assert(offsetof(UBlightedSerumDashInteraction, _cooldownInteraction) == 0x000618, "Member 'UBlightedSerumDashInteraction::_cooldownInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _collisionInteraction) == 0x000620, "Member 'UBlightedSerumDashInteraction::_collisionInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _dashSpeedCurve) == 0x000628, "Member 'UBlightedSerumDashInteraction::_dashSpeedCurve' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleToTurnRateCurveController) == 0x000630, "Member 'UBlightedSerumDashInteraction::_lookAngleToTurnRateCurveController' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleToTurnRateCurveMouse) == 0x000638, "Member 'UBlightedSerumDashInteraction::_lookAngleToTurnRateCurveMouse' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _dashDuration) == 0x000640, "Member 'UBlightedSerumDashInteraction::_dashDuration' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _vectorInterpToSpeed) == 0x000644, "Member 'UBlightedSerumDashInteraction::_vectorInterpToSpeed' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashAccelerationMultiplier) == 0x000648, "Member 'UBlightedSerumDashInteraction::_wallDashAccelerationMultiplier' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _cameraPitchRecenterTime) == 0x00064C, "Member 'UBlightedSerumDashInteraction::_cameraPitchRecenterTime' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleTurnRateModifier) == 0x000650, "Member 'UBlightedSerumDashInteraction::_lookAngleTurnRateModifier' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionRadius) == 0x000654, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionRadius' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionHeight) == 0x000658, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionHeight' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionRange) == 0x00065C, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionRange' has a wrong offset!");

// Class Halloween2020.ToxinPlantInteractable
// 0x0008 (0x0370 - 0x0368)
class AToxinPlantInteractable final : public ASpecialBehaviourInteractable
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSalvageInteractionFinished();
	void OnSalvageInteractionStart();
	void OnToxinPlantComplete();
	void SetToxinPlantComplete(const bool isComplete);

	bool IsToxinPlantComplete() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ToxinPlantInteractable">();
	}
	static class AToxinPlantInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<AToxinPlantInteractable>();
	}
};
static_assert(alignof(AToxinPlantInteractable) == 0x000008, "Wrong alignment on AToxinPlantInteractable");
static_assert(sizeof(AToxinPlantInteractable) == 0x000370, "Wrong size on AToxinPlantInteractable");

}

