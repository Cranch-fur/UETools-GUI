#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheBlight

#include "Basic.hpp"

#include "TheBlight_classes.hpp"
#include "TheBlight_parameters.hpp"


namespace SDK
{

// Function TheBlight.Addon_TheBlight_17.Multicast_SpawnParticleOnSurvivors
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<class ACamperPlayer*>&     survivors                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAddon_TheBlight_17::Multicast_SpawnParticleOnSurvivors(const TArray<class ACamperPlayer*>& survivors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_TheBlight_17", "Multicast_SpawnParticleOnSurvivors");

	Params::Addon_TheBlight_17_Multicast_SpawnParticleOnSurvivors Parms{};

	Parms.survivors = std::move(survivors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.Addon_TheBlight_17.SpawnParticleOnSurvivor
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class ACamperPlayer*              camperPlayer                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAddon_TheBlight_17::SpawnParticleOnSurvivor(const class ACamperPlayer* camperPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_TheBlight_17", "SpawnParticleOnSurvivor");

	Params::Addon_TheBlight_17_SpawnParticleOnSurvivor Parms{};

	Parms.camperPlayer = camperPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheBlight.BlightPower.OnPowerStateChanged
// (Final, Native, Private)
// Parameters:
// const EWallGrabState                    previousState                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EWallGrabState                    newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABlightPower::OnPowerStateChanged(const EWallGrabState previousState, const EWallGrabState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPower", "OnPowerStateChanged");

	Params::BlightPower_OnPowerStateChanged Parms{};

	Parms.previousState = previousState;
	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerEstimatedCollisionIndicator.OnHideIndicator_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABlightPowerEstimatedCollisionIndicator::OnHideIndicator_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerEstimatedCollisionIndicator", "OnHideIndicator_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheBlight.BlightPowerEstimatedCollisionIndicator.OnShowIndicator_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABlightPowerEstimatedCollisionIndicator::OnShowIndicator_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerEstimatedCollisionIndicator", "OnShowIndicator_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheBlight.BlightPowerState.GetStateDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBlightPowerState::GetStateDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerState", "GetStateDuration");

	Params::BlightPowerState_GetStateDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.Multicast_SetWallGrabState
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetValidate)
// Parameters:
// const EWallGrabState                    newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlightPowerStateComponent::Multicast_SetWallGrabState(const EWallGrabState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "Multicast_SetWallGrabState");

	Params::BlightPowerStateComponent_Multicast_SetWallGrabState Parms{};

	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.OnLevelReadyToPlay
// (Final, Native, Private)

void UBlightPowerStateComponent::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.OnRep_DashTokens
// (Final, Native, Private)

void UBlightPowerStateComponent::OnRep_DashTokens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "OnRep_DashTokens");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.OnRep_StateTimer
// (Final, Native, Private)

void UBlightPowerStateComponent::OnRep_StateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "OnRep_StateTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.ResetDashTokens
// (Final, Native, Public, BlueprintCallable)

void UBlightPowerStateComponent::ResetDashTokens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "ResetDashTokens");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.Server_SetWallGrabState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// const EWallGrabState                    newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlightPowerStateComponent::Server_SetWallGrabState(const EWallGrabState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "Server_SetWallGrabState");

	Params::BlightPowerStateComponent_Server_SetWallGrabState Parms{};

	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.BlightPowerStateComponent.CanDash
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlightPowerStateComponent::CanDash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "CanDash");

	Params::BlightPowerStateComponent_CanDash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetCurrentPowerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlightPowerState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlightPowerState* UBlightPowerStateComponent::GetCurrentPowerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetCurrentPowerState");

	Params::BlightPowerStateComponent_GetCurrentPowerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetDashTokensRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UBlightPowerStateComponent::GetDashTokensRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetDashTokensRemaining");

	Params::BlightPowerStateComponent_GetDashTokensRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetLookAngleDegrees
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBlightPowerStateComponent::GetLookAngleDegrees() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetLookAngleDegrees");

	Params::BlightPowerStateComponent_GetLookAngleDegrees Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetPowerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWallGrabState                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWallGrabState UBlightPowerStateComponent::GetPowerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetPowerState");

	Params::BlightPowerStateComponent_GetPowerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetPowerStateByEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EWallGrabState                    stateEnum                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlightPowerState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlightPowerState* UBlightPowerStateComponent::GetPowerStateByEnum(const EWallGrabState stateEnum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetPowerStateByEnum");

	Params::BlightPowerStateComponent_GetPowerStateByEnum Parms{};

	Parms.stateEnum = stateEnum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetStateTimeElapsed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBlightPowerStateComponent::GetStateTimeElapsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetStateTimeElapsed");

	Params::BlightPowerStateComponent_GetStateTimeElapsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetStateTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTimerObject*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTimerObject* UBlightPowerStateComponent::GetStateTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetStateTimer");

	Params::BlightPowerStateComponent_GetStateTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BlightPowerStateComponent.GetStateTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBlightPowerStateComponent::GetStateTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlightPowerStateComponent", "GetStateTimeRemaining");

	Params::BlightPowerStateComponent_GetStateTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.BuiltToLast.OnBuiltToLastTrigger_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UBuiltToLast::OnBuiltToLastTrigger_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuiltToLast", "OnBuiltToLastTrigger_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheBlight.DragonsGrip.Multicast_OnRevealSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDragonsGrip::Multicast_OnRevealSurvivor(class ADBDPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragonsGrip", "Multicast_OnRevealSurvivor");

	Params::DragonsGrip_Multicast_OnRevealSurvivor Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.DragonsGrip.OnRevealSurvivor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDragonsGrip::OnRevealSurvivor(class ADBDPlayer* instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragonsGrip", "OnRevealSurvivor");

	Params::DragonsGrip_OnRevealSurvivor Parms{};

	Parms.instigator = instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheBlight.HexUndying.Authority_OnCamperCleansedHexPerk
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHexUndying::Authority_OnCamperCleansedHexPerk(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HexUndying", "Authority_OnCamperCleansedHexPerk");

	Params::HexUndying_Authority_OnCamperCleansedHexPerk Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.HexUndying.Authority_OnSurvivorAdded
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHexUndying::Authority_OnSurvivorAdded(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HexUndying", "Authority_OnSurvivorAdded");

	Params::HexUndying_Authority_OnSurvivorAdded Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.HexUndying.Authority_UpdateHexPerkStatusView
// (Final, Native, Private)
// Parameters:
// class UGameplayModifierContainer*       gameplayModifierContainer                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isApplicable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHexUndying::Authority_UpdateHexPerkStatusView(class UGameplayModifierContainer* gameplayModifierContainer, bool isApplicable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HexUndying", "Authority_UpdateHexPerkStatusView");

	Params::HexUndying_Authority_UpdateHexPerkStatusView Parms{};

	Parms.gameplayModifierContainer = gameplayModifierContainer;
	Parms.isApplicable = isApplicable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheBlight.Visionary.GetCooldownAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVisionary::GetCooldownAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Visionary", "GetCooldownAtLevel");

	Params::Visionary_GetCooldownAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheBlight.Visionary.GetRangeAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVisionary::GetRangeAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Visionary", "GetRangeAtLevel");

	Params::Visionary_GetRangeAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

