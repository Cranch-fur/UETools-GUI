#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheExecutioner

#include "Basic.hpp"

#include "TheExecutioner_classes.hpp"
#include "TheExecutioner_parameters.hpp"


namespace SDK
{

// Function TheExecutioner.ActivateTormentModeInteraction.SetTormentMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATormentMode*                     tormentModeComponent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UActivateTormentModeInteraction::SetTormentMode(class ATormentMode* tormentModeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActivateTormentModeInteraction", "SetTormentMode");

	Params::ActivateTormentModeInteraction_SetTormentMode Parms{};

	Parms.tormentModeComponent = tormentModeComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.Authority_OnAttackTrailDamageCooldownTimerDone
// (Final, Native, Private)

void UAgonyComponent::Authority_OnAttackTrailDamageCooldownTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "Authority_OnAttackTrailDamageCooldownTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.Authority_OnDrainStageChanged
// (Final, Native, Private)
// Parameters:
// const int32                             drainStage                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAgonyComponent::Authority_OnDrainStageChanged(const int32 drainStage, class ADBDPlayer* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "Authority_OnDrainStageChanged");

	Params::AgonyComponent_Authority_OnDrainStageChanged Parms{};

	Parms.drainStage = drainStage;
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.HideAgonyBarbWireFX_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::HideAgonyBarbWireFX_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "HideAgonyBarbWireFX_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.OnAgonyChanged_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              isInAgony                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAgonyComponent::OnAgonyChanged_Cosmetic(const bool isInAgony)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnAgonyChanged_Cosmetic");

	Params::AgonyComponent_OnAgonyChanged_Cosmetic Parms{};

	Parms.isInAgony = isInAgony;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.AgonyComponent.OnHideBarbWireFXOnGameEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAgonyComponent::OnHideBarbWireFXOnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnHideBarbWireFXOnGameEvent");

	Params::AgonyComponent_OnHideBarbWireFXOnGameEvent Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.OnHitByTormentAttackTrail_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::OnHitByTormentAttackTrail_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnHitByTormentAttackTrail_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.OnHitInAgony_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::OnHitInAgony_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnHitInAgony_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.OnLocallyObservedChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isLocallyObserved                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAgonyComponent::OnLocallyObservedChanged(bool isLocallyObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnLocallyObservedChanged");

	Params::AgonyComponent_OnLocallyObservedChanged Parms{};

	Parms.isLocallyObserved = isLocallyObserved;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.AgonyComponent.OnRep_IsInAgony
// (Final, Native, Private)

void UAgonyComponent::OnRep_IsInAgony()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnRep_IsInAgony");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.OnShowBarbWireFXOnGameEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAgonyComponent::OnShowBarbWireFXOnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnShowBarbWireFXOnGameEvent");

	Params::AgonyComponent_OnShowBarbWireFXOnGameEvent Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.AgonyComponent.OnTrailEffectStart_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::OnTrailEffectStart_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnTrailEffectStart_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.OnTrailEffectStop_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::OnTrailEffectStop_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "OnTrailEffectStop_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.ShowAgonyBarbWireFX_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAgonyComponent::ShowAgonyBarbWireFX_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "ShowAgonyBarbWireFX_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.AgonyComponent.IsAgonyMoriable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAgonyComponent::IsAgonyMoriable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "IsAgonyMoriable");

	Params::AgonyComponent_IsAgonyMoriable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.AgonyComponent.IsInAgony
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAgonyComponent::IsInAgony() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AgonyComponent", "IsInAgony");

	Params::AgonyComponent_IsInAgony Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.BaseTormentTrailPoint.DisappearCosmetic
// (Event, Protected, BlueprintEvent)

void ABaseTormentTrailPoint::DisappearCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTormentTrailPoint", "DisappearCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.BaseTormentTrailPoint.EndOfDisapearCosmetic
// (Final, Native, Protected, BlueprintCallable)

void ABaseTormentTrailPoint::EndOfDisapearCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTormentTrailPoint", "EndOfDisapearCosmetic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.BloodPact.Authority_OnInRangeChanged
// (Final, Native, Private)
// Parameters:
// const bool                              inRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBloodPact::Authority_OnInRangeChanged(const bool inRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BloodPact", "Authority_OnInRangeChanged");

	Params::BloodPact_Authority_OnInRangeChanged Parms{};

	Parms.inRange = inRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedAntiCampComponent.Authority_OnInRangeChanged
// (Final, Native, Private)
// Parameters:
// const bool                              inRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeathBedAntiCampComponent::Authority_OnInRangeChanged(const bool inRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedAntiCampComponent", "Authority_OnInRangeChanged");

	Params::DeathBedAntiCampComponent_Authority_OnInRangeChanged Parms{};

	Parms.inRange = inRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedAntiCampComponent.Multicast_TriggerDeathBedRelocate
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UDeathBedAntiCampComponent::Multicast_TriggerDeathBedRelocate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedAntiCampComponent", "Multicast_TriggerDeathBedRelocate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.ActivateDeathBed
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const bool                              value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeathBedInteractable::ActivateDeathBed(const bool value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "ActivateDeathBed");

	Params::DeathBedInteractable_ActivateDeathBed Parms{};

	Parms.value = value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.DeathBedDisappear
// (Event, Public, BlueprintEvent)

void ADeathBedInteractable::DeathBedDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "DeathBedDisappear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.FX_DeathBedAppear
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ADeathBedInteractable::FX_DeathBedAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "FX_DeathBedAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.FX_SurvivorSavedFromDeathBed
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ADeathBedInteractable::FX_SurvivorSavedFromDeathBed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "FX_SurvivorSavedFromDeathBed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.Multicast_RelocateToOtherDeathBed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADeathBedInteractable*            deathBed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACamperPlayer*                    camperPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeathBedInteractable::Multicast_RelocateToOtherDeathBed(class ADeathBedInteractable* deathBed, class ACamperPlayer* camperPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "Multicast_RelocateToOtherDeathBed");

	Params::DeathBedInteractable_Multicast_RelocateToOtherDeathBed Parms{};

	Parms.deathBed = deathBed;
	Parms.camperPlayer = camperPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.OnDeathBedDeathEnd
// (Final, Native, Public, BlueprintCallable)

void ADeathBedInteractable::OnDeathBedDeathEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "OnDeathBedDeathEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.OnRelocateStart_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ADeathBedInteractable::OnRelocateStart_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "OnRelocateStart_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.OnRescueCancelled
// (Event, Protected, BlueprintEvent)

void ADeathBedInteractable::OnRescueCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "OnRescueCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.OnSkillCheckFailed
// (Final, Native, Private)

void ADeathBedInteractable::OnSkillCheckFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "OnSkillCheckFailed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.OnSkillCheckFailed_Cosmetic
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ADeathBedInteractable::OnSkillCheckFailed_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "OnSkillCheckFailed_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.PlayerOverlapZoneBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ADeathBedInteractable::PlayerOverlapZoneBeginOverlap(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "PlayerOverlapZoneBeginOverlap");

	Params::DeathBedInteractable_PlayerOverlapZoneBeginOverlap Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.PlayerOverlapZoneEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeathBedInteractable::PlayerOverlapZoneEndOverlap(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "PlayerOverlapZoneEndOverlap");

	Params::DeathBedInteractable_PlayerOverlapZoneEndOverlap Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.SetInDeathBedCamper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    camperPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeathBedInteractable::SetInDeathBedCamper(class ACamperPlayer* camperPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "SetInDeathBedCamper");

	Params::DeathBedInteractable_SetInDeathBedCamper Parms{};

	Parms.camperPlayer = camperPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.StartPlayerAbsorbedByGround
// (Event, Public, BlueprintEvent)

void ADeathBedInteractable::StartPlayerAbsorbedByGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "StartPlayerAbsorbedByGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.DeathBedInteractable.TeleportCamperToDeathBed
// (Final, Native, Private, BlueprintCallable)

void ADeathBedInteractable::TeleportCamperToDeathBed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "TeleportCamperToDeathBed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.DeathBedInteractable.CanRescueSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADeathBedInteractable::CanRescueSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "CanRescueSurvivor");

	Params::DeathBedInteractable_CanRescueSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.DeathBedInteractable.GetInDeathBedCamper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACamperPlayer* ADeathBedInteractable::GetInDeathBedCamper() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "GetInDeathBedCamper");

	Params::DeathBedInteractable_GetInDeathBedCamper Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.DeathBedInteractable.GetMontagePlayer
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMontagePlayer*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMontagePlayer* ADeathBedInteractable::GetMontagePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "GetMontagePlayer");

	Params::DeathBedInteractable_GetMontagePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.DeathBedInteractable.GetRescuerSnapPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ADeathBedInteractable::GetRescuerSnapPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedInteractable", "GetRescuerSnapPosition");

	Params::DeathBedInteractable_GetRescuerSnapPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.DeathBedRescueInteraction.GetRescuerSnapPosition
// (Final, Native, Private, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UDeathBedRescueInteraction::GetRescuerSnapPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathBedRescueInteraction", "GetRescuerSnapPosition");

	Params::DeathBedRescueInteraction_GetRescuerSnapPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.Deathbound.MakeSurvivorScream
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class ACamperPlayer*              survivor                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeathbound::MakeSurvivorScream(const class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Deathbound", "MakeSurvivorScream");

	Params::Deathbound_MakeSurvivorScream Parms{};

	Parms.survivor = survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.Deathbound.OnRep_SurvivorsToReveal
// (Final, Native, Private)

void UDeathbound::OnRep_SurvivorsToReveal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Deathbound", "OnRep_SurvivorsToReveal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.Deathbound.GetRevealLocationDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDeathbound::GetRevealLocationDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Deathbound", "GetRevealLocationDuration");

	Params::Deathbound_GetRevealLocationDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.ExecutionerTormentAttack.Multicast_TormentHitTarget
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hitCosmeticOnly                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExecutionerTormentAttack::Multicast_TormentHitTarget(class ADBDPlayer* target, bool hitCosmeticOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExecutionerTormentAttack", "Multicast_TormentHitTarget");

	Params::ExecutionerTormentAttack_Multicast_TormentHitTarget Parms{};

	Parms.target = target;
	Parms.hitCosmeticOnly = hitCosmeticOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.ExecutionerTormentAttack.Server_TormentTryHitTargetNotInCoolDown
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ADBDPlayer*                       target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExecutionerTormentAttack::Server_TormentTryHitTargetNotInCoolDown(class ADBDPlayer* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExecutionerTormentAttack", "Server_TormentTryHitTargetNotInCoolDown");

	Params::ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.MobileTormentTrailRenderer.Multicast_AddInstance
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ABaseTormentTrailPoint*           trailPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isAttackTrailPoint                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobileTormentTrailRenderer::Multicast_AddInstance(class ABaseTormentTrailPoint* trailPoint, bool isAttackTrailPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileTormentTrailRenderer", "Multicast_AddInstance");

	Params::MobileTormentTrailRenderer_Multicast_AddInstance Parms{};

	Parms.trailPoint = trailPoint;
	Parms.isAttackTrailPoint = isAttackTrailPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.MobileTormentTrailRenderer.Multicast_RemoveInstance
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ABaseTormentTrailPoint*           trailPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMobileTormentTrailRenderer::Multicast_RemoveInstance(class ABaseTormentTrailPoint* trailPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileTormentTrailRenderer", "Multicast_RemoveInstance");

	Params::MobileTormentTrailRenderer_Multicast_RemoveInstance Parms{};

	Parms.trailPoint = trailPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.RepressedAlliance.OnRep_BlockedGenerator
// (Final, Native, Private)
// Parameters:
// class AGenerator*                       oldGenerator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URepressedAlliance::OnRep_BlockedGenerator(class AGenerator* oldGenerator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RepressedAlliance", "OnRep_BlockedGenerator");

	Params::RepressedAlliance_OnRep_BlockedGenerator Parms{};

	Parms.oldGenerator = oldGenerator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.RepressedAlliance.OnRep_CurrentRepairInteractionWithAbility
// (Final, Native, Private)
// Parameters:
// class UInteractionDefinition*           oldRepairInteraction                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URepressedAlliance::OnRep_CurrentRepairInteractionWithAbility(class UInteractionDefinition* oldRepairInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RepressedAlliance", "OnRep_CurrentRepairInteractionWithAbility");

	Params::RepressedAlliance_OnRep_CurrentRepairInteractionWithAbility Parms{};

	Parms.oldRepairInteraction = oldRepairInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.RepressedAlliance.Server_OnActionInputPressed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AGenerator*                       generator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URepressedAlliance::Server_OnActionInputPressed(class AGenerator* generator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RepressedAlliance", "Server_OnActionInputPressed");

	Params::RepressedAlliance_Server_OnActionInputPressed Parms{};

	Parms.generator = generator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.SendToDeathBedInteraction.FX_InteractionCancel
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USendToDeathBedInteraction::FX_InteractionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendToDeathBedInteraction", "FX_InteractionCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.SendToDeathBedInteraction.FX_InteractionStart
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USendToDeathBedInteraction::FX_InteractionStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendToDeathBedInteraction", "FX_InteractionStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.SendToDeathBedInteraction.Multicast_SendCamperToDeathBed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADeathBedInteractable*            deathBed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USendToDeathBedInteraction::Multicast_SendCamperToDeathBed(class ADeathBedInteractable* deathBed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendToDeathBedInteraction", "Multicast_SendCamperToDeathBed");

	Params::SendToDeathBedInteraction_Multicast_SendCamperToDeathBed Parms{};

	Parms.deathBed = deathBed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.SendToDeathBedInteraction.GetOwningSurvivor
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ACamperPlayer*              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class ACamperPlayer* USendToDeathBedInteraction::GetOwningSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendToDeathBedInteraction", "GetOwningSurvivor");

	Params::SendToDeathBedInteraction_GetOwningSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.SoulGuard.Authority_OnSurvivorHealed
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FCamperHealResult&         healResult                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USoulGuard::Authority_OnSurvivorHealed(const struct FCamperHealResult& healResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoulGuard", "Authority_OnSurvivorHealed");

	Params::SoulGuard_Authority_OnSurvivorHealed Parms{};

	Parms.healResult = std::move(healResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TheExecutionerAnimInstance.NoInputFeedbackCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UTheExecutionerAnimInstance::NoInputFeedbackCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerAnimInstance", "NoInputFeedbackCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.TheExecutionerCheatComponent.DBD_DeathBedPlayStruggleHitReaction
// (Final, Exec, Native, Public)

void UTheExecutionerCheatComponent::DBD_DeathBedPlayStruggleHitReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerCheatComponent", "DBD_DeathBedPlayStruggleHitReaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TheExecutionerCheatComponent.DBD_DisplayAllDeathBed
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTheExecutionerCheatComponent::DBD_DisplayAllDeathBed(bool value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerCheatComponent", "DBD_DisplayAllDeathBed");

	Params::TheExecutionerCheatComponent_DBD_DisplayAllDeathBed Parms{};

	Parms.value = value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TheExecutionerCheatComponent.DBD_LocalKillSurvivorInDeathBed
// (Final, Exec, Native, Public)

void UTheExecutionerCheatComponent::DBD_LocalKillSurvivorInDeathBed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerCheatComponent", "DBD_LocalKillSurvivorInDeathBed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TheExecutionerCheatComponent.DBD_SetAgonyOnLocallyControlledPlayer
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTheExecutionerCheatComponent::DBD_SetAgonyOnLocallyControlledPlayer(const bool value, const class FString& localPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerCheatComponent", "DBD_SetAgonyOnLocallyControlledPlayer");

	Params::TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer Parms{};

	Parms.value = value;
	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TheExecutionerCheatComponent.DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTheExecutionerCheatComponent::DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer(const bool value, const class FString& localPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TheExecutionerCheatComponent", "DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer");

	Params::TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer Parms{};

	Parms.value = value;
	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TrailControllerBase.ActivateCosmetic
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrailControllerBase::ActivateCosmetic(const bool value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailControllerBase", "ActivateCosmetic");

	Params::TrailControllerBase_ActivateCosmetic Parms{};

	Parms.value = value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.TrailControllerBase.OnAcquireChanged
// (Native, Protected)
// Parameters:
// const bool                              acquired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrailControllerBase::OnAcquireChanged(const bool acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailControllerBase", "OnAcquireChanged");

	Params::TrailControllerBase_OnAcquireChanged Parms{};

	Parms.acquired = acquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TrailControllerBase.OnTrailPointDeath
// (Native, Protected)
// Parameters:
// class ABaseTormentTrailPoint*           baseTrailPoint                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATrailControllerBase::OnTrailPointDeath(class ABaseTormentTrailPoint* baseTrailPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailControllerBase", "OnTrailPointDeath");

	Params::TrailControllerBase_OnTrailPointDeath Parms{};

	Parms.baseTrailPoint = baseTrailPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TrailControllerBase.RemoveTormentTrailController
// (Final, Native, Protected, BlueprintCallable)

void ATrailControllerBase::RemoveTormentTrailController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailControllerBase", "RemoveTormentTrailController");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailController.DisplayAttackTrailSpawnSign
// (Native, Event, Protected, BlueprintEvent)

void ATormentAttackTrailController::DisplayAttackTrailSpawnSign()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "DisplayAttackTrailSpawnSign");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailController.Multicast_StartAttackTrail
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const float                             serverTimeSpawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize10&     location                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATormentAttackTrailController::Multicast_StartAttackTrail(const float serverTimeSpawn, const struct FVector_NetQuantize10& location, const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "Multicast_StartAttackTrail");

	Params::TormentAttackTrailController_Multicast_StartAttackTrail Parms{};

	Parms.serverTimeSpawn = serverTimeSpawn;
	Parms.location = std::move(location);
	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailController.OnAttackTrailStartCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ATormentAttackTrailController::OnAttackTrailStartCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "OnAttackTrailStartCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.TormentAttackTrailController.OnIntervalBetweenPointsTimerDone
// (Final, Native, Private)

void ATormentAttackTrailController::OnIntervalBetweenPointsTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "OnIntervalBetweenPointsTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailController.OnStartTrailTimerDone
// (Final, Native, Private)

void ATormentAttackTrailController::OnStartTrailTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "OnStartTrailTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailController.OnTrailPointRemovedCosmetic
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   index                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentAttackTrailController::OnTrailPointRemovedCosmetic(int32 index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailController", "OnTrailPointRemovedCosmetic");

	Params::TormentAttackTrailController_OnTrailPointRemovedCosmetic Parms{};

	Parms.index = index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentAttackTrailPoint.DisplayTrailSplineMesh
// (Event, Public, BlueprintEvent)
// Parameters:
// const class USplineComponent*           splinemesh                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             indexInTrail                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentAttackTrailPoint::DisplayTrailSplineMesh(const class USplineComponent* splinemesh, const int32 indexInTrail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentAttackTrailPoint", "DisplayTrailSplineMesh");

	Params::TormentAttackTrailPoint_DisplayTrailSplineMesh Parms{};

	Parms.splinemesh = splinemesh;
	Parms.indexInTrail = indexInTrail;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.TormentMode.OnTormentModeChargeEmpty
// (Final, Native, Private)

void ATormentMode::OnTormentModeChargeEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentMode", "OnTormentModeChargeEmpty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentMode.OnTormentModeStart_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ATormentMode::OnTormentModeStart_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentMode", "OnTormentModeStart_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.TormentMode.OnTormentModeStop_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ATormentMode::OnTormentModeStop_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentMode", "OnTormentModeStop_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheExecutioner.TormentMode.Server_RequestMoreActorInAttackPool
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void ATormentMode::Server_RequestMoreActorInAttackPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentMode", "Server_RequestMoreActorInAttackPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentMode.IsInTormentMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATormentMode::IsInTormentMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentMode", "IsInTormentMode");

	Params::TormentMode_IsInTormentMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheExecutioner.Tormentor.GetTormentTrailAttackSpawnPoint
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ITormentor::GetTormentTrailAttackSpawnPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Tormentor", "GetTormentTrailAttackSpawnPoint");

	Params::Tormentor_GetTormentTrailAttackSpawnPoint Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheExecutioner.Tormentor.GetTormentTrailSpawnPoint
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ITormentor::GetTormentTrailSpawnPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Tormentor", "GetTormentTrailSpawnPoint");

	Params::Tormentor_GetTormentTrailSpawnPoint Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheExecutioner.TormentTrailController.Server_SpawnTormentTrailPoint
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ATormentTrailPoint*               trailPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize10&     location                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATormentTrailController::Server_SpawnTormentTrailPoint(class ATormentTrailPoint* trailPoint, const struct FVector_NetQuantize10& location, const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailController", "Server_SpawnTormentTrailPoint");

	Params::TormentTrailController_Server_SpawnTormentTrailPoint Parms{};

	Parms.trailPoint = trailPoint;
	Parms.location = std::move(location);
	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailPoint.ActivateCosmetic
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentTrailPoint::ActivateCosmetic(const bool value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "ActivateCosmetic");

	Params::TormentTrailPoint_ActivateCosmetic Parms{};

	Parms.value = value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.TormentTrailPoint.AddTrailCosmetic
// (Event, Public, BlueprintEvent)
// Parameters:
// const class USplineComponent*           splineComponent                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             indexInTrail                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentTrailPoint::AddTrailCosmetic(const class USplineComponent* splineComponent, const uint8 indexInTrail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "AddTrailCosmetic");

	Params::TormentTrailPoint_AddTrailCosmetic Parms{};

	Parms.splineComponent = splineComponent;
	Parms.indexInTrail = indexInTrail;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.TormentTrailPoint.Multicast_TriggerTrailPointDisappear
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void ATormentTrailPoint::Multicast_TriggerTrailPointDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "Multicast_TriggerTrailPointDisappear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailPoint.OnAcquireChanged
// (Final, Native, Private)
// Parameters:
// const bool                              acquired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentTrailPoint::OnAcquireChanged(const bool acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "OnAcquireChanged");

	Params::TormentTrailPoint_OnAcquireChanged Parms{};

	Parms.acquired = acquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailPoint.RefreshTrailPointCosmetic
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// ETrailPointRefreshReason                trailPointRefreshReason                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentTrailPoint::RefreshTrailPointCosmetic(ETrailPointRefreshReason trailPointRefreshReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "RefreshTrailPointCosmetic");

	Params::TormentTrailPoint_RefreshTrailPointCosmetic Parms{};

	Parms.trailPointRefreshReason = trailPointRefreshReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheExecutioner.TormentTrailPoint.Server_RemoveTrailPoint
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void ATormentTrailPoint::Server_RemoveTrailPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "Server_RemoveTrailPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailPoint.GetTrailLocationAndTangeant
// (Final, Native, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             indexInTrail                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USplineComponent*           splineComponent                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outStartLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outStartTangent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outEndLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outEndTangent                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATormentTrailPoint::GetTrailLocationAndTangeant(const int32 indexInTrail, const class USplineComponent* splineComponent, struct FVector* outStartLocation, struct FVector* outStartTangent, struct FVector* outEndLocation, struct FVector* outEndTangent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPoint", "GetTrailLocationAndTangeant");

	Params::TormentTrailPoint_GetTrailLocationAndTangeant Parms{};

	Parms.indexInTrail = indexInTrail;
	Parms.splineComponent = splineComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outStartLocation != nullptr)
		*outStartLocation = std::move(Parms.outStartLocation);

	if (outStartTangent != nullptr)
		*outStartTangent = std::move(Parms.outStartTangent);

	if (outEndLocation != nullptr)
		*outEndLocation = std::move(Parms.outEndLocation);

	if (outEndTangent != nullptr)
		*outEndTangent = std::move(Parms.outEndTangent);
}


// Function TheExecutioner.TormentTrailPointCollectionComponent.OnTrailAcquireChanged
// (Final, Native, Private)
// Parameters:
// class ATormentTrailPoint*               trailPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTormentTrailPointCollectionComponent::OnTrailAcquireChanged(class ATormentTrailPoint* trailPoint, bool value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailPointCollectionComponent", "OnTrailAcquireChanged");

	Params::TormentTrailPointCollectionComponent_OnTrailAcquireChanged Parms{};

	Parms.trailPoint = trailPoint;
	Parms.value = value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailSpawnerComponent.OnInRangeChanged
// (Final, Native, Private)
// Parameters:
// const bool                              inRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTormentTrailSpawnerComponent::OnInRangeChanged(const bool inRange, const class AActor* actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailSpawnerComponent", "OnInRangeChanged");

	Params::TormentTrailSpawnerComponent_OnInRangeChanged Parms{};

	Parms.inRange = inRange;
	Parms.actor = actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailSpawnerComponent.OnLevelReadyToPlay
// (Final, Native, Private)

void UTormentTrailSpawnerComponent::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailSpawnerComponent", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailSpawnerComponent.Server_RequestMoreActorInPool
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// const ETrailType                        trailType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTormentTrailSpawnerComponent::Server_RequestMoreActorInPool(const ETrailType trailType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailSpawnerComponent", "Server_RequestMoreActorInPool");

	Params::TormentTrailSpawnerComponent_Server_RequestMoreActorInPool Parms{};

	Parms.trailType = trailType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailSpawnerComponent.Server_StopTrailController
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class ATormentTrailController*          trailController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTormentTrailSpawnerComponent::Server_StopTrailController(class ATormentTrailController* trailController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailSpawnerComponent", "Server_StopTrailController");

	Params::TormentTrailSpawnerComponent_Server_StopTrailController Parms{};

	Parms.trailController = trailController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TormentTrailSpawnerComponent.Sever_SpawnTrailController
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ATormentTrailController*          trailController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize10&     location                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UTormentTrailSpawnerComponent::Sever_SpawnTrailController(class ATormentTrailController* trailController, const struct FVector_NetQuantize10& location, const struct FRotator& rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TormentTrailSpawnerComponent", "Sever_SpawnTrailController");

	Params::TormentTrailSpawnerComponent_Sever_SpawnTrailController Parms{};

	Parms.trailController = trailController;
	Parms.location = std::move(location);
	Parms.rotation = std::move(rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheExecutioner.TrailOfTorment.OnRep_HighlightGenerator
// (Final, Native, Private)
// Parameters:
// class AGenerator*                       _oldHighlightedGenerator                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrailOfTorment::OnRep_HighlightGenerator(class AGenerator* _oldHighlightedGenerator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailOfTorment", "OnRep_HighlightGenerator");

	Params::TrailOfTorment_OnRep_HighlightGenerator Parms{};

	Parms._oldHighlightedGenerator = _oldHighlightedGenerator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

