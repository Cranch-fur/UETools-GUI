#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelStreamingManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LevelStreamingManager.BP_LevelStreamingManager_C.ExecuteUbergraph_BP_LevelStreamingManager
// 0x0098 (0x0098 - 0x0000)
struct BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Level_Name;                           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Absolute;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Options;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Level_Name_3;                         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Make_Visible_After_Load;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Should_Block_on_Load;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Level_Name_2;                         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Should_Block_on_Unload;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Level_Name_1;                         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_Rotation;                             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_Event_Optional_Level_Name_Override;         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadLevelInstance_bOutSuccess;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 CallFunc_LoadLevelInstance_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager) == 0x000008, "Wrong alignment on BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager");
static_assert(sizeof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager) == 0x000098, "Wrong size on BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, EntryPoint) == 0x000000, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Level_Name) == 0x000004, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Level_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Absolute) == 0x000010, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Absolute' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Options) == 0x000018, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Level_Name_3) == 0x000028, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Level_Name_3' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Make_Visible_After_Load) == 0x000034, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Make_Visible_After_Load' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Should_Block_on_Load) == 0x000035, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Should_Block_on_Load' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Level_Name_2) == 0x000038, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Level_Name_2' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Should_Block_on_Unload) == 0x000044, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Should_Block_on_Unload' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Level_Name_1) == 0x000048, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Level_Name_1' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Location) == 0x000058, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Rotation) == 0x000064, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Rotation' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, K2Node_Event_Optional_Level_Name_Override) == 0x000070, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::K2Node_Event_Optional_Level_Name_Override' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, CallFunc_LoadLevelInstance_bOutSuccess) == 0x000080, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::CallFunc_LoadLevelInstance_bOutSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, CallFunc_LoadLevelInstance_ReturnValue) == 0x000088, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::CallFunc_LoadLevelInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager, CallFunc_IsEmpty_ReturnValue) == 0x000090, "Member 'BP_LevelStreamingManager_C_ExecuteUbergraph_BP_LevelStreamingManager::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BP_LevelStreamingManager.BP_LevelStreamingManager_C.Open Level
// 0x0020 (0x0020 - 0x0000)
struct BP_LevelStreamingManager_C_Open_Level final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Absolute;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Options;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelStreamingManager_C_Open_Level) == 0x000008, "Wrong alignment on BP_LevelStreamingManager_C_Open_Level");
static_assert(sizeof(BP_LevelStreamingManager_C_Open_Level) == 0x000020, "Wrong size on BP_LevelStreamingManager_C_Open_Level");
static_assert(offsetof(BP_LevelStreamingManager_C_Open_Level, Level_Name) == 0x000000, "Member 'BP_LevelStreamingManager_C_Open_Level::Level_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Open_Level, Absolute) == 0x00000C, "Member 'BP_LevelStreamingManager_C_Open_Level::Absolute' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Open_Level, Options) == 0x000010, "Member 'BP_LevelStreamingManager_C_Open_Level::Options' has a wrong offset!");

// Function BP_LevelStreamingManager.BP_LevelStreamingManager_C.Load Level Instance
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelStreamingManager_C_Load_Level_Instance final
{
public:
	class FString                                 Level_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 Optional_Level_Name_Override;                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelStreamingManager_C_Load_Level_Instance) == 0x000008, "Wrong alignment on BP_LevelStreamingManager_C_Load_Level_Instance");
static_assert(sizeof(BP_LevelStreamingManager_C_Load_Level_Instance) == 0x000038, "Wrong size on BP_LevelStreamingManager_C_Load_Level_Instance");
static_assert(offsetof(BP_LevelStreamingManager_C_Load_Level_Instance, Level_Name) == 0x000000, "Member 'BP_LevelStreamingManager_C_Load_Level_Instance::Level_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Load_Level_Instance, Location) == 0x000010, "Member 'BP_LevelStreamingManager_C_Load_Level_Instance::Location' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Load_Level_Instance, Rotation) == 0x00001C, "Member 'BP_LevelStreamingManager_C_Load_Level_Instance::Rotation' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Load_Level_Instance, Optional_Level_Name_Override) == 0x000028, "Member 'BP_LevelStreamingManager_C_Load_Level_Instance::Optional_Level_Name_Override' has a wrong offset!");

// Function BP_LevelStreamingManager.BP_LevelStreamingManager_C.Stream Level Out
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelStreamingManager_C_Stream_Level_Out final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Block_on_Unload;                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelStreamingManager_C_Stream_Level_Out) == 0x000004, "Wrong alignment on BP_LevelStreamingManager_C_Stream_Level_Out");
static_assert(sizeof(BP_LevelStreamingManager_C_Stream_Level_Out) == 0x000010, "Wrong size on BP_LevelStreamingManager_C_Stream_Level_Out");
static_assert(offsetof(BP_LevelStreamingManager_C_Stream_Level_Out, Level_Name) == 0x000000, "Member 'BP_LevelStreamingManager_C_Stream_Level_Out::Level_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Stream_Level_Out, Should_Block_on_Unload) == 0x00000C, "Member 'BP_LevelStreamingManager_C_Stream_Level_Out::Should_Block_on_Unload' has a wrong offset!");

// Function BP_LevelStreamingManager.BP_LevelStreamingManager_C.Stream Level In
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelStreamingManager_C_Stream_Level_In final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Make_Visible_After_Load;                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Should_Block_on_Load;                              // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelStreamingManager_C_Stream_Level_In) == 0x000004, "Wrong alignment on BP_LevelStreamingManager_C_Stream_Level_In");
static_assert(sizeof(BP_LevelStreamingManager_C_Stream_Level_In) == 0x000010, "Wrong size on BP_LevelStreamingManager_C_Stream_Level_In");
static_assert(offsetof(BP_LevelStreamingManager_C_Stream_Level_In, Level_Name) == 0x000000, "Member 'BP_LevelStreamingManager_C_Stream_Level_In::Level_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Stream_Level_In, Make_Visible_After_Load) == 0x00000C, "Member 'BP_LevelStreamingManager_C_Stream_Level_In::Make_Visible_After_Load' has a wrong offset!");
static_assert(offsetof(BP_LevelStreamingManager_C_Stream_Level_In, Should_Block_on_Load) == 0x00000D, "Member 'BP_LevelStreamingManager_C_Stream_Level_In::Should_Block_on_Load' has a wrong offset!");

}

