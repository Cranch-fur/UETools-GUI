#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThePlague

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "Engine_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// Class ThePlague.CleanseSickness
// 0x0010 (0x0750 - 0x0740)
class UCleanseSickness final : public UChargeableInteractionDefinition
{
public:
	class FName                                   _statusEffectID;                                   // 0x0740(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCleanseComplete(class ADBDPlayer* player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CleanseSickness">();
	}
	static class UCleanseSickness* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCleanseSickness>();
	}
};
static_assert(alignof(UCleanseSickness) == 0x000010, "Wrong alignment on UCleanseSickness");
static_assert(sizeof(UCleanseSickness) == 0x000750, "Wrong size on UCleanseSickness");
static_assert(offsetof(UCleanseSickness, _statusEffectID) == 0x000740, "Member 'UCleanseSickness::_statusEffectID' has a wrong offset!");

// Class ThePlague.PlagueSurvivorAnalyticsComponent
// 0x00A8 (0x0160 - 0x00B8)
class UPlagueSurvivorAnalyticsComponent final : public UActorComponent
{
public:
	uint32                                        _replicatedRegularVomitHits;                       // 0x00B8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC[0xA4];                                      // 0x00BC(0x00A4)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlagueSurvivorAnalyticsComponent">();
	}
	static class UPlagueSurvivorAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlagueSurvivorAnalyticsComponent>();
	}
};
static_assert(alignof(UPlagueSurvivorAnalyticsComponent) == 0x000008, "Wrong alignment on UPlagueSurvivorAnalyticsComponent");
static_assert(sizeof(UPlagueSurvivorAnalyticsComponent) == 0x000160, "Wrong size on UPlagueSurvivorAnalyticsComponent");
static_assert(offsetof(UPlagueSurvivorAnalyticsComponent, _replicatedRegularVomitHits) == 0x0000B8, "Member 'UPlagueSurvivorAnalyticsComponent::_replicatedRegularVomitHits' has a wrong offset!");

// Class ThePlague.SicknessSurvivorSubAnimInstance
// 0x0070 (0x05C0 - 0x0550)
class USicknessSurvivorSubAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_548[0x8];                                      // 0x0548(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _vomitingEnteredStatEvent;                         // 0x0550(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hitByVomitTime;                                   // 0x0560(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isSick;                                           // 0x0564(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isVomiting;                                       // 0x0565(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _hasRecentlyBeenHitByVomit;                        // 0x0566(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isOpeningExitGate;                                // 0x0567(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHooked;                                         // 0x0568(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrawling;                                       // 0x0569(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isDead;                                           // 0x056A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isFrightScreaming;                                // 0x056B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECamperGuidedAction                           _guidedAction;                                     // 0x056C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInteractionAnimation                         _interactionType;                                  // 0x056D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInsideCloset;                                   // 0x056E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInteracting;                                    // 0x056F(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrouched;                                       // 0x0570(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHoldingAimItem;                                 // 0x0571(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isIdle;                                           // 0x0572(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHoldingHandleItem;                              // 0x0573(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHoldingFlashbang;                               // 0x0574(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHoldingFirecracker;                             // 0x0575(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHoldingSmallItem;                               // 0x0576(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_577[0x49];                                     // 0x0577(0x0049)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SicknessSurvivorSubAnimInstance">();
	}
	static class USicknessSurvivorSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USicknessSurvivorSubAnimInstance>();
	}
};
static_assert(alignof(USicknessSurvivorSubAnimInstance) == 0x000010, "Wrong alignment on USicknessSurvivorSubAnimInstance");
static_assert(sizeof(USicknessSurvivorSubAnimInstance) == 0x0005C0, "Wrong size on USicknessSurvivorSubAnimInstance");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _vomitingEnteredStatEvent) == 0x000550, "Member 'USicknessSurvivorSubAnimInstance::_vomitingEnteredStatEvent' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _hitByVomitTime) == 0x000560, "Member 'USicknessSurvivorSubAnimInstance::_hitByVomitTime' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isSick) == 0x000564, "Member 'USicknessSurvivorSubAnimInstance::_isSick' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isVomiting) == 0x000565, "Member 'USicknessSurvivorSubAnimInstance::_isVomiting' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _hasRecentlyBeenHitByVomit) == 0x000566, "Member 'USicknessSurvivorSubAnimInstance::_hasRecentlyBeenHitByVomit' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isOpeningExitGate) == 0x000567, "Member 'USicknessSurvivorSubAnimInstance::_isOpeningExitGate' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHooked) == 0x000568, "Member 'USicknessSurvivorSubAnimInstance::_isHooked' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isCrawling) == 0x000569, "Member 'USicknessSurvivorSubAnimInstance::_isCrawling' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isDead) == 0x00056A, "Member 'USicknessSurvivorSubAnimInstance::_isDead' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isFrightScreaming) == 0x00056B, "Member 'USicknessSurvivorSubAnimInstance::_isFrightScreaming' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _guidedAction) == 0x00056C, "Member 'USicknessSurvivorSubAnimInstance::_guidedAction' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _interactionType) == 0x00056D, "Member 'USicknessSurvivorSubAnimInstance::_interactionType' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isInsideCloset) == 0x00056E, "Member 'USicknessSurvivorSubAnimInstance::_isInsideCloset' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isInteracting) == 0x00056F, "Member 'USicknessSurvivorSubAnimInstance::_isInteracting' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isCrouched) == 0x000570, "Member 'USicknessSurvivorSubAnimInstance::_isCrouched' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHoldingAimItem) == 0x000571, "Member 'USicknessSurvivorSubAnimInstance::_isHoldingAimItem' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isIdle) == 0x000572, "Member 'USicknessSurvivorSubAnimInstance::_isIdle' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHoldingHandleItem) == 0x000573, "Member 'USicknessSurvivorSubAnimInstance::_isHoldingHandleItem' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHoldingFlashbang) == 0x000574, "Member 'USicknessSurvivorSubAnimInstance::_isHoldingFlashbang' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHoldingFirecracker) == 0x000575, "Member 'USicknessSurvivorSubAnimInstance::_isHoldingFirecracker' has a wrong offset!");
static_assert(offsetof(USicknessSurvivorSubAnimInstance, _isHoldingSmallItem) == 0x000576, "Member 'USicknessSurvivorSubAnimInstance::_isHoldingSmallItem' has a wrong offset!");

}

