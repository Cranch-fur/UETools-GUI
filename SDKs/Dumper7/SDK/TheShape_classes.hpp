#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheShape

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDAttack_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "DataTableUtilities_structs.hpp"


namespace SDK
{

// Class TheShape.KillStandingInteractionDefinition
// 0x0010 (0x0630 - 0x0620)
class UKillStandingInteractionDefinition final : public UInteractionDefinition
{
public:
	uint8                                         Pad_618[0x4];                                      // 0x0618(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _slasherFacingTolerance;                           // 0x061C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_620[0x10];                                     // 0x0620(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KillStandingInteractionDefinition">();
	}
	static class UKillStandingInteractionDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKillStandingInteractionDefinition>();
	}
};
static_assert(alignof(UKillStandingInteractionDefinition) == 0x000010, "Wrong alignment on UKillStandingInteractionDefinition");
static_assert(sizeof(UKillStandingInteractionDefinition) == 0x000630, "Wrong size on UKillStandingInteractionDefinition");
static_assert(offsetof(UKillStandingInteractionDefinition, _slasherFacingTolerance) == 0x00061C, "Member 'UKillStandingInteractionDefinition::_slasherFacingTolerance' has a wrong offset!");

// Class TheShape.ObjectOfObsession
// 0x0070 (0x0438 - 0x03C8)
class UObjectOfObsession final : public UPerk
{
public:
	float                                         _revealTimeIntervals[0x3];                         // 0x03C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _revealTimeDuration[0x3];                          // 0x03D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _actionSpeedBonus[0x3];                            // 0x03E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x34];                                     // 0x03EC(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _increaseObsessionChanceEffect;                    // 0x0420(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _revealToKillerStatusEffect;                       // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _objectOfObsessionActionSpeedEffect;               // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState currentDamageState);
	void Authority_OnPlayerImmobilizeStateChanged(const ECamperImmobilizeState oldImmobilizeState, const ECamperImmobilizeState newImmobilizeState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectOfObsession">();
	}
	static class UObjectOfObsession* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectOfObsession>();
	}
};
static_assert(alignof(UObjectOfObsession) == 0x000008, "Wrong alignment on UObjectOfObsession");
static_assert(sizeof(UObjectOfObsession) == 0x000438, "Wrong size on UObjectOfObsession");
static_assert(offsetof(UObjectOfObsession, _revealTimeIntervals) == 0x0003C8, "Member 'UObjectOfObsession::_revealTimeIntervals' has a wrong offset!");
static_assert(offsetof(UObjectOfObsession, _revealTimeDuration) == 0x0003D4, "Member 'UObjectOfObsession::_revealTimeDuration' has a wrong offset!");
static_assert(offsetof(UObjectOfObsession, _actionSpeedBonus) == 0x0003E0, "Member 'UObjectOfObsession::_actionSpeedBonus' has a wrong offset!");
static_assert(offsetof(UObjectOfObsession, _increaseObsessionChanceEffect) == 0x000420, "Member 'UObjectOfObsession::_increaseObsessionChanceEffect' has a wrong offset!");
static_assert(offsetof(UObjectOfObsession, _revealToKillerStatusEffect) == 0x000428, "Member 'UObjectOfObsession::_revealToKillerStatusEffect' has a wrong offset!");
static_assert(offsetof(UObjectOfObsession, _objectOfObsessionActionSpeedEffect) == 0x000430, "Member 'UObjectOfObsession::_objectOfObsessionActionSpeedEffect' has a wrong offset!");

// Class TheShape.ShapeAnimInstance
// 0x0010 (0x0610 - 0x0600)
class UShapeAnimInstance final : public UKillerAnimInstance
{
public:
	bool                                          _isTier3Active;                                    // 0x0600(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEvilWithinComponent*                   _evilWithinComponent;                              // 0x0608(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShapeAnimInstance">();
	}
	static class UShapeAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShapeAnimInstance>();
	}
};
static_assert(alignof(UShapeAnimInstance) == 0x000010, "Wrong alignment on UShapeAnimInstance");
static_assert(sizeof(UShapeAnimInstance) == 0x000610, "Wrong size on UShapeAnimInstance");
static_assert(offsetof(UShapeAnimInstance, _isTier3Active) == 0x000600, "Member 'UShapeAnimInstance::_isTier3Active' has a wrong offset!");
static_assert(offsetof(UShapeAnimInstance, _evilWithinComponent) == 0x000608, "Member 'UShapeAnimInstance::_evilWithinComponent' has a wrong offset!");

// Class TheShape.ShapePounceAttackOpenSubstate
// 0x0010 (0x0140 - 0x0130)
class UShapePounceAttackOpenSubstate final : public UPounceAttackOpenSubstate
{
public:
	TArray<struct FDBDTunableRowHandle>           _tierDurations;                                    // 0x0130(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShapePounceAttackOpenSubstate">();
	}
	static class UShapePounceAttackOpenSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShapePounceAttackOpenSubstate>();
	}
};
static_assert(alignof(UShapePounceAttackOpenSubstate) == 0x000008, "Wrong alignment on UShapePounceAttackOpenSubstate");
static_assert(sizeof(UShapePounceAttackOpenSubstate) == 0x000140, "Wrong size on UShapePounceAttackOpenSubstate");
static_assert(offsetof(UShapePounceAttackOpenSubstate, _tierDurations) == 0x000130, "Member 'UShapePounceAttackOpenSubstate::_tierDurations' has a wrong offset!");

}

