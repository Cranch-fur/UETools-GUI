#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlatformUtilities

#include "Basic.hpp"

#include "DataTableUtilities_structs.hpp"


namespace SDK
{

// ScriptStruct PlatformUtilities.StadiaStorefrontDlcData
// 0x0320 (0x0328 - 0x0008)
struct FStadiaStorefrontDlcData final : public FDBDTableRowBase
{
public:
	class FString                                 DLC_Name;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 General_Dlc_ID;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StadiaID;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 copyright;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 en_name;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 en_description;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 fr_name;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 fr_description;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 de_name;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 de_description;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 it_name;                                           // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 it_description;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 es_name;                                           // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 es_description;                                    // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 cht_name;                                          // 0x00E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 cht_description;                                   // 0x00F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 chs_name;                                          // 0x0108(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 chs_description;                                   // 0x0118(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 th_name;                                           // 0x0128(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 th_description;                                    // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 rus_name;                                          // 0x0148(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 rus_description;                                   // 0x0158(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 brapor_name;                                       // 0x0168(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 brapor_description;                                // 0x0178(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 kor_name;                                          // 0x0188(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 kor_description;                                   // 0x0198(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 jpn_name;                                          // 0x01A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 jpn_description;                                   // 0x01B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 dan_name;                                          // 0x01C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 dan_description;                                   // 0x01D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ara_name;                                          // 0x01E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ara_description;                                   // 0x01F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 dut_name;                                          // 0x0208(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 dut_description;                                   // 0x0218(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 fin_name;                                          // 0x0228(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 fin_description;                                   // 0x0238(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 nor_name;                                          // 0x0248(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 nor_description;                                   // 0x0258(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 pol_name;                                          // 0x0268(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 pol_description;                                   // 0x0278(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 por_name;                                          // 0x0288(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 por_description;                                   // 0x0298(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 swe_name;                                          // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 swe_description;                                   // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 tr_name;                                           // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 tr_description;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 cfre_name;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 cfre_description;                                  // 0x02F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 mex__latam_spanish__name;                          // 0x0308(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 mex__latam_spanish__description;                   // 0x0318(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStadiaStorefrontDlcData) == 0x000008, "Wrong alignment on FStadiaStorefrontDlcData");
static_assert(sizeof(FStadiaStorefrontDlcData) == 0x000328, "Wrong size on FStadiaStorefrontDlcData");
static_assert(offsetof(FStadiaStorefrontDlcData, DLC_Name) == 0x000008, "Member 'FStadiaStorefrontDlcData::DLC_Name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, General_Dlc_ID) == 0x000018, "Member 'FStadiaStorefrontDlcData::General_Dlc_ID' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, StadiaID) == 0x000028, "Member 'FStadiaStorefrontDlcData::StadiaID' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, copyright) == 0x000038, "Member 'FStadiaStorefrontDlcData::copyright' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, en_name) == 0x000048, "Member 'FStadiaStorefrontDlcData::en_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, en_description) == 0x000058, "Member 'FStadiaStorefrontDlcData::en_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, fr_name) == 0x000068, "Member 'FStadiaStorefrontDlcData::fr_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, fr_description) == 0x000078, "Member 'FStadiaStorefrontDlcData::fr_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, de_name) == 0x000088, "Member 'FStadiaStorefrontDlcData::de_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, de_description) == 0x000098, "Member 'FStadiaStorefrontDlcData::de_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, it_name) == 0x0000A8, "Member 'FStadiaStorefrontDlcData::it_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, it_description) == 0x0000B8, "Member 'FStadiaStorefrontDlcData::it_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, es_name) == 0x0000C8, "Member 'FStadiaStorefrontDlcData::es_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, es_description) == 0x0000D8, "Member 'FStadiaStorefrontDlcData::es_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, cht_name) == 0x0000E8, "Member 'FStadiaStorefrontDlcData::cht_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, cht_description) == 0x0000F8, "Member 'FStadiaStorefrontDlcData::cht_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, chs_name) == 0x000108, "Member 'FStadiaStorefrontDlcData::chs_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, chs_description) == 0x000118, "Member 'FStadiaStorefrontDlcData::chs_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, th_name) == 0x000128, "Member 'FStadiaStorefrontDlcData::th_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, th_description) == 0x000138, "Member 'FStadiaStorefrontDlcData::th_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, rus_name) == 0x000148, "Member 'FStadiaStorefrontDlcData::rus_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, rus_description) == 0x000158, "Member 'FStadiaStorefrontDlcData::rus_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, brapor_name) == 0x000168, "Member 'FStadiaStorefrontDlcData::brapor_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, brapor_description) == 0x000178, "Member 'FStadiaStorefrontDlcData::brapor_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, kor_name) == 0x000188, "Member 'FStadiaStorefrontDlcData::kor_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, kor_description) == 0x000198, "Member 'FStadiaStorefrontDlcData::kor_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, jpn_name) == 0x0001A8, "Member 'FStadiaStorefrontDlcData::jpn_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, jpn_description) == 0x0001B8, "Member 'FStadiaStorefrontDlcData::jpn_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, dan_name) == 0x0001C8, "Member 'FStadiaStorefrontDlcData::dan_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, dan_description) == 0x0001D8, "Member 'FStadiaStorefrontDlcData::dan_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, ara_name) == 0x0001E8, "Member 'FStadiaStorefrontDlcData::ara_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, ara_description) == 0x0001F8, "Member 'FStadiaStorefrontDlcData::ara_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, dut_name) == 0x000208, "Member 'FStadiaStorefrontDlcData::dut_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, dut_description) == 0x000218, "Member 'FStadiaStorefrontDlcData::dut_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, fin_name) == 0x000228, "Member 'FStadiaStorefrontDlcData::fin_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, fin_description) == 0x000238, "Member 'FStadiaStorefrontDlcData::fin_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, nor_name) == 0x000248, "Member 'FStadiaStorefrontDlcData::nor_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, nor_description) == 0x000258, "Member 'FStadiaStorefrontDlcData::nor_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, pol_name) == 0x000268, "Member 'FStadiaStorefrontDlcData::pol_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, pol_description) == 0x000278, "Member 'FStadiaStorefrontDlcData::pol_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, por_name) == 0x000288, "Member 'FStadiaStorefrontDlcData::por_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, por_description) == 0x000298, "Member 'FStadiaStorefrontDlcData::por_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, swe_name) == 0x0002A8, "Member 'FStadiaStorefrontDlcData::swe_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, swe_description) == 0x0002B8, "Member 'FStadiaStorefrontDlcData::swe_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, tr_name) == 0x0002C8, "Member 'FStadiaStorefrontDlcData::tr_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, tr_description) == 0x0002D8, "Member 'FStadiaStorefrontDlcData::tr_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, cfre_name) == 0x0002E8, "Member 'FStadiaStorefrontDlcData::cfre_name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, cfre_description) == 0x0002F8, "Member 'FStadiaStorefrontDlcData::cfre_description' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, mex__latam_spanish__name) == 0x000308, "Member 'FStadiaStorefrontDlcData::mex__latam_spanish__name' has a wrong offset!");
static_assert(offsetof(FStadiaStorefrontDlcData, mex__latam_spanish__description) == 0x000318, "Member 'FStadiaStorefrontDlcData::mex__latam_spanish__description' has a wrong offset!");

}

