#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheLegion

#include "Basic.hpp"

#include "TheLegion_classes.hpp"
#include "TheLegion_parameters.hpp"


namespace SDK
{

// Function TheLegion.LegionSurvivorAnalyticsComponent.OnGameEventDispatched
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ULegionSurvivorAnalyticsComponent::OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegionSurvivorAnalyticsComponent", "OnGameEventDispatched");

	Params::LegionSurvivorAnalyticsComponent_OnGameEventDispatched Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.LegionSurvivorAnalyticsComponent.SetGameEventDispatcher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameEventDispatcher*             gameEventDispatcher                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULegionSurvivorAnalyticsComponent::SetGameEventDispatcher(class UGameEventDispatcher* gameEventDispatcher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegionSurvivorAnalyticsComponent", "SetGameEventDispatcher");

	Params::LegionSurvivorAnalyticsComponent_SetGameEventDispatcher Parms{};

	Parms.gameEventDispatcher = gameEventDispatcher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.EndFrenzy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFrenzyEndReason                        reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFrenzyComponent::EndFrenzy(EFrenzyEndReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "EndFrenzy");

	Params::FrenzyComponent_EndFrenzy Parms{};

	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.InitializeFrenzy
// (Final, Native, Private)

void UFrenzyComponent::InitializeFrenzy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "InitializeFrenzy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.OnFrenzyCooldownStarted
// (Final, Native, Public, BlueprintCallable)

void UFrenzyComponent::OnFrenzyCooldownStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "OnFrenzyCooldownStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.OnGameEventDispatched
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFrenzyComponent::OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "OnGameEventDispatched");

	Params::FrenzyComponent_OnGameEventDispatched Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.OnMoriStarted
// (Final, Native, Private)

void UFrenzyComponent::OnMoriStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "OnMoriStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.PauseFrenzyChargeDepletion
// (Final, Native, Public, BlueprintCallable)

void UFrenzyComponent::PauseFrenzyChargeDepletion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "PauseFrenzyChargeDepletion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.ResumeFrenzyChargeDepletion
// (Final, Native, Public, BlueprintCallable)

void UFrenzyComponent::ResumeFrenzyChargeDepletion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "ResumeFrenzyChargeDepletion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.SetObjectState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayTagContainerComponent*   objectState                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFrenzyComponent::SetObjectState(class UGameplayTagContainerComponent* objectState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "SetObjectState");

	Params::FrenzyComponent_SetObjectState Parms{};

	Parms.objectState = objectState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.SetStartingFrenzy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    startingFrenzy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFrenzyComponent::SetStartingFrenzy(bool startingFrenzy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "SetStartingFrenzy");

	Params::FrenzyComponent_SetStartingFrenzy Parms{};

	Parms.startingFrenzy = startingFrenzy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.StartFrenzy
// (Final, Native, Public, BlueprintCallable)

void UFrenzyComponent::StartFrenzy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "StartFrenzy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.FrenzyComponent.CanManuallyEndFrenzy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::CanManuallyEndFrenzy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "CanManuallyEndFrenzy");

	Params::FrenzyComponent_CanManuallyEndFrenzy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzyComponent.CanStartFrenzy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::CanStartFrenzy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "CanStartFrenzy");

	Params::FrenzyComponent_CanStartFrenzy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzyComponent.HasStartedInjuredBleedoutDuringThisFrenzy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::HasStartedInjuredBleedoutDuringThisFrenzy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "HasStartedInjuredBleedoutDuringThisFrenzy");

	Params::FrenzyComponent_HasStartedInjuredBleedoutDuringThisFrenzy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzyComponent.IsInFrenzy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::IsInFrenzy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "IsInFrenzy");

	Params::FrenzyComponent_IsInFrenzy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzyComponent.IsInFrenzyCooldown
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::IsInFrenzyCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "IsInFrenzyCooldown");

	Params::FrenzyComponent_IsInFrenzyCooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzyComponent.IsStartingFrenzy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFrenzyComponent::IsStartingFrenzy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzyComponent", "IsStartingFrenzy");

	Params::FrenzyComponent_IsStartingFrenzy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheLegion.FrenzySlasherVault.OnSlasherSet
// (Final, Native, Private)
// Parameters:
// class ASlasherPlayer*                   slasher                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFrenzySlasherVault::OnSlasherSet(class ASlasherPlayer* slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrenzySlasherVault", "OnSlasherSet");

	Params::FrenzySlasherVault_OnSlasherSet Parms{};

	Parms.slasher = slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.LegionCheatComponent.DBD_LegionFrenzyForever
// (Final, Exec, Native, Public)

void ULegionCheatComponent::DBD_LegionFrenzyForever()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegionCheatComponent", "DBD_LegionFrenzyForever");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.LegionKillerAnalyticsComponent.SetGameEventDispatcher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameEventDispatcher*             gameEventDispatcher                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULegionKillerAnalyticsComponent::SetGameEventDispatcher(class UGameEventDispatcher* gameEventDispatcher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegionKillerAnalyticsComponent", "SetGameEventDispatcher");

	Params::LegionKillerAnalyticsComponent_SetGameEventDispatcher Parms{};

	Parms.gameEventDispatcher = gameEventDispatcher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheLegion.ModifyFrenzyFOVEffect.Authority_OnFrenzyTierIncreased
// (Final, Native, Private)
// Parameters:
// int32                                   tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModifyFrenzyFOVEffect::Authority_OnFrenzyTierIncreased(int32 tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModifyFrenzyFOVEffect", "Authority_OnFrenzyTierIncreased");

	Params::ModifyFrenzyFOVEffect_Authority_OnFrenzyTierIncreased Parms{};

	Parms.tier = tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

