#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventUtilities

#include "Basic.hpp"

#include "SpecialEventUtilities_classes.hpp"
#include "SpecialEventUtilities_parameters.hpp"


namespace SDK
{

// Function SpecialEventUtilities.RespawnableInteractable.OnHidden
// (Event, Protected, BlueprintEvent)

void ARespawnableInteractable::OnHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialEventUtilities.RespawnableInteractable.OnRep_IsHidden
// (Final, Native, Private)

void ARespawnableInteractable::OnRep_IsHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnRep_IsHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnableInteractable.OnUnhidden
// (Event, Protected, BlueprintEvent)

void ARespawnableInteractable::OnUnhidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnUnhidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialEventUtilities.RespawnableInteractable.IsHidden
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARespawnableInteractable::IsHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "IsHidden");

	Params::RespawnableInteractable_IsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpecialEventUtilities.RespawningEventComponent.Authority_OnIsInteractingWithAnyRespawnableInteractableChanged
// (Native, Protected)
// Parameters:
// class ARespawnableInteractable*         respawnableInteractable                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInteracting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URespawningEventComponent::Authority_OnIsInteractingWithAnyRespawnableInteractableChanged(class ARespawnableInteractable* respawnableInteractable, bool isInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawningEventComponent", "Authority_OnIsInteractingWithAnyRespawnableInteractableChanged");

	Params::RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged Parms{};

	Parms.respawnableInteractable = respawnableInteractable;
	Parms.isInteracting = isInteracting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawningEventComponent.DBD_ForceRespawnSpecialEventObject
// (Final, Exec, Native, Private)

void URespawningEventComponent::DBD_ForceRespawnSpecialEventObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawningEventComponent", "DBD_ForceRespawnSpecialEventObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnInteractionEnded
// (Native, Public)
// Parameters:
// class ARespawnableInteractable*         respawnableInteractable                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionRespawnableTrigger::Authority_OnInteractionEnded(class ARespawnableInteractable* respawnableInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionRespawnableTrigger", "Authority_OnInteractionEnded");

	Params::InteractionRespawnableTrigger_Authority_OnInteractionEnded Parms{};

	Parms.respawnableInteractable = respawnableInteractable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnNewRespawnableSubscribed
// (Final, Native, Public)
// Parameters:
// class ARespawnableInteractable*         newRespawnableInteractable                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionRespawnableTrigger::Authority_OnNewRespawnableSubscribed(class ARespawnableInteractable* newRespawnableInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionRespawnableTrigger", "Authority_OnNewRespawnableSubscribed");

	Params::InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed Parms{};

	Parms.newRespawnableInteractable = newRespawnableInteractable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnablePositioner.Authority_OnIsInteractingChangedEvent
// (Final, Native, Private)
// Parameters:
// class ARespawnableInteractable*         respawnableInteractable                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isInteracting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URespawnablePositioner::Authority_OnIsInteractingChangedEvent(class ARespawnableInteractable* respawnableInteractable, bool isInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnablePositioner", "Authority_OnIsInteractingChangedEvent");

	Params::RespawnablePositioner_Authority_OnIsInteractingChangedEvent Parms{};

	Parms.respawnableInteractable = respawnableInteractable;
	Parms.isInteracting = isInteracting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnablePositioner.Authority_GetRespawnables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ARespawnableInteractable*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ARespawnableInteractable*> URespawnablePositioner::Authority_GetRespawnables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnablePositioner", "Authority_GetRespawnables");

	Params::RespawnablePositioner_Authority_GetRespawnables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

