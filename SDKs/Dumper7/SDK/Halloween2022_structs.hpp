#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Halloween2022

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum Halloween2022.EVoidEnergyTier
// NumValues: 0x0006
enum class EVoidEnergyTier : uint8
{
	None                                     = 0,
	Small                                    = 1,
	Medium                                   = 2,
	Large                                    = 3,
	Count                                    = 4,
	EVoidEnergyTier_MAX                      = 5,
};

// Enum Halloween2022.EVoidEnergyType
// NumValues: 0x000A
enum class EVoidEnergyType : uint8
{
	None                                     = 0,
	PalletStun                               = 1,
	WiggleStun                               = 2,
	LockerStun                               = 3,
	FlashlightStun                           = 4,
	GeneratorProgress                        = 5,
	MeatHook                                 = 6,
	Pumpkin                                  = 7,
	DownSurvivor                             = 8,
	EVoidEnergyType_MAX                      = 9,
};

// Enum Halloween2022.EVoidEnergyChangeReason
// NumValues: 0x0005
enum class EVoidEnergyChangeReason : uint8
{
	None                                     = 0,
	AddEnergy                                = 1,
	LoseEnergy                               = 2,
	SpendEnergy                              = 3,
	EVoidEnergyChangeReason_MAX              = 4,
};

// ScriptStruct Halloween2022.OrbProperties
// 0x0030 (0x0030 - 0x0000)
struct FOrbProperties final
{
public:
	EVoidEnergyType                               VoidEnergyType;                                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SpawnLocation;                                     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HoverLocation;                                     // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CustomEndLocation;                                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOrbProperties) == 0x000004, "Wrong alignment on FOrbProperties");
static_assert(sizeof(FOrbProperties) == 0x000030, "Wrong size on FOrbProperties");
static_assert(offsetof(FOrbProperties, VoidEnergyType) == 0x000000, "Member 'FOrbProperties::VoidEnergyType' has a wrong offset!");
static_assert(offsetof(FOrbProperties, SpawnLocation) == 0x000004, "Member 'FOrbProperties::SpawnLocation' has a wrong offset!");
static_assert(offsetof(FOrbProperties, HoverLocation) == 0x000010, "Member 'FOrbProperties::HoverLocation' has a wrong offset!");
static_assert(offsetof(FOrbProperties, CustomEndLocation) == 0x00001C, "Member 'FOrbProperties::CustomEndLocation' has a wrong offset!");

}

