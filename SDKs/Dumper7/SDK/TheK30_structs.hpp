#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK30

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum TheK30.EPowerState
// NumValues: 0x000A
enum class EPowerState : uint8
{
	Ready                                    = 0,
	Charging                                 = 1,
	Snapping                                 = 2,
	DrawPath                                 = 3,
	DrawPathDone                             = 4,
	OrderStarted                             = 5,
	PatrolStarted                            = 6,
	HuntStarted                              = 7,
	InCooldown                               = 8,
	EPowerState_MAX                          = 9,
};

// Enum TheK30.EChargeState
// NumValues: 0x0004
enum class EChargeState : uint8
{
	Inactive                                 = 0,
	Charging                                 = 1,
	ChargeCompleted                          = 2,
	EChargeState_MAX                         = 3,
};

// Enum TheK30.EGuardHuntEndReason
// NumValues: 0x0008
enum class EGuardHuntEndReason : uint8
{
	TimerExpired                             = 0,
	GuardHitSurvivor                         = 1,
	SurvivorCapturedFlag                     = 2,
	UnhookedSurvivor                         = 3,
	KillerDamagedSurvivor                    = 4,
	GuardPulledSurvivorOutOfLocker           = 5,
	UnexpectedError                          = 6,
	EGuardHuntEndReason_MAX                  = 7,
};

// ScriptStruct TheK30.TrailData
// 0x0030 (0x0030 - 0x0000)
struct FTrailData final
{
public:
	TArray<class ATrailNode*>                     _visualNodes;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                        _navigationWaypoints;                              // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AActor*                                 _owner;                                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isCompleted;                                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTrailData) == 0x000008, "Wrong alignment on FTrailData");
static_assert(sizeof(FTrailData) == 0x000030, "Wrong size on FTrailData");
static_assert(offsetof(FTrailData, _visualNodes) == 0x000000, "Member 'FTrailData::_visualNodes' has a wrong offset!");
static_assert(offsetof(FTrailData, _navigationWaypoints) == 0x000010, "Member 'FTrailData::_navigationWaypoints' has a wrong offset!");
static_assert(offsetof(FTrailData, _owner) == 0x000020, "Member 'FTrailData::_owner' has a wrong offset!");
static_assert(offsetof(FTrailData, _isCompleted) == 0x000028, "Member 'FTrailData::_isCompleted' has a wrong offset!");

// ScriptStruct TheK30.TrailSettings
// 0x0068 (0x0068 - 0x0000)
struct FTrailSettings final
{
public:
	struct FDBDTunableRowHandle                   MaximumDistanceBetweenNodes;                       // 0x0000(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDBDTunableRowHandle                   MinimumDistanceBetweenVisualNodes;                 // 0x0028(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleHalfHeight;                                 // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleRadius;                                     // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ATrailNode>                 _trailNodeClass;                                   // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTrailSettings) == 0x000008, "Wrong alignment on FTrailSettings");
static_assert(sizeof(FTrailSettings) == 0x000068, "Wrong size on FTrailSettings");
static_assert(offsetof(FTrailSettings, MaximumDistanceBetweenNodes) == 0x000000, "Member 'FTrailSettings::MaximumDistanceBetweenNodes' has a wrong offset!");
static_assert(offsetof(FTrailSettings, MinimumDistanceBetweenVisualNodes) == 0x000028, "Member 'FTrailSettings::MinimumDistanceBetweenVisualNodes' has a wrong offset!");
static_assert(offsetof(FTrailSettings, CapsuleHalfHeight) == 0x000050, "Member 'FTrailSettings::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(FTrailSettings, CapsuleRadius) == 0x000054, "Member 'FTrailSettings::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(FTrailSettings, CollisionChannel) == 0x000058, "Member 'FTrailSettings::CollisionChannel' has a wrong offset!");
static_assert(offsetof(FTrailSettings, _trailNodeClass) == 0x000060, "Member 'FTrailSettings::_trailNodeClass' has a wrong offset!");

}

