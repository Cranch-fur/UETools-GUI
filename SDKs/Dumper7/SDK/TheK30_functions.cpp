#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK30

#include "Basic.hpp"

#include "TheK30_classes.hpp"
#include "TheK30_parameters.hpp"


namespace SDK
{

// Function TheK30.DrawPatrolPathInteraction.OnCancellationTimerCompleted
// (Final, Native, Private)

void UDrawPatrolPathInteraction::OnCancellationTimerCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "OnCancellationTimerCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.DrawPatrolPathInteraction.Server_SendOrder
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AInteractable*                    target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDrawPatrolPathInteraction::Server_SendOrder(class AInteractable* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "Server_SendOrder");

	Params::DrawPatrolPathInteraction_Server_SendOrder Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.DrawPatrolPathInteraction.Server_StartPatrol
// (Net, NetReliable, Native, Event, Protected, NetServer)

void UDrawPatrolPathInteraction::Server_StartPatrol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "Server_StartPatrol");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.DrawPatrolPathInteraction.SetIsCharging
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    isCharging                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDrawPatrolPathInteraction::SetIsCharging(bool isCharging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "SetIsCharging");

	Params::DrawPatrolPathInteraction_SetIsCharging Parms{};

	Parms.isCharging = isCharging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.DrawPatrolPathInteraction.IsChargeCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDrawPatrolPathInteraction::IsChargeCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "IsChargeCompleted");

	Params::DrawPatrolPathInteraction_IsChargeCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.DrawPatrolPathInteraction.IsCharging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDrawPatrolPathInteraction::IsCharging() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawPatrolPathInteraction", "IsCharging");

	Params::DrawPatrolPathInteraction_IsCharging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.FloatingCameraNavigationComponent.Multicast_EnableWalkOffLegdes
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    isEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFloatingCameraNavigationComponent::Multicast_EnableWalkOffLegdes(bool isEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FloatingCameraNavigationComponent", "Multicast_EnableWalkOffLegdes");

	Params::FloatingCameraNavigationComponent_Multicast_EnableWalkOffLegdes Parms{};

	Parms.isEnabled = isEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.FloatingCameraNavigationComponent.Server_EnableWalkOffLegdes
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    isEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFloatingCameraNavigationComponent::Server_EnableWalkOffLegdes(bool isEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FloatingCameraNavigationComponent", "Server_EnableWalkOffLegdes");

	Params::FloatingCameraNavigationComponent_Server_EnableWalkOffLegdes Parms{};

	Parms.isEnabled = isEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardController.OnLoudNoiseTriggered
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           originator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           instigatingActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    shouldTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  audibleRange                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isQuickAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isDeceivingNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardController::OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& location, bool shouldTrack, float* audibleRange, bool isQuickAction, bool isDeceivingNoise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardController", "OnLoudNoiseTriggered");

	Params::GuardController_OnLoudNoiseTriggered Parms{};

	Parms.originator = originator;
	Parms.instigatingActor = instigatingActor;
	Parms.location = std::move(location);
	Parms.shouldTrack = shouldTrack;
	Parms.isQuickAction = isQuickAction;
	Parms.isDeceivingNoise = isDeceivingNoise;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (audibleRange != nullptr)
		*audibleRange = Parms.audibleRange;
}


// Function TheK30.GuardController.OnTargetPerceptionUpdated
// (Final, Native, Private)
// Parameters:
// class AActor*                           actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIStimulus&               stimulus                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AGuardController::OnTargetPerceptionUpdated(class AActor* actor, const struct FAIStimulus& stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardController", "OnTargetPerceptionUpdated");

	Params::GuardController_OnTargetPerceptionUpdated Parms{};

	Parms.actor = actor;
	Parms.stimulus = std::move(stimulus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.Authority_OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                hitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AGuardFlag::Authority_OnBeginOverlap(class UPrimitiveComponent* overlappedComponent, class AActor* other, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& hitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Authority_OnBeginOverlap");

	Params::GuardFlag_Authority_OnBeginOverlap Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.other = other;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.hitResult = std::move(hitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagActivationTimerCompleted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AGuardFlag::Cosmetic_OnFlagActivationTimerCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagActivationTimerCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagDisappearDueToHuntEnding
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       previouslyHuntedSurvivor                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnFlagDisappearDueToHuntEnding(class ADBDPlayer* previouslyHuntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagDisappearDueToHuntEnding");

	Params::GuardFlag_Cosmetic_OnFlagDisappearDueToHuntEnding Parms{};

	Parms.previouslyHuntedSurvivor = previouslyHuntedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Cosmetic_OnFlagSpawned
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   activationTimerDuration                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnFlagSpawned(float activationTimerDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnFlagSpawned");

	Params::GuardFlag_Cosmetic_OnFlagSpawned Parms{};

	Parms.activationTimerDuration = activationTimerDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Cosmetic_OnSurvivorCapturedFlag
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       previouslyHuntedSurvivor                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Cosmetic_OnSurvivorCapturedFlag(class ADBDPlayer* previouslyHuntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Cosmetic_OnSurvivorCapturedFlag");

	Params::GuardFlag_Cosmetic_OnSurvivorCapturedFlag Parms{};

	Parms.previouslyHuntedSurvivor = previouslyHuntedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.GuardFlag.Multicast_OnCamperCapturedFlag
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       huntedSurvivor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardFlag::Multicast_OnCamperCapturedFlag(class ADBDPlayer* huntedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "Multicast_OnCamperCapturedFlag");

	Params::GuardFlag_Multicast_OnCamperCapturedFlag Parms{};

	Parms.huntedSurvivor = huntedSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.OnRep_HuntedSurvivor
// (Final, Native, Private)

void AGuardFlag::OnRep_HuntedSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "OnRep_HuntedSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardFlag.GetActivationTimeLeft
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGuardFlag::GetActivationTimeLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetActivationTimeLeft");

	Params::GuardFlag_GetActivationTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardFlag.GetHuntedSurvivor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADBDPlayer* AGuardFlag::GetHuntedSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardFlag", "GetHuntedSurvivor");

	Params::GuardFlag_GetHuntedSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardHuntComponent.Authority_OnCamperInjuredOrDowned
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UGuardHuntComponent::Authority_OnCamperInjuredOrDowned(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "Authority_OnCamperInjuredOrDowned");

	Params::GuardHuntComponent_Authority_OnCamperInjuredOrDowned Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.Authority_OnCamperUnhooked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UGuardHuntComponent::Authority_OnCamperUnhooked(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "Authority_OnCamperUnhooked");

	Params::GuardHuntComponent_Authority_OnCamperUnhooked Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.OnRep_HuntedSurvivor
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    previousChasedSurvivor                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGuardHuntComponent::OnRep_HuntedSurvivor(class ACamperPlayer* previousChasedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "OnRep_HuntedSurvivor");

	Params::GuardHuntComponent_OnRep_HuntedSurvivor Parms{};

	Parms.previousChasedSurvivor = previousChasedSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.OnRep_HuntStartingLocation
// (Final, Native, Private)

void UGuardHuntComponent::OnRep_HuntStartingLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "OnRep_HuntStartingLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardHuntComponent.GetHuntedSurvivor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACamperPlayer* UGuardHuntComponent::GetHuntedSurvivor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardHuntComponent", "GetHuntedSurvivor");

	Params::GuardHuntComponent_GetHuntedSurvivor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.GuardPatrolComponent.OnRep_IsPatrolling
// (Final, Native, Private)

void UGuardPatrolComponent::OnRep_IsPatrolling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardPatrolComponent", "OnRep_IsPatrolling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardSlowingZone.OnZoneBeginOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           overlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardSlowingZone::OnZoneBeginOverlap(class AActor* overlappedActor, class AActor* otherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardSlowingZone", "OnZoneBeginOverlap");

	Params::GuardSlowingZone_OnZoneBeginOverlap Parms{};

	Parms.overlappedActor = overlappedActor;
	Parms.otherActor = otherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardSlowingZone.OnZoneEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           overlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGuardSlowingZone::OnZoneEndOverlap(class AActor* overlappedActor, class AActor* otherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardSlowingZone", "OnZoneEndOverlap");

	Params::GuardSlowingZone_OnZoneEndOverlap Parms{};

	Parms.overlappedActor = overlappedActor;
	Parms.otherActor = otherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.GuardPalletSlowingZone.OnRep_LinkedPallet
// (Final, Native, Private)

void AGuardPalletSlowingZone::OnRep_LinkedPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GuardPalletSlowingZone", "OnRep_LinkedPallet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30InflictStatusOnEndHuntAddon.Authority_OnEndHunt
// (Native, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGuardHuntEndReason                     huntEndReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30InflictStatusOnEndHuntAddon::Authority_OnEndHunt(class ADBDPlayer* player, EGuardHuntEndReason huntEndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30InflictStatusOnEndHuntAddon", "Authority_OnEndHunt");

	Params::K30InflictStatusOnEndHuntAddon_Authority_OnEndHunt Parms{};

	Parms.player = player;
	Parms.huntEndReason = huntEndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30ApplyStatusOnWakeUpAddon.Authority_OnWakeUp
// (Native, Protected)
// Parameters:
// class AKnightGuard*                     currentGuard                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30ApplyStatusOnWakeUpAddon::Authority_OnWakeUp(class AKnightGuard* currentGuard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30ApplyStatusOnWakeUpAddon", "Authority_OnWakeUp");

	Params::K30ApplyStatusOnWakeUpAddon_Authority_OnWakeUp Parms{};

	Parms.currentGuard = currentGuard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon17.BP_RevealAndMakeSurvivorScream
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       survivorPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             screamRevealDuration                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon17::BP_RevealAndMakeSurvivorScream(class ADBDPlayer* survivorPlayer, const float screamRevealDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon17", "BP_RevealAndMakeSurvivorScream");

	Params::K30Addon17_BP_RevealAndMakeSurvivorScream Parms{};

	Parms.survivorPlayer = survivorPlayer;
	Parms.screamRevealDuration = screamRevealDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30Addon17.Multicast_OnMakeSurvivorScream
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             lifetime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon17::Multicast_OnMakeSurvivorScream(class ADBDPlayer* player, const float lifetime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon17", "Multicast_OnMakeSurvivorScream");

	Params::K30Addon17_Multicast_OnMakeSurvivorScream Parms{};

	Parms.player = player;
	Parms.lifetime = lifetime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.Authority_OnEndHunt
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGuardHuntEndReason                     huntEndReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon20::Authority_OnEndHunt(class ADBDPlayer* player, EGuardHuntEndReason huntEndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "Authority_OnEndHunt");

	Params::K30Addon20_Authority_OnEndHunt Parms{};

	Parms.player = player;
	Parms.huntEndReason = huntEndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.Authority_OnHuntedSurvivorVault
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK30Addon20::Authority_OnHuntedSurvivorVault(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "Authority_OnHuntedSurvivorVault");

	Params::K30Addon20_Authority_OnHuntedSurvivorVault Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.Authority_OnStartHunt
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon20::Authority_OnStartHunt(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "Authority_OnStartHunt");

	Params::K30Addon20_Authority_OnStartHunt Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Addon20.Authority_OnTrailCameraGoThroughWindow
// (Final, Native, Private)
// Parameters:
// class AWindow*                          window                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30Addon20::Authority_OnTrailCameraGoThroughWindow(class AWindow* window)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Addon20", "Authority_OnTrailCameraGoThroughWindow");

	Params::K30Addon20_Authority_OnTrailCameraGoThroughWindow Parms{};

	Parms.window = window;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30CheatComponent.DBD_K30SetNextGuardIndex
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   nextGuardIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30CheatComponent::DBD_K30SetNextGuardIndex(int32 nextGuardIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30CheatComponent", "DBD_K30SetNextGuardIndex");

	Params::K30CheatComponent_DBD_K30SetNextGuardIndex Parms{};

	Parms.nextGuardIndex = nextGuardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30CheatComponent.DBD_K30SetPatrolAndHuntDuration
// (Final, Exec, Native, Public)
// Parameters:
// float                                   secondsToPatrol                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30CheatComponent::DBD_K30SetPatrolAndHuntDuration(float secondsToPatrol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30CheatComponent", "DBD_K30SetPatrolAndHuntDuration");

	Params::K30CheatComponent_DBD_K30SetPatrolAndHuntDuration Parms{};

	Parms.secondsToPatrol = secondsToPatrol;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30CheatComponent.DBD_K30ToggleGuardAttackDespawn
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   despawnOnAttack                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30CheatComponent::DBD_K30ToggleGuardAttackDespawn(int32 despawnOnAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30CheatComponent", "DBD_K30ToggleGuardAttackDespawn");

	Params::K30CheatComponent_DBD_K30ToggleGuardAttackDespawn Parms{};

	Parms.despawnOnAttack = despawnOnAttack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30InflictStatusOnDetectedAddon.Authority_OnDetected
// (Native, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30InflictStatusOnDetectedAddon::Authority_OnDetected(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30InflictStatusOnDetectedAddon", "Authority_OnDetected");

	Params::K30InflictStatusOnDetectedAddon_Authority_OnDetected Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30InflictStatusOnGuardHitAddon.Authority_OnGuardHit
// (Final, Native, Protected)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30InflictStatusOnGuardHitAddon::Authority_OnGuardHit(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30InflictStatusOnGuardHitAddon", "Authority_OnGuardHit");

	Params::K30InflictStatusOnGuardHitAddon_Authority_OnGuardHit Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_OnSurvivorFirstScream
// (Final, Native, Public)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02::Authority_OnSurvivorFirstScream(class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_OnSurvivorFirstScream");

	Params::K30P02_Authority_OnSurvivorFirstScream Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_OnTotemStateChanged
// (Final, Native, Public)
// Parameters:
// const ETotemState                       oldState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETotemState                       newState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02::Authority_OnTotemStateChanged(const ETotemState oldState, const ETotemState newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_OnTotemStateChanged");

	Params::K30P02_Authority_OnTotemStateChanged Parms{};

	Parms.oldState = oldState;
	Parms.newState = newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.Authority_UncursePlayer
// (Final, Native, Private)

void UK30P02::Authority_UncursePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "Authority_UncursePlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02.GetScreamInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float UK30P02::GetScreamInterval() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02", "GetScreamInterval");

	Params::K30P02_GetScreamInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.BP_MakeSurvivorScream
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       survivorPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             screamRevealDuration                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02ScreamStatusEffect::BP_MakeSurvivorScream(class ADBDPlayer* survivorPlayer, const float screamRevealDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "BP_MakeSurvivorScream");

	Params::K30P02ScreamStatusEffect_BP_MakeSurvivorScream Parms{};

	Parms.survivorPlayer = survivorPlayer;
	Parms.screamRevealDuration = screamRevealDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30P02ScreamStatusEffect.Multicast_MakePlayerScream
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const float                             screamRevealDuration                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK30P02ScreamStatusEffect::Multicast_MakePlayerScream(const float screamRevealDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "Multicast_MakePlayerScream");

	Params::K30P02ScreamStatusEffect_Multicast_MakePlayerScream Parms{};

	Parms.screamRevealDuration = screamRevealDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30P02ScreamStatusEffect.GetTimerDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30P02ScreamStatusEffect::GetTimerDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "GetTimerDuration");

	Params::K30P02ScreamStatusEffect_GetTimerDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.GetTimerElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30P02ScreamStatusEffect::GetTimerElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "GetTimerElapsedTime");

	Params::K30P02ScreamStatusEffect_GetTimerElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.GetTimerRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK30P02ScreamStatusEffect::GetTimerRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "GetTimerRemainingTime");

	Params::K30P02ScreamStatusEffect_GetTimerRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.IsTimerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK30P02ScreamStatusEffect::IsTimerActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "IsTimerActive");

	Params::K30P02ScreamStatusEffect_IsTimerActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30P02ScreamStatusEffect.IsTimerPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK30P02ScreamStatusEffect::IsTimerPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30P02ScreamStatusEffect", "IsTimerPaused");

	Params::K30P02ScreamStatusEffect_IsTimerPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.Cosmetic_OnPathDrawAvailableBegin
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK30Power::Cosmetic_OnPathDrawAvailableBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Cosmetic_OnPathDrawAvailableBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30Power.Cosmetic_OnPathDrawAvailableEnd
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK30Power::Cosmetic_OnPathDrawAvailableEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Cosmetic_OnPathDrawAvailableEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30Power.Cosmetic_UpdateRemainingPathLength
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   remainingPathLengthPercent                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::Cosmetic_UpdateRemainingPathLength(float remainingPathLengthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Cosmetic_UpdateRemainingPathLength");

	Params::K30Power_Cosmetic_UpdateRemainingPathLength Parms{};

	Parms.remainingPathLengthPercent = remainingPathLengthPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30Power.Multicast_OnSnappingStateChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    isSnapping                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::Multicast_OnSnappingStateChanged(bool isSnapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Multicast_OnSnappingStateChanged");

	Params::K30Power_Multicast_OnSnappingStateChanged Parms{};

	Parms.isSnapping = isSnapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.OnEndOverlapWindow
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::OnEndOverlapWindow(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "OnEndOverlapWindow");

	Params::K30Power_OnEndOverlapWindow Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.OnInteractionStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    isCharging                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isChargeCompleted                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::OnInteractionStateChanged(bool isCharging, bool isChargeCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "OnInteractionStateChanged");

	Params::K30Power_OnInteractionStateChanged Parms{};

	Parms.isCharging = isCharging;
	Parms.isChargeCompleted = isChargeCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.OnOrderTargetChanged
// (Final, Native, Private)

void AK30Power::OnOrderTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "OnOrderTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.OnRep_KnightHusk
// (Final, Native, Private)

void AK30Power::OnRep_KnightHusk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "OnRep_KnightHusk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.SendPathNearlyEndingWarning
// (Event, Public, BlueprintEvent)

void AK30Power::SendPathNearlyEndingWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "SendPathNearlyEndingWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30Power.Server_OnSnappingStateChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    isSnapping                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30Power::Server_OnSnappingStateChanged(bool isSnapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "Server_OnSnappingStateChanged");

	Params::K30Power_Server_OnSnappingStateChanged Parms{};

	Parms.isSnapping = isSnapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.K30Power.IsChargingPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK30Power::IsChargingPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "IsChargingPower");

	Params::K30Power_IsChargingPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.IsDrawingPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK30Power::IsDrawingPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "IsDrawingPath");

	Params::K30Power_IsDrawingPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Power.IsSnapping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AK30Power::IsSnapping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30Power", "IsSnapping");

	Params::K30Power_IsSnapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnHuntBegin
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnHuntBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnHuntBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnHuntEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnHuntEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnHuntEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.K30SurvivorCosmeticHelperActor.Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isFlagCaptureBuffActive                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK30SurvivorCosmeticHelperActor::Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged(bool isFlagCaptureBuffActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K30SurvivorCosmeticHelperActor", "Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged");

	Params::K30SurvivorCosmeticHelperActor_Cosmetic_OnSurvivorCaptureFlagBuffActivationStateChanged Parms{};

	Parms.isFlagCaptureBuffActive = isFlagCaptureBuffActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.K30Utilities.GetCurrentGuard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     theK30                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKnightGuard*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKnightGuard* UK30Utilities::GetCurrentGuard(const class AActor* theK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetCurrentGuard");

	Params::K30Utilities_GetCurrentGuard Parms{};

	Parms.theK30 = theK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetCurrentGuardIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     theK30                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK30Utilities::GetCurrentGuardIndex(const class AActor* theK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetCurrentGuardIndex");

	Params::K30Utilities_GetCurrentGuardIndex Parms{};

	Parms.theK30 = theK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetK30Power
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     theK30                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK30Power*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK30Power* UK30Utilities::GetK30Power(const class AActor* theK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetK30Power");

	Params::K30Utilities_GetK30Power Parms{};

	Parms.theK30 = theK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetNextGuard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     theK30                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AKnightGuard*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AKnightGuard* UK30Utilities::GetNextGuard(const class AActor* theK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetNextGuard");

	Params::K30Utilities_GetNextGuard Parms{};

	Parms.theK30 = theK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.K30Utilities.GetNextGuardIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     theK30                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK30Utilities::GetNextGuardIndex(const class AActor* theK30)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K30Utilities", "GetNextGuardIndex");

	Params::K30Utilities_GetNextGuardIndex Parms{};

	Parms.theK30 = theK30;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.Cosmetic_HideGuard
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_HideGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_HideGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_HuntChaseStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AKnightGuard::Cosmetic_HuntChaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_HuntChaseStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnGuardVisionRadiusChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnGuardVisionRadiusChanged(bool isVisible, float radius, float angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnGuardVisionRadiusChanged");

	Params::KnightGuard_Cosmetic_OnGuardVisionRadiusChanged Parms{};

	Parms.isVisible = isVisible;
	Parms.radius = radius;
	Parms.angle = angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnHuntEnded
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EGuardHuntEndReason                     reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnHuntEnded(EGuardHuntEndReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnHuntEnded");

	Params::KnightGuard_Cosmetic_OnHuntEnded Parms{};

	Parms.reason = reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnHuntTeleportStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnHuntTeleportStarted(float duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnHuntTeleportStarted");

	Params::KnightGuard_Cosmetic_OnHuntTeleportStarted Parms{};

	Parms.duration = duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnOrderEnded
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AKnightGuard::Cosmetic_OnOrderEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnOrderEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnOrderStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AKnightGuard::Cosmetic_OnOrderStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnOrderStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_OnPatrolEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Cosmetic_OnPatrolEnded(class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnPatrolEnded");

	Params::KnightGuard_Cosmetic_OnPatrolEnded Parms{};

	Parms.foundSurvivor = foundSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightGuard.Cosmetic_OnPatrolStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AKnightGuard::Cosmetic_OnPatrolStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_OnPatrolStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_ShowGuard
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_ShowGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_ShowGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_StartOverlappingVaultOrSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_StartOverlappingVaultOrSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_StartOverlappingVaultOrSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Cosmetic_StopOverlappingVaultOrSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKnightGuard::Cosmetic_StopOverlappingVaultOrSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Cosmetic_StopOverlappingVaultOrSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.KnightGuard.Multicast_CosmeticHuntEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EGuardHuntEndReason                     reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_CosmeticHuntEnded(EGuardHuntEndReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_CosmeticHuntEnded");

	Params::KnightGuard_Multicast_CosmeticHuntEnded Parms{};

	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.Multicast_OnOrderEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void AKnightGuard::Multicast_OnOrderEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnOrderEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.Multicast_OnPatrolEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ADBDPlayer*                       foundSurvivor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::Multicast_OnPatrolEnded(class ADBDPlayer* foundSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "Multicast_OnPatrolEnded");

	Params::KnightGuard_Multicast_OnPatrolEnded Parms{};

	Parms.foundSurvivor = foundSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.OnRep_IsActive
// (Final, Native, Private)
// Parameters:
// bool                                    previousIsActive                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKnightGuard::OnRep_IsActive(bool previousIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "OnRep_IsActive");

	Params::KnightGuard_OnRep_IsActive Parms{};

	Parms.previousIsActive = previousIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.OnRep_OwningKiller
// (Final, Native, Private)

void AKnightGuard::OnRep_OwningKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "OnRep_OwningKiller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightGuard.GetOwningKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASlasherPlayer*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASlasherPlayer* AKnightGuard::GetOwningKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetOwningKiller");

	Params::KnightGuard_GetOwningKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightGuard.GetPatrolComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGuardPatrolComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGuardPatrolComponent* AKnightGuard::GetPatrolComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightGuard", "GetPatrolComponent");

	Params::KnightGuard_GetPatrolComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.KnightOrderComponent.Cosmetic_OnNewTargetSelected
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AInteractable*                    newTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AInteractable*                    oldTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKnightOrderComponent::Cosmetic_OnNewTargetSelected(class AInteractable* newTarget, class AInteractable* oldTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "Cosmetic_OnNewTargetSelected");

	Params::KnightOrderComponent_Cosmetic_OnNewTargetSelected Parms{};

	Parms.newTarget = newTarget;
	Parms.oldTarget = oldTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightOrderComponent.Cosmetic_OnTargetableObjectsChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AInteractable*                    object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isTargetable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKnightOrderComponent::Cosmetic_OnTargetableObjectsChanged(class AInteractable* object, bool isTargetable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "Cosmetic_OnTargetableObjectsChanged");

	Params::KnightOrderComponent_Cosmetic_OnTargetableObjectsChanged Parms{};

	Parms.object = object;
	Parms.isTargetable = isTargetable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.KnightOrderComponent.OnCurrentInteractionFinished
// (Final, Native, Private)

void UKnightOrderComponent::OnCurrentInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "OnCurrentInteractionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.KnightOrderComponent.OnGameEventDispatched
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UKnightOrderComponent::OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KnightOrderComponent", "OnGameEventDispatched");

	Params::KnightOrderComponent_OnGameEventDispatched Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.PatrolTrailComponent.Authority_StartRecordingTrail
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPatrolTrailComponent::Authority_StartRecordingTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "Authority_StartRecordingTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.PatrolTrailComponent.Authority_StopRecordingTrail
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPatrolTrailComponent::Authority_StopRecordingTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "Authority_StopRecordingTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.PatrolTrailComponent.DoesTrailExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPatrolTrailComponent::DoesTrailExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "DoesTrailExist");

	Params::PatrolTrailComponent_DoesTrailExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetCurrentTrailLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPatrolTrailComponent::GetCurrentTrailLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetCurrentTrailLength");

	Params::PatrolTrailComponent_GetCurrentTrailLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetFirstNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetFirstNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetFirstNode");

	Params::PatrolTrailComponent_GetFirstNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetLastNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetLastNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetLastNode");

	Params::PatrolTrailComponent_GetLastNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetLastPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UPatrolTrailComponent::GetLastPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetLastPosition");

	Params::PatrolTrailComponent_GetLastPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetNextNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       currentNode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetNextNode(class ATrailNode* currentNode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetNextNode");

	Params::PatrolTrailComponent_GetNextNode Parms{};

	Parms.currentNode = currentNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.GetPreviousNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATrailNode*                       currentNode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATrailNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATrailNode* UPatrolTrailComponent::GetPreviousNode(class ATrailNode* currentNode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "GetPreviousNode");

	Params::PatrolTrailComponent_GetPreviousNode Parms{};

	Parms.currentNode = currentNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.PatrolTrailComponent.IsTrailCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPatrolTrailComponent::IsTrailCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PatrolTrailComponent", "IsTrailCompleted");

	Params::PatrolTrailComponent_IsTrailCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.S34P01.Authority_OnAccumulateRedirectedCharge
// (Final, Native, Public)
// Parameters:
// const float                             chargeAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             maxCharge                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Authority_OnAccumulateRedirectedCharge(const float chargeAmount, const float maxCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Authority_OnAccumulateRedirectedCharge");

	Params::S34P01_Authority_OnAccumulateRedirectedCharge Parms{};

	Parms.chargeAmount = chargeAmount;
	Parms.maxCharge = maxCharge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.Authority_OnSkillCheckResponse
// (Final, Native, Private)
// Parameters:
// bool                                    success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bonus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    triggerLoudNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hadInput                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillCheckCustomType                   type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   chargeChange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Authority_OnSkillCheckResponse(bool success, bool bonus, class ADBDPlayer* player, bool triggerLoudNoise, bool hadInput, ESkillCheckCustomType type, float chargeChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Authority_OnSkillCheckResponse");

	Params::S34P01_Authority_OnSkillCheckResponse Parms{};

	Parms.success = success;
	Parms.bonus = bonus;
	Parms.player = player;
	Parms.triggerLoudNoise = triggerLoudNoise;
	Parms.hadInput = hadInput;
	Parms.type = type;
	Parms.chargeChange = chargeChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.Cosmetic_OnFullCharge
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       owningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Cosmetic_OnFullCharge(class ADBDPlayer* owningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Cosmetic_OnFullCharge");

	Params::S34P01_Cosmetic_OnFullCharge Parms{};

	Parms.owningPlayer = owningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.S34P01.Cosmetic_OnStartChargingPerk
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       owningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Cosmetic_OnStartChargingPerk(class ADBDPlayer* owningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Cosmetic_OnStartChargingPerk");

	Params::S34P01_Cosmetic_OnStartChargingPerk Parms{};

	Parms.owningPlayer = owningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.S34P01.Cosmetic_OnStopChargingPerk
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       owningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Cosmetic_OnStopChargingPerk(class ADBDPlayer* owningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Cosmetic_OnStopChargingPerk");

	Params::S34P01_Cosmetic_OnStopChargingPerk Parms{};

	Parms.owningPlayer = owningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.S34P01.Cosmetic_OnUseCharge
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       owningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Cosmetic_OnUseCharge(class ADBDPlayer* owningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Cosmetic_OnUseCharge");

	Params::S34P01_Cosmetic_OnUseCharge Parms{};

	Parms.owningPlayer = owningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK30.S34P01.Multicast_OnUseTokens
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void US34P01::Multicast_OnUseTokens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Multicast_OnUseTokens");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.OnDamageStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      currentDamageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState currentDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "OnDamageStateChanged");

	Params::S34P01_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.currentDamageState = currentDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.OnRep_IsAccumulatingTokens
// (Final, Native, Private)

void US34P01::OnRep_IsAccumulatingTokens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "OnRep_IsAccumulatingTokens");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.OnRep_IsPerkActive
// (Final, Native, Private)

void US34P01::OnRep_IsPerkActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "OnRep_IsPerkActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.Server_AbilityTwoPressed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                                    isPressed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US34P01::Server_AbilityTwoPressed(bool isPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "Server_AbilityTwoPressed");

	Params::S34P01_Server_AbilityTwoPressed Parms{};

	Parms.isPressed = isPressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.S34P01.GetInitialCountdownAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US34P01::GetInitialCountdownAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "GetInitialCountdownAtLevel");

	Params::S34P01_GetInitialCountdownAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.S34P01.IsPerkActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US34P01::IsPerkActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P01", "IsPerkActive");

	Params::S34P01_IsPerkActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.S34P03.GetGeneratorRangeFromPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US34P03::GetGeneratorRangeFromPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P03", "GetGeneratorRangeFromPlayer");

	Params::S34P03_GetGeneratorRangeFromPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.S34P03.GetRepairSpeedAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US34P03::GetRepairSpeedAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S34P03", "GetRepairSpeedAtLevel");

	Params::S34P03_GetRepairSpeedAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.TrailNode.Client_UpdateTrail
// (Event, Protected, BlueprintEvent)

void ATrailNode::Client_UpdateTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "Client_UpdateTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.TrailNode.Cosmetic_PrepareForRemoval
// (Event, Public, BlueprintEvent)

void ATrailNode::Cosmetic_PrepareForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "Cosmetic_PrepareForRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK30.TrailNode.OnRep_PreviousNodePosition
// (Final, Native, Protected)

void ATrailNode::OnRep_PreviousNodePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "OnRep_PreviousNodePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK30.TrailNode.IsFirstNode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATrailNode::IsFirstNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "IsFirstNode");

	Params::TrailNode_IsFirstNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK30.TrailNode.IsOwnerLocallyObserved
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATrailNode::IsOwnerLocallyObserved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrailNode", "IsOwnerLocallyObserved");

	Params::TrailNode_IsOwnerLocallyObserved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

