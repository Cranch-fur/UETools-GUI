#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDInteraction

#include "Basic.hpp"


namespace SDK::Params
{

// Function DBDInteraction.BaseStalkModeInteraction.CanStalk
// 0x0001 (0x0001 - 0x0000)
struct BaseStalkModeInteraction_CanStalk final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseStalkModeInteraction_CanStalk) == 0x000001, "Wrong alignment on BaseStalkModeInteraction_CanStalk");
static_assert(sizeof(BaseStalkModeInteraction_CanStalk) == 0x000001, "Wrong size on BaseStalkModeInteraction_CanStalk");
static_assert(offsetof(BaseStalkModeInteraction_CanStalk, ReturnValue) == 0x000000, "Member 'BaseStalkModeInteraction_CanStalk::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BaseStalkModeInteraction.GetStalkerComponent
// 0x0008 (0x0008 - 0x0000)
struct BaseStalkModeInteraction_GetStalkerComponent final
{
public:
	class UStalkerComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseStalkModeInteraction_GetStalkerComponent) == 0x000008, "Wrong alignment on BaseStalkModeInteraction_GetStalkerComponent");
static_assert(sizeof(BaseStalkModeInteraction_GetStalkerComponent) == 0x000008, "Wrong size on BaseStalkModeInteraction_GetStalkerComponent");
static_assert(offsetof(BaseStalkModeInteraction_GetStalkerComponent, ReturnValue) == 0x000000, "Member 'BaseStalkModeInteraction_GetStalkerComponent::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BlessTotem.GetTotem
// 0x0008 (0x0008 - 0x0000)
struct BlessTotem_GetTotem final
{
public:
	class ATotem*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlessTotem_GetTotem) == 0x000008, "Wrong alignment on BlessTotem_GetTotem");
static_assert(sizeof(BlessTotem_GetTotem) == 0x000008, "Wrong size on BlessTotem_GetTotem");
static_assert(offsetof(BlessTotem_GetTotem, ReturnValue) == 0x000000, "Member 'BlessTotem_GetTotem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.CollectItemInteraction.GetItem
// 0x0008 (0x0008 - 0x0000)
struct CollectItemInteraction_GetItem final
{
public:
	class ACollectable*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectItemInteraction_GetItem) == 0x000008, "Wrong alignment on CollectItemInteraction_GetItem");
static_assert(sizeof(CollectItemInteraction_GetItem) == 0x000008, "Wrong size on CollectItemInteraction_GetItem");
static_assert(offsetof(CollectItemInteraction_GetItem, ReturnValue) == 0x000000, "Member 'CollectItemInteraction_GetItem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.DropItemInteraction.GetItem
// 0x0008 (0x0008 - 0x0000)
struct DropItemInteraction_GetItem final
{
public:
	class ACollectable*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DropItemInteraction_GetItem) == 0x000008, "Wrong alignment on DropItemInteraction_GetItem");
static_assert(sizeof(DropItemInteraction_GetItem) == 0x000008, "Wrong size on DropItemInteraction_GetItem");
static_assert(offsetof(DropItemInteraction_GetItem, ReturnValue) == 0x000000, "Member 'DropItemInteraction_GetItem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorDamageInteraction.Authority_DamageGenerator
// 0x0010 (0x0010 - 0x0000)
struct GeneratorDamageInteraction_Authority_DamageGenerator final
{
public:
	class ADBDPlayer*                             damageBy;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGenerator*                             generator;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorDamageInteraction_Authority_DamageGenerator) == 0x000008, "Wrong alignment on GeneratorDamageInteraction_Authority_DamageGenerator");
static_assert(sizeof(GeneratorDamageInteraction_Authority_DamageGenerator) == 0x000010, "Wrong size on GeneratorDamageInteraction_Authority_DamageGenerator");
static_assert(offsetof(GeneratorDamageInteraction_Authority_DamageGenerator, damageBy) == 0x000000, "Member 'GeneratorDamageInteraction_Authority_DamageGenerator::damageBy' has a wrong offset!");
static_assert(offsetof(GeneratorDamageInteraction_Authority_DamageGenerator, generator) == 0x000008, "Member 'GeneratorDamageInteraction_Authority_DamageGenerator::generator' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsBeingRepaired
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_IsBeingRepaired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_IsBeingRepaired) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_IsBeingRepaired");
static_assert(sizeof(GeneratorRepairInteraction_IsBeingRepaired) == 0x000001, "Wrong size on GeneratorRepairInteraction_IsBeingRepaired");
static_assert(offsetof(GeneratorRepairInteraction_IsBeingRepaired, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_IsBeingRepaired::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsObstructed
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_IsObstructed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_IsObstructed) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_IsObstructed");
static_assert(sizeof(GeneratorRepairInteraction_IsObstructed) == 0x000001, "Wrong size on GeneratorRepairInteraction_IsObstructed");
static_assert(offsetof(GeneratorRepairInteraction_IsObstructed, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_IsObstructed::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.SetIsObstructed
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_SetIsObstructed final
{
public:
	bool                                          obstructed;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_SetIsObstructed) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_SetIsObstructed");
static_assert(sizeof(GeneratorRepairInteraction_SetIsObstructed) == 0x000001, "Wrong size on GeneratorRepairInteraction_SetIsObstructed");
static_assert(offsetof(GeneratorRepairInteraction_SetIsObstructed, obstructed) == 0x000000, "Member 'GeneratorRepairInteraction_SetIsObstructed::obstructed' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.GetInteractionChargeSpeedMultiplier_Implementation
// 0x0010 (0x0010 - 0x0000)
struct GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation final
{
public:
	const class ADBDPlayer*                       character;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(sizeof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000010, "Wrong size on GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(offsetof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation, character) == 0x000000, "Member 'GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation::character' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation, ReturnValue) == 0x000008, "Member 'GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.GetOwningGenerator
// 0x0008 (0x0008 - 0x0000)
struct GeneratorRepairInteraction_GetOwningGenerator final
{
public:
	class AGenerator*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_GetOwningGenerator) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_GetOwningGenerator");
static_assert(sizeof(GeneratorRepairInteraction_GetOwningGenerator) == 0x000008, "Wrong size on GeneratorRepairInteraction_GetOwningGenerator");
static_assert(offsetof(GeneratorRepairInteraction_GetOwningGenerator, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_GetOwningGenerator::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsInteractionPossibleInternal
// 0x0010 (0x0010 - 0x0000)
struct GeneratorRepairInteraction_IsInteractionPossibleInternal final
{
public:
	const class ADBDPlayer*                       player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorRepairInteraction_IsInteractionPossibleInternal) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_IsInteractionPossibleInternal");
static_assert(sizeof(GeneratorRepairInteraction_IsInteractionPossibleInternal) == 0x000010, "Wrong size on GeneratorRepairInteraction_IsInteractionPossibleInternal");
static_assert(offsetof(GeneratorRepairInteraction_IsInteractionPossibleInternal, player) == 0x000000, "Member 'GeneratorRepairInteraction_IsInteractionPossibleInternal::player' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_IsInteractionPossibleInternal, ReturnValue) == 0x000008, "Member 'GeneratorRepairInteraction_IsInteractionPossibleInternal::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorToolboxRepairInteraction.GetInteractionTextWhenEmpty
// 0x0010 (0x0010 - 0x0000)
struct GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty) == 0x000008, "Wrong alignment on GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty");
static_assert(sizeof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty) == 0x000010, "Wrong size on GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty");
static_assert(offsetof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty, ReturnValue) == 0x000000, "Member 'GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorToolboxRepairInteraction.HasChargedToolBox
// 0x0010 (0x0010 - 0x0000)
struct GeneratorToolboxRepairInteraction_HasChargedToolBox final
{
public:
	const class ADBDPlayer*                       player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorToolboxRepairInteraction_HasChargedToolBox) == 0x000008, "Wrong alignment on GeneratorToolboxRepairInteraction_HasChargedToolBox");
static_assert(sizeof(GeneratorToolboxRepairInteraction_HasChargedToolBox) == 0x000010, "Wrong size on GeneratorToolboxRepairInteraction_HasChargedToolBox");
static_assert(offsetof(GeneratorToolboxRepairInteraction_HasChargedToolBox, player) == 0x000000, "Member 'GeneratorToolboxRepairInteraction_HasChargedToolBox::player' has a wrong offset!");
static_assert(offsetof(GeneratorToolboxRepairInteraction_HasChargedToolBox, ReturnValue) == 0x000008, "Member 'GeneratorToolboxRepairInteraction_HasChargedToolBox::ReturnValue' has a wrong offset!");

// Function DBDInteraction.HealInteraction.Authority_OnChargeApplied
// 0x0018 (0x0018 - 0x0000)
struct HealInteraction_Authority_OnChargeApplied final
{
public:
	float                                         individualChargeAmount;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         totalChargeAmount;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 chargeInstigator;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          wasCoop;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         deltaTime;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_Authority_OnChargeApplied) == 0x000008, "Wrong alignment on HealInteraction_Authority_OnChargeApplied");
static_assert(sizeof(HealInteraction_Authority_OnChargeApplied) == 0x000018, "Wrong size on HealInteraction_Authority_OnChargeApplied");
static_assert(offsetof(HealInteraction_Authority_OnChargeApplied, individualChargeAmount) == 0x000000, "Member 'HealInteraction_Authority_OnChargeApplied::individualChargeAmount' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnChargeApplied, totalChargeAmount) == 0x000004, "Member 'HealInteraction_Authority_OnChargeApplied::totalChargeAmount' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnChargeApplied, chargeInstigator) == 0x000008, "Member 'HealInteraction_Authority_OnChargeApplied::chargeInstigator' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnChargeApplied, wasCoop) == 0x000010, "Member 'HealInteraction_Authority_OnChargeApplied::wasCoop' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnChargeApplied, deltaTime) == 0x000014, "Member 'HealInteraction_Authority_OnChargeApplied::deltaTime' has a wrong offset!");

// Function DBDInteraction.HealInteraction.GetTargetSurvivor
// 0x0008 (0x0008 - 0x0000)
struct HealInteraction_GetTargetSurvivor final
{
public:
	class ACamperPlayer*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_GetTargetSurvivor) == 0x000008, "Wrong alignment on HealInteraction_GetTargetSurvivor");
static_assert(sizeof(HealInteraction_GetTargetSurvivor) == 0x000008, "Wrong size on HealInteraction_GetTargetSurvivor");
static_assert(offsetof(HealInteraction_GetTargetSurvivor, ReturnValue) == 0x000000, "Member 'HealInteraction_GetTargetSurvivor::ReturnValue' has a wrong offset!");

// Function DBDInteraction.HookSurvivorDefinition.GetMeatHook
// 0x0008 (0x0008 - 0x0000)
struct HookSurvivorDefinition_GetMeatHook final
{
public:
	class AMeatHook*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HookSurvivorDefinition_GetMeatHook) == 0x000008, "Wrong alignment on HookSurvivorDefinition_GetMeatHook");
static_assert(sizeof(HookSurvivorDefinition_GetMeatHook) == 0x000008, "Wrong size on HookSurvivorDefinition_GetMeatHook");
static_assert(offsetof(HookSurvivorDefinition_GetMeatHook, ReturnValue) == 0x000000, "Member 'HookSurvivorDefinition_GetMeatHook::ReturnValue' has a wrong offset!");

// Function DBDInteraction.LinkedVomitInteraction.GetVomitStateComponent
// 0x0008 (0x0008 - 0x0000)
struct LinkedVomitInteraction_GetVomitStateComponent final
{
public:
	class UVomitStateComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkedVomitInteraction_GetVomitStateComponent) == 0x000008, "Wrong alignment on LinkedVomitInteraction_GetVomitStateComponent");
static_assert(sizeof(LinkedVomitInteraction_GetVomitStateComponent) == 0x000008, "Wrong size on LinkedVomitInteraction_GetVomitStateComponent");
static_assert(offsetof(LinkedVomitInteraction_GetVomitStateComponent, ReturnValue) == 0x000000, "Member 'LinkedVomitInteraction_GetVomitStateComponent::ReturnValue' has a wrong offset!");

// Function DBDInteraction.LinkedVomitInteraction.IsVomiting
// 0x0001 (0x0001 - 0x0000)
struct LinkedVomitInteraction_IsVomiting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkedVomitInteraction_IsVomiting) == 0x000001, "Wrong alignment on LinkedVomitInteraction_IsVomiting");
static_assert(sizeof(LinkedVomitInteraction_IsVomiting) == 0x000001, "Wrong size on LinkedVomitInteraction_IsVomiting");
static_assert(offsetof(LinkedVomitInteraction_IsVomiting, ReturnValue) == 0x000000, "Member 'LinkedVomitInteraction_IsVomiting::ReturnValue' has a wrong offset!");

// Function DBDInteraction.SearchChestInteractionBase.FireChestScoreEvent
// 0x0008 (0x0008 - 0x0000)
struct SearchChestInteractionBase_FireChestScoreEvent final
{
public:
	const class ADBDPlayer*                       player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SearchChestInteractionBase_FireChestScoreEvent) == 0x000008, "Wrong alignment on SearchChestInteractionBase_FireChestScoreEvent");
static_assert(sizeof(SearchChestInteractionBase_FireChestScoreEvent) == 0x000008, "Wrong size on SearchChestInteractionBase_FireChestScoreEvent");
static_assert(offsetof(SearchChestInteractionBase_FireChestScoreEvent, player) == 0x000000, "Member 'SearchChestInteractionBase_FireChestScoreEvent::player' has a wrong offset!");

// Function DBDInteraction.OpenChestInteraction.CollectItemIfEmptyHanded
// 0x0010 (0x0010 - 0x0000)
struct OpenChestInteraction_CollectItemIfEmptyHanded final
{
public:
	class ACollectable*                           collectable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ADBDPlayer*                       player;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OpenChestInteraction_CollectItemIfEmptyHanded) == 0x000008, "Wrong alignment on OpenChestInteraction_CollectItemIfEmptyHanded");
static_assert(sizeof(OpenChestInteraction_CollectItemIfEmptyHanded) == 0x000010, "Wrong size on OpenChestInteraction_CollectItemIfEmptyHanded");
static_assert(offsetof(OpenChestInteraction_CollectItemIfEmptyHanded, collectable) == 0x000000, "Member 'OpenChestInteraction_CollectItemIfEmptyHanded::collectable' has a wrong offset!");
static_assert(offsetof(OpenChestInteraction_CollectItemIfEmptyHanded, player) == 0x000008, "Member 'OpenChestInteraction_CollectItemIfEmptyHanded::player' has a wrong offset!");

// Function DBDInteraction.ThrowInteraction.InitThrowCancellationExitTime
// 0x0004 (0x0004 - 0x0000)
struct ThrowInteraction_InitThrowCancellationExitTime final
{
public:
	float                                         value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowInteraction_InitThrowCancellationExitTime) == 0x000004, "Wrong alignment on ThrowInteraction_InitThrowCancellationExitTime");
static_assert(sizeof(ThrowInteraction_InitThrowCancellationExitTime) == 0x000004, "Wrong size on ThrowInteraction_InitThrowCancellationExitTime");
static_assert(offsetof(ThrowInteraction_InitThrowCancellationExitTime, value) == 0x000000, "Member 'ThrowInteraction_InitThrowCancellationExitTime::value' has a wrong offset!");

// Function DBDInteraction.ThrowInteraction.HasCancelledThrow
// 0x0001 (0x0001 - 0x0000)
struct ThrowInteraction_HasCancelledThrow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowInteraction_HasCancelledThrow) == 0x000001, "Wrong alignment on ThrowInteraction_HasCancelledThrow");
static_assert(sizeof(ThrowInteraction_HasCancelledThrow) == 0x000001, "Wrong size on ThrowInteraction_HasCancelledThrow");
static_assert(offsetof(ThrowInteraction_HasCancelledThrow, ReturnValue) == 0x000000, "Member 'ThrowInteraction_HasCancelledThrow::ReturnValue' has a wrong offset!");

// Function DBDInteraction.UnhookReplicationComponent.Multicast_SetPlayerBeingUnhooked
// 0x0010 (0x0010 - 0x0000)
struct UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked final
{
public:
	class UUnhook*                                unhookInteraction;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          playerBeingUnhooked;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked) == 0x000008, "Wrong alignment on UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked");
static_assert(sizeof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked) == 0x000010, "Wrong size on UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked");
static_assert(offsetof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked, unhookInteraction) == 0x000000, "Member 'UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked::unhookInteraction' has a wrong offset!");
static_assert(offsetof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked, playerBeingUnhooked) == 0x000008, "Member 'UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked::playerBeingUnhooked' has a wrong offset!");

}

