#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LevelStreamingManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_LevelStreamingManager.BPI_LevelStreamingManager_C.Stream Level In
// 0x0010 (0x0010 - 0x0000)
struct BPI_LevelStreamingManager_C_Stream_Level_In final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Make_Visible_After_Load;                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Should_Block_on_Load;                              // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LevelStreamingManager_C_Stream_Level_In) == 0x000004, "Wrong alignment on BPI_LevelStreamingManager_C_Stream_Level_In");
static_assert(sizeof(BPI_LevelStreamingManager_C_Stream_Level_In) == 0x000010, "Wrong size on BPI_LevelStreamingManager_C_Stream_Level_In");
static_assert(offsetof(BPI_LevelStreamingManager_C_Stream_Level_In, Level_Name) == 0x000000, "Member 'BPI_LevelStreamingManager_C_Stream_Level_In::Level_Name' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Stream_Level_In, Make_Visible_After_Load) == 0x00000C, "Member 'BPI_LevelStreamingManager_C_Stream_Level_In::Make_Visible_After_Load' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Stream_Level_In, Should_Block_on_Load) == 0x00000D, "Member 'BPI_LevelStreamingManager_C_Stream_Level_In::Should_Block_on_Load' has a wrong offset!");

// Function BPI_LevelStreamingManager.BPI_LevelStreamingManager_C.Stream Level Out
// 0x0010 (0x0010 - 0x0000)
struct BPI_LevelStreamingManager_C_Stream_Level_Out final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Block_on_Unload;                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LevelStreamingManager_C_Stream_Level_Out) == 0x000004, "Wrong alignment on BPI_LevelStreamingManager_C_Stream_Level_Out");
static_assert(sizeof(BPI_LevelStreamingManager_C_Stream_Level_Out) == 0x000010, "Wrong size on BPI_LevelStreamingManager_C_Stream_Level_Out");
static_assert(offsetof(BPI_LevelStreamingManager_C_Stream_Level_Out, Level_Name) == 0x000000, "Member 'BPI_LevelStreamingManager_C_Stream_Level_Out::Level_Name' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Stream_Level_Out, Should_Block_on_Unload) == 0x00000C, "Member 'BPI_LevelStreamingManager_C_Stream_Level_Out::Should_Block_on_Unload' has a wrong offset!");

// Function BPI_LevelStreamingManager.BPI_LevelStreamingManager_C.Load Level Instance
// 0x0038 (0x0038 - 0x0000)
struct BPI_LevelStreamingManager_C_Load_Level_Instance final
{
public:
	class FString                                 Level_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 Optional_Level_Name_Override;                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_LevelStreamingManager_C_Load_Level_Instance) == 0x000008, "Wrong alignment on BPI_LevelStreamingManager_C_Load_Level_Instance");
static_assert(sizeof(BPI_LevelStreamingManager_C_Load_Level_Instance) == 0x000038, "Wrong size on BPI_LevelStreamingManager_C_Load_Level_Instance");
static_assert(offsetof(BPI_LevelStreamingManager_C_Load_Level_Instance, Level_Name) == 0x000000, "Member 'BPI_LevelStreamingManager_C_Load_Level_Instance::Level_Name' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Load_Level_Instance, Location) == 0x000010, "Member 'BPI_LevelStreamingManager_C_Load_Level_Instance::Location' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Load_Level_Instance, Rotation) == 0x00001C, "Member 'BPI_LevelStreamingManager_C_Load_Level_Instance::Rotation' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Load_Level_Instance, Optional_Level_Name_Override) == 0x000028, "Member 'BPI_LevelStreamingManager_C_Load_Level_Instance::Optional_Level_Name_Override' has a wrong offset!");

// Function BPI_LevelStreamingManager.BPI_LevelStreamingManager_C.Open Level
// 0x0020 (0x0020 - 0x0000)
struct BPI_LevelStreamingManager_C_Open_Level final
{
public:
	class FName                                   Level_Name;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Absolute;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Options;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_LevelStreamingManager_C_Open_Level) == 0x000008, "Wrong alignment on BPI_LevelStreamingManager_C_Open_Level");
static_assert(sizeof(BPI_LevelStreamingManager_C_Open_Level) == 0x000020, "Wrong size on BPI_LevelStreamingManager_C_Open_Level");
static_assert(offsetof(BPI_LevelStreamingManager_C_Open_Level, Level_Name) == 0x000000, "Member 'BPI_LevelStreamingManager_C_Open_Level::Level_Name' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Open_Level, Absolute) == 0x00000C, "Member 'BPI_LevelStreamingManager_C_Open_Level::Absolute' has a wrong offset!");
static_assert(offsetof(BPI_LevelStreamingManager_C_Open_Level, Options) == 0x000010, "Member 'BPI_LevelStreamingManager_C_Open_Level::Options' has a wrong offset!");

}

