#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieRenderPipelineCore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "MovieRenderPipelineCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "OpenColorIO_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class MovieRenderPipelineCore.MoviePipelineSetting
// 0x0020 (0x0048 - 0x0028)
class UMoviePipelineSetting : public UObject
{
public:
	TWeakObjectPtr<class UMoviePipeline>          CachedPipeline;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x17];                                      // 0x0031(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BuildNewProcessCommandLine(class FString& InOutUnrealURLParams, class FString& InOutCommandLineArgs) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineSetting")
	}
	static class UMoviePipelineSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineSetting;

// Class MovieRenderPipelineCore.MoviePipelineCommandLineEncoder
// 0x0040 (0x0088 - 0x0048)
class UMoviePipelineCommandLineEncoder final : public UMoviePipelineSetting
{
public:
	class FString                                 FileNameFormatOverride;                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoviePipelineEncodeQuality                   Quality;                                           // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AdditionalCommandLineArgs;                         // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteSourceFiles;                                // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipEncodeOnRenderCanceled;                       // 0x0071(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x16];                                      // 0x0072(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineCommandLineEncoder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineCommandLineEncoder")
	}
	static class UMoviePipelineCommandLineEncoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineCommandLineEncoder>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineCommandLineEncoder;

// Class MovieRenderPipelineCore.MoviePipeline
// 0x02B8 (0x02E0 - 0x0028)
class UMoviePipeline final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UMoviePipeline* MoviePipeline, bool bFatalError)> OnMoviePipelineFinishedDelegate; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FMoviePipelineOutputData& Results)> OnMoviePipelineWorkFinishedDelegate; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FMoviePipelineOutputData& Results)> OnMoviePipelineShotWorkFinishedDelegate; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMoviePipelineCustomTimeStep*           CustomTimeStep;                                    // 0x0058(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UEngineCustomTimeStep*                  CachedPrevCustomTimeStep;                          // 0x0070(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelSequence*                         TargetSequence;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0080(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMovieRenderDebugWidget*                DebugWidget;                                       // 0x0088(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                               PreviewTexture;                                    // 0x0090(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_98[0x208];                                     // 0x0098(0x0208)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UMovieRenderDebugWidget>    DebugWidgetClass;                                  // 0x02A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              CurrentJob;                                        // 0x02A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x30];                                     // 0x02B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize(class UMoviePipelineExecutorJob* InJob);
	void OnMoviePipelineFinishedImpl();
	void RequestShutdown(bool bIsError);
	void Shutdown(bool bError);

	class UMoviePipelineMasterConfig* GetPipelineMasterConfig() const;
	class UTexture* GetPreviewTexture() const;
	bool IsShutdownRequested() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipeline")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipeline")
	}
	static class UMoviePipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipeline>();
	}
};
DUMPER7_ASSERTS_UMoviePipeline;

// Class MovieRenderPipelineCore.MoviePipelineCustomTimeStep
// 0x0008 (0x0030 - 0x0028)
class UMoviePipelineCustomTimeStep final : public UEngineCustomTimeStep
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineCustomTimeStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineCustomTimeStep")
	}
	static class UMoviePipelineCustomTimeStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineCustomTimeStep>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineCustomTimeStep;

// Class MovieRenderPipelineCore.MoviePipelineAntiAliasingSetting
// 0x0020 (0x0068 - 0x0048)
class UMoviePipelineAntiAliasingSetting final : public UMoviePipelineSetting
{
public:
	int32                                         SpatialSampleCount;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TemporalSampleCount;                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideAntiAliasing;                             // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAntiAliasingMethod                           AntiAliasingMethod;                                // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RenderWarmUpCount;                                 // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCameraCutForWarmUp;                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EngineWarmUpCount;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderWarmUpFrames;                               // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineAntiAliasingSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineAntiAliasingSetting")
	}
	static class UMoviePipelineAntiAliasingSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineAntiAliasingSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineAntiAliasingSetting;

// Class MovieRenderPipelineCore.MoviePipelineBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMoviePipelineBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UMovieSceneSequence* DuplicateSequence(class UObject* Outer_0, class UMovieSceneSequence* InSequence);
	static class UMoviePipelineSetting* FindOrGetDefaultSettingForShot(TSubclassOf<class UMoviePipelineSetting> InSettingType, const class UMoviePipelineMasterConfig* InMasterConfig, const class UMoviePipelineExecutorShot* InShot);
	static float GetCompletionPercentage(const class UMoviePipeline* InPipeline);
	static float GetCurrentAperture(const class UMoviePipeline* InMoviePipeline);
	static float GetCurrentFocalLength(const class UMoviePipeline* InMoviePipeline);
	static float GetCurrentFocusDistance(const class UMoviePipeline* InMoviePipeline);
	static void GetCurrentSegmentName(class UMoviePipeline* InMoviePipeline, class FText* OutOuterName, class FText* OutInnerName);
	static EMovieRenderShotState GetCurrentSegmentState(class UMoviePipeline* InMoviePipeline);
	static struct FMoviePipelineSegmentWorkMetrics GetCurrentSegmentWorkMetrics(const class UMoviePipeline* InMoviePipeline);
	static struct FFrameNumber GetCurrentShotFrameNumber(const class UMoviePipeline* InMoviePipeline);
	static struct FTimecode GetCurrentShotTimecode(const class UMoviePipeline* InMoviePipeline);
	static struct FIntPoint GetEffectiveOutputResolution(class UMoviePipelineMasterConfig* InMasterConfig, class UMoviePipelineExecutorShot* InPipelineExecutorShot);
	static bool GetEstimatedTimeRemaining(const class UMoviePipeline* InPipeline, struct FTimespan* OutEstimate);
	static class FText GetJobAuthor(class UMoviePipeline* InMoviePipeline);
	static struct FDateTime GetJobInitializationTime(const class UMoviePipeline* InMoviePipeline);
	static class FText GetJobName(class UMoviePipeline* InMoviePipeline);
	static class FString GetMapPackageName(class UMoviePipelineExecutorJob* InJob);
	static struct FFrameNumber GetMasterFrameNumber(const class UMoviePipeline* InMoviePipeline);
	static struct FTimecode GetMasterTimecode(const class UMoviePipeline* InMoviePipeline);
	static void GetOverallOutputFrames(const class UMoviePipeline* InMoviePipeline, int32* OutCurrentIndex, int32* OutTotalCount);
	static void GetOverallSegmentCounts(const class UMoviePipeline* InMoviePipeline, int32* OutCurrentIndex, int32* OutTotalCount);
	static EMovieRenderPipelineState GetPipelineState(const class UMoviePipeline* InPipeline);
	static void ResolveFilenameFormatArguments(const class FString& InFormatString, const struct FMoviePipelineFilenameResolveParams& InParams, class FString* OutFinalPath, struct FMoviePipelineFormatArgs* OutMergedFormatArgs);
	static int32 ResolveVersionNumber(const struct FMoviePipelineFilenameResolveParams& InParams);
	static void UpdateJobShotListFromSequence(class ULevelSequence* InSequence, class UMoviePipelineExecutorJob* InJob, bool* bShotsChanged);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineBlueprintLibrary")
	}
	static class UMoviePipelineBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineBlueprintLibrary;

// Class MovieRenderPipelineCore.MoviePipelineCameraSetting
// 0x0008 (0x0050 - 0x0048)
class UMoviePipelineCameraSetting final : public UMoviePipelineSetting
{
public:
	EMoviePipelineShutterTiming                   ShutterTiming;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverscanPercentage;                                // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineCameraSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineCameraSetting")
	}
	static class UMoviePipelineCameraSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineCameraSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineCameraSetting;

// Class MovieRenderPipelineCore.MoviePipelineColorSetting
// 0x0068 (0x00B0 - 0x0048)
class UMoviePipelineColorSetting final : public UMoviePipelineSetting
{
public:
	struct FOpenColorIODisplayConfiguration       OCIOConfiguration;                                 // 0x0048(0x0060)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bDisableToneCurve;                                 // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineColorSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineColorSetting")
	}
	static class UMoviePipelineColorSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineColorSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineColorSetting;

// Class MovieRenderPipelineCore.MoviePipelineCommandLineEncoderSettings
// 0x00C8 (0x0100 - 0x0038)
class UMoviePipelineCommandLineEncoderSettings final : public UDeveloperSettings
{
public:
	class FString                                 ExecutablePath;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CodecHelpText;                                     // 0x0048(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FString                                 VideoCodec;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AudioCodec;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutputFileExtension;                               // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CommandLineFormat;                                 // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VideoInputStringFormat;                            // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AudioInputStringFormat;                            // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EncodeSettings_Low;                                // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EncodeSettings_Med;                                // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EncodeSettings_High;                               // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EncodeSettings_Epic;                               // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineCommandLineEncoderSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineCommandLineEncoderSettings")
	}
	static class UMoviePipelineCommandLineEncoderSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineCommandLineEncoderSettings>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineCommandLineEncoderSettings;

// Class MovieRenderPipelineCore.MoviePipelineConfigBase
// 0x0028 (0x0050 - 0x0028)
class UMoviePipelineConfigBase : public UObject
{
public:
	class FString                                 DisplayName;                                       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMoviePipelineSetting*>          Settings;                                          // 0x0038(0x0010)(Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CopyFrom(class UMoviePipelineConfigBase* InConfig);
	class UMoviePipelineSetting* FindOrAddSettingByClass(TSubclassOf<class UMoviePipelineSetting> InClass, const bool bIncludeDisabledSettings);
	void RemoveSetting(class UMoviePipelineSetting* InSetting);

	class UMoviePipelineSetting* FindSettingByClass(TSubclassOf<class UMoviePipelineSetting> InClass, const bool bIncludeDisabledSettings) const;
	TArray<class UMoviePipelineSetting*> FindSettingsByClass(TSubclassOf<class UMoviePipelineSetting> InClass, const bool bIncludeDisabledSettings) const;
	TArray<class UMoviePipelineSetting*> GetUserSettings() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineConfigBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineConfigBase")
	}
	static class UMoviePipelineConfigBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineConfigBase>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineConfigBase;

// Class MovieRenderPipelineCore.MoviePipelineDebugSettings
// 0x0010 (0x0058 - 0x0048)
class UMoviePipelineDebugSettings final : public UMoviePipelineSetting
{
public:
	bool                                          bWriteAllSamples;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCaptureFramesWithRenderDoc;                       // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CaptureFrame;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineDebugSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineDebugSettings")
	}
	static class UMoviePipelineDebugSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineDebugSettings>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineDebugSettings;

// Class MovieRenderPipelineCore.MoviePipelineExecutorBase
// 0x00E0 (0x0108 - 0x0028)
class UMoviePipelineExecutorBase : public UObject
{
public:
	TMulticastInlineDelegate<void(class UMoviePipelineExecutorBase* PipelineExecutor, bool bSuccess)> OnExecutorFinishedDelegate; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UMoviePipelineExecutorBase* PipelineExecutor, class UMoviePipeline* PipelineWithError, bool bIsFatal, class FText ErrorText)> OnExecutorErroredDelegate; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x20];                                      // 0x0060(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Message)> SocketMessageRecievedDelegate;      // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(int32 RequestIndex, int32 ResponseCode, const class FString& Message)> HTTPResponseRecievedDelegate; // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UMovieRenderDebugWidget>    DebugWidgetClass;                                  // 0x00A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserData;                                          // 0x00A8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMoviePipeline>             TargetPipelineClass;                               // 0x00B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x48];                                      // 0x00C0(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelAllJobs();
	void CancelCurrentJob();
	bool ConnectSocket(const class FString& InHostName, const int32 InPort);
	void DisconnectSocket();
	void Execute(class UMoviePipelineQueue* InPipelineQueue);
	void OnBeginFrame();
	void OnExecutorErroredImpl(class UMoviePipeline* ErroredPipeline, bool bFatal, const class FText& ErrorReason);
	void OnExecutorFinishedImpl();
	int32 SendHTTPRequest(const class FString& InURL, const class FString& InVerb, const class FString& InMessage, const TMap<class FString, class FString>& InHeaders);
	bool SendSocketMessage(const class FString& InMessage);
	void SetMoviePipelineClass(class UClass* InPipelineClass);
	void SetStatusMessage(const class FString& InStatus);
	void SetStatusProgress(const float InProgress);

	class FString GetStatusMessage() const;
	float GetStatusProgress() const;
	bool IsRendering() const;
	bool IsSocketConnected() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineExecutorBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineExecutorBase")
	}
	static class UMoviePipelineExecutorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineExecutorBase>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineExecutorBase;

// Class MovieRenderPipelineCore.MoviePipelineOutputBase
// 0x0000 (0x0048 - 0x0048)
class UMoviePipelineOutputBase : public UMoviePipelineSetting
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineOutputBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineOutputBase")
	}
	static class UMoviePipelineOutputBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineOutputBase>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineOutputBase;

// Class MovieRenderPipelineCore.MoviePipelineFCPXMLExporter
// 0x0038 (0x0080 - 0x0048)
class UMoviePipelineFCPXMLExporter final : public UMoviePipelineOutputBase
{
public:
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FileNameFormatOverride;                            // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFCPXMLExportDataSource                       DataSource;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x1F];                                      // 0x0061(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineFCPXMLExporter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineFCPXMLExporter")
	}
	static class UMoviePipelineFCPXMLExporter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineFCPXMLExporter>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineFCPXMLExporter;

// Class MovieRenderPipelineCore.MoviePipelineGameMode
// 0x0000 (0x02C0 - 0x02C0)
class AMoviePipelineGameMode final : public AGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineGameMode")
	}
	static class AMoviePipelineGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMoviePipelineGameMode>();
	}
};
DUMPER7_ASSERTS_AMoviePipelineGameMode;

// Class MovieRenderPipelineCore.MoviePipelineGameOverrideSetting
// 0x00D0 (0x0118 - 0x0048)
class UMoviePipelineGameOverrideSetting final : public UMoviePipelineSetting
{
public:
	TSubclassOf<class AGameModeBase>              GameModeOverride;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCinematicQualitySettings;                         // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoviePipelineTextureStreamingMethod          TextureStreaming;                                  // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLODZero;                                       // 0x0052(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableHLODs;                                     // 0x0053(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHighQualityShadows;                            // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShadowDistanceScale;                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShadowRadiusThreshold;                             // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideViewDistanceScale;                        // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ViewDistanceScale;                                 // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlushGrassStreaming;                              // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0xAF];                                      // 0x0069(0x00AF)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineGameOverrideSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineGameOverrideSetting")
	}
	static class UMoviePipelineGameOverrideSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineGameOverrideSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineGameOverrideSetting;

// Class MovieRenderPipelineCore.MoviePipelineHighResSetting
// 0x0018 (0x0060 - 0x0048)
class UMoviePipelineHighResSetting final : public UMoviePipelineSetting
{
public:
	int32                                         TileCount;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TextureSharpnessBias;                              // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverlapRatio;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSubSurfaceScattering;                     // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BurleySampleCount;                                 // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineHighResSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineHighResSetting")
	}
	static class UMoviePipelineHighResSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineHighResSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineHighResSetting;

// Class MovieRenderPipelineCore.MoviePipelineLinearExecutorBase
// 0x0028 (0x0130 - 0x0108)
class UMoviePipelineLinearExecutorBase : public UMoviePipelineExecutorBase
{
public:
	class UMoviePipelineQueue*                    Queue;                                             // 0x0108(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMoviePipeline*                         ActiveMoviePipeline;                               // 0x0110(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_118[0x18];                                     // 0x0118(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineLinearExecutorBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineLinearExecutorBase")
	}
	static class UMoviePipelineLinearExecutorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineLinearExecutorBase>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineLinearExecutorBase;

// Class MovieRenderPipelineCore.MoviePipelineInProcessExecutor
// 0x0038 (0x0168 - 0x0130)
class UMoviePipelineInProcessExecutor final : public UMoviePipelineLinearExecutorBase
{
public:
	bool                                          bUseCurrentLevel;                                  // 0x0130(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x37];                                     // 0x0131(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineInProcessExecutor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineInProcessExecutor")
	}
	static class UMoviePipelineInProcessExecutor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineInProcessExecutor>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineInProcessExecutor;

// Class MovieRenderPipelineCore.MoviePipelineInProcessExecutorSettings
// 0x0030 (0x0068 - 0x0038)
class UMoviePipelineInProcessExecutorSettings final : public UDeveloperSettings
{
public:
	bool                                          bCloseEditor;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AdditionalCommandLineArguments;                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InheritedCommandLineArguments;                     // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InitialDelayFrameCount;                            // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineInProcessExecutorSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineInProcessExecutorSettings")
	}
	static class UMoviePipelineInProcessExecutorSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineInProcessExecutorSettings>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineInProcessExecutorSettings;

// Class MovieRenderPipelineCore.MoviePipelineMasterConfig
// 0x0068 (0x00B8 - 0x0050)
class UMoviePipelineMasterConfig final : public UMoviePipelineConfigBase
{
public:
	TMap<class FString, class UMoviePipelineShotConfig*> PerShotConfigMapping;                       // 0x0050(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UMoviePipelineOutputSetting*            OutputSetting;                                     // 0x00A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMoviePipelineSetting*>          TransientSettings;                                 // 0x00A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void InitializeTransientSettings();

	TArray<class UMoviePipelineSetting*> GetAllSettings(const bool bIncludeDisabledSettings, const bool bIncludeTransientSettings) const;
	struct FFrameRate GetEffectiveFrameRate(const class ULevelSequence* InSequence) const;
	TArray<class UMoviePipelineSetting*> GetTransientSettings() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineMasterConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineMasterConfig")
	}
	static class UMoviePipelineMasterConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineMasterConfig>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineMasterConfig;

// Class MovieRenderPipelineCore.MoviePipelineOutputSetting
// 0x0068 (0x00B0 - 0x0048)
class UMoviePipelineOutputSetting final : public UMoviePipelineSetting
{
public:
	struct FDirectoryPath                         OutputDirectory;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 FileNameFormat;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              OutputResolution;                                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomFrameRate;                               // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameRate                             OutputFrameRate;                                   // 0x0074(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverrideExistingOutput;                           // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HandleFrameCount;                                  // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutputFrameStep;                                   // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomPlaybackRange;                           // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CustomStartFrame;                                  // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CustomEndFrame;                                    // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VersionNumber;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoVersion;                                      // 0x009C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZeroPadFrameNumbers;                               // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrameNumberOffset;                                 // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlushDiskWritesPerShot;                           // 0x00A8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineOutputSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineOutputSetting")
	}
	static class UMoviePipelineOutputSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineOutputSetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineOutputSetting;

// Class MovieRenderPipelineCore.MoviePipelinePythonHostExecutor
// 0x0018 (0x0120 - 0x0108)
class UMoviePipelinePythonHostExecutor final : public UMoviePipelineExecutorBase
{
public:
	TSubclassOf<class UMoviePipelinePythonHostExecutor> ExecutorClass;                               // 0x0108(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineQueue*                    PipelineQueue;                                     // 0x0110(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                 LastLoadedWorld;                                   // 0x0118(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ExecuteDelayed(class UMoviePipelineQueue* InPipelineQueue);
	void OnMapLoad(class UWorld* InWorld);

	class UWorld* GetLastLoadedWorld() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelinePythonHostExecutor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelinePythonHostExecutor")
	}
	static class UMoviePipelinePythonHostExecutor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelinePythonHostExecutor>();
	}
};
DUMPER7_ASSERTS_UMoviePipelinePythonHostExecutor;

// Class MovieRenderPipelineCore.MoviePipelineExecutorShot
// 0x0108 (0x0130 - 0x0028)
class UMoviePipelineExecutorShot final : public UObject
{
public:
	bool                                          bEnabled;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OuterName;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InnerName;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x98];                                      // 0x0050(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x00E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatusMessage;                                     // 0x00F0(0x0010)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMoviePipelineShotConfig*               ShotOverrideConfig;                                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMoviePipelineShotConfig> ShotOverridePresetOrigin;                         // 0x0108(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UMoviePipelineShotConfig* AllocateNewShotOverrideConfig(TSubclassOf<class UMoviePipelineShotConfig> InConfigType);
	void SetShotOverrideConfiguration(class UMoviePipelineShotConfig* InPreset);
	void SetShotOverridePresetOrigin(class UMoviePipelineShotConfig* InPreset);
	void SetStatusMessage(const class FString& InStatus);
	void SetStatusProgress(const float InProgress);

	class UMoviePipelineShotConfig* GetShotOverrideConfiguration() const;
	class UMoviePipelineShotConfig* GetShotOverridePresetOrigin() const;
	class FString GetStatusMessage() const;
	float GetStatusProgress() const;
	bool ShouldRender() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineExecutorShot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineExecutorShot")
	}
	static class UMoviePipelineExecutorShot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineExecutorShot>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineExecutorShot;

// Class MovieRenderPipelineCore.MoviePipelineExecutorJob
// 0x00B8 (0x00E0 - 0x0028)
class UMoviePipelineExecutorJob final : public UObject
{
public:
	class FString                                 JobName;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Sequence;                                          // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Map;                                               // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Author;                                            // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMoviePipelineExecutorShot*>     ShotInfo;                                          // 0x0078(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FString                                 UserData;                                          // 0x0088(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StatusMessage;                                     // 0x0098(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StatusProgress;                                    // 0x00A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsConsumed;                                       // 0x00AC(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoviePipelineMasterConfig*             Configuration;                                     // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMoviePipelineMasterConfig> PresetOrigin;                                   // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDuplicated();
	void SetConfiguration(class UMoviePipelineMasterConfig* InPreset);
	void SetConsumed(const bool bInConsumed);
	void SetPresetOrigin(class UMoviePipelineMasterConfig* InPreset);
	void SetSequence(const struct FSoftObjectPath& InSequence);
	void SetStatusMessage(const class FString& InStatus);
	void SetStatusProgress(const float InProgress);

	class UMoviePipelineMasterConfig* GetConfiguration() const;
	class UMoviePipelineMasterConfig* GetPresetOrigin() const;
	class FString GetStatusMessage() const;
	float GetStatusProgress() const;
	bool IsConsumed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineExecutorJob")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineExecutorJob")
	}
	static class UMoviePipelineExecutorJob* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineExecutorJob>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineExecutorJob;

// Class MovieRenderPipelineCore.MoviePipelineQueue
// 0x0018 (0x0040 - 0x0028)
class UMoviePipelineQueue final : public UObject
{
public:
	TArray<class UMoviePipelineExecutorJob*>      Jobs;                                              // 0x0028(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMoviePipelineExecutorJob* AllocateNewJob(TSubclassOf<class UMoviePipelineExecutorJob> InJobType);
	void CopyFrom(class UMoviePipelineQueue* InQueue);
	void DeleteJob(class UMoviePipelineExecutorJob* InJob);
	class UMoviePipelineExecutorJob* DuplicateJob(class UMoviePipelineExecutorJob* InJob);

	TArray<class UMoviePipelineExecutorJob*> GetJobs() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineQueue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineQueue")
	}
	static class UMoviePipelineQueue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineQueue>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineQueue;

// Class MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem
// 0x0010 (0x0040 - 0x0030)
class UMoviePipelineQueueEngineSubsystem final : public UEngineSubsystem
{
public:
	class UMoviePipelineExecutorBase*             ActiveExecutor;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMoviePipelineQueue*                    CurrentQueue;                                      // 0x0038(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UMoviePipelineExecutorBase* RenderQueueWithExecutor(TSubclassOf<class UMoviePipelineExecutorBase> InExecutorType);
	void RenderQueueWithExecutorInstance(class UMoviePipelineExecutorBase* InExecutor);

	class UMoviePipelineExecutorBase* GetActiveExecutor() const;
	class UMoviePipelineQueue* GetQueue() const;
	bool IsRendering() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineQueueEngineSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineQueueEngineSubsystem")
	}
	static class UMoviePipelineQueueEngineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineQueueEngineSubsystem>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineQueueEngineSubsystem;

// Class MovieRenderPipelineCore.MoviePipelineRenderPass
// 0x0000 (0x0048 - 0x0048)
class UMoviePipelineRenderPass : public UMoviePipelineSetting
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineRenderPass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineRenderPass")
	}
	static class UMoviePipelineRenderPass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineRenderPass>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineRenderPass;

// Class MovieRenderPipelineCore.MoviePipelineShotConfig
// 0x0000 (0x0050 - 0x0050)
class UMoviePipelineShotConfig final : public UMoviePipelineConfigBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineShotConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineShotConfig")
	}
	static class UMoviePipelineShotConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineShotConfig>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineShotConfig;

// Class MovieRenderPipelineCore.MoviePipelineVideoOutputBase
// 0x0040 (0x0088 - 0x0048)
class UMoviePipelineVideoOutputBase final : public UMoviePipelineOutputBase
{
public:
	uint8                                         Pad_48[0x40];                                      // 0x0048(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineVideoOutputBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineVideoOutputBase")
	}
	static class UMoviePipelineVideoOutputBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineVideoOutputBase>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineVideoOutputBase;

// Class MovieRenderPipelineCore.MoviePipelineViewFamilySetting
// 0x0000 (0x0048 - 0x0048)
class UMoviePipelineViewFamilySetting final : public UMoviePipelineSetting
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoviePipelineViewFamilySetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoviePipelineViewFamilySetting")
	}
	static class UMoviePipelineViewFamilySetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineViewFamilySetting>();
	}
};
DUMPER7_ASSERTS_UMoviePipelineViewFamilySetting;

// Class MovieRenderPipelineCore.MovieRenderDebugWidget
// 0x0000 (0x0260 - 0x0260)
class UMovieRenderDebugWidget final : public UUserWidget
{
public:
	void OnInitializedForPipeline(class UMoviePipeline* ForPipeline);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieRenderDebugWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieRenderDebugWidget")
	}
	static class UMovieRenderDebugWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieRenderDebugWidget>();
	}
};
DUMPER7_ASSERTS_UMovieRenderDebugWidget;

}

