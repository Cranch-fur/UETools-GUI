#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RedButterFly_Red

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "LNPCCharacterBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RedButterFly_Red.BP_RedButterFly_Red_C
// 0x00E0 (0x14B0 - 0x13D0)
class ABP_RedButterFly_Red_C final : public ALNPCCharacterBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_RedButterFly_Red_C;              // 0x13C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULCharacterBlockCapsuleComponent*       LCharacterBlockCapsule_HitRange;                   // 0x13D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULRedButterFlySearchCollisionComponent* LRedButterFlySearchCollision;                      // 0x13D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_RedButterFly_Body_Particle_01_GDH;              // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Is4WayHit_0;                                       // 0x13E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFirstOverlapping;                                // 0x13E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSecondOverlapping;                               // 0x13EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13EB[0x1];                                     // 0x13EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ThirdDegree;                                       // 0x13EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RollbackToNormalDelay_Sec;                         // 0x13F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F4[0x4];                                     // 0x13F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RollbackToNormalDelay_TimerHandle;                 // 0x13F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Tracing;                                           // 0x1400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnteringN2;                                        // 0x1401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1402[0x2];                                     // 0x1402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SearchToTraceDistance;                             // 0x1404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLPlayerCameraData                     LPlayerCamera;                                     // 0x1408(0x003C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_1444[0x4];                                     // 0x1444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UShapeComponent*>                RedButterFlyFirstSearchCollision_InSpot;           // 0x1448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class FString>                           FirstOverlepRefCount;                              // 0x1458(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ReachedN2;                                         // 0x14A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RedButterFly_Red(int32 EntryPoint);
	void OnRespawnBP();
	void DeadCharacterBP();
	void OnApplyRunningAbnormal(bool IsApply, class FName AbnormalCodeName);
	void OnPostDead();
	void DelayToBeNormalPC();
	void EndSecondOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void EndFirstOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginSecondOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BeginFisrtOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Do_Play(bool InStartPlay, bool IsPlayHideSkill);
	void On_End_Skill_For_Stop_Tracing(class AActor* Owner_0, const struct FMomentConditionCaptureInfo& CapturedInfo);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

	void Get_Ghost_Skill_Code_Name(bool IsToGhost, class FName* Out) const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_RedButterFly_Red_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_RedButterFly_Red_C")
	}
	static class ABP_RedButterFly_Red_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RedButterFly_Red_C>();
	}
};
DUMPER7_ASSERTS_ABP_RedButterFly_Red_C;

}

