#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SnowmanWinterEvent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum SnowmanWinterEvent.ESnowmanDestructionType
// NumValues: 0x0007
enum class ESnowmanDestructionType : uint8
{
	None                                     = 0,
	SurvivorRunExit                          = 1,
	KillerAttackExit                         = 2,
	KillerCancelExit                         = 3,
	KillerAttackWhileControlled              = 4,
	KillerAttackWhileEmpty                   = 5,
	ESnowmanDestructionType_MAX              = 6,
};

// Enum SnowmanWinterEvent.ESnowmanState
// NumValues: 0x0005
enum class ESnowmanState : uint8
{
	Idle                                     = 0,
	BeingEntered                             = 1,
	Controlled                               = 2,
	Destroyed                                = 3,
	ESnowmanState_MAX                        = 4,
};

// ScriptStruct SnowmanWinterEvent.SnowmanSpawnData
// 0x0018 (0x0018 - 0x0000)
struct FSnowmanSpawnData final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnRotation;                                     // 0x000C(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSnowmanSpawnData) == 0x000004, "Wrong alignment on FSnowmanSpawnData");
static_assert(sizeof(FSnowmanSpawnData) == 0x000018, "Wrong size on FSnowmanSpawnData");
static_assert(offsetof(FSnowmanSpawnData, SpawnLocation) == 0x000000, "Member 'FSnowmanSpawnData::SpawnLocation' has a wrong offset!");
static_assert(offsetof(FSnowmanSpawnData, SpawnRotation) == 0x00000C, "Member 'FSnowmanSpawnData::SpawnRotation' has a wrong offset!");

// ScriptStruct SnowmanWinterEvent.SnowmanSpawnLocationData
// 0x0028 (0x0028 - 0x0000)
struct FSnowmanSpawnLocationData final
{
public:
	struct FVector                                OriginLocation;                                    // 0x0000(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        NavmeshLocations;                                  // 0x0010(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x8];                                       // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSnowmanSpawnLocationData) == 0x000008, "Wrong alignment on FSnowmanSpawnLocationData");
static_assert(sizeof(FSnowmanSpawnLocationData) == 0x000028, "Wrong size on FSnowmanSpawnLocationData");
static_assert(offsetof(FSnowmanSpawnLocationData, OriginLocation) == 0x000000, "Member 'FSnowmanSpawnLocationData::OriginLocation' has a wrong offset!");
static_assert(offsetof(FSnowmanSpawnLocationData, NavmeshLocations) == 0x000010, "Member 'FSnowmanSpawnLocationData::NavmeshLocations' has a wrong offset!");

}

