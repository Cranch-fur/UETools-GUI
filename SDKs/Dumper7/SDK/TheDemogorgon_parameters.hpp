#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheDemogorgon

#include "Basic.hpp"

#include "TheDemogorgon_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TheDemogorgon.DemogorgonHuskAnimInstance.OnKillerSet
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonHuskAnimInstance_OnKillerSet final
{
public:
	class ASlasherPlayer*                         killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonHuskAnimInstance_OnKillerSet) == 0x000008, "Wrong alignment on DemogorgonHuskAnimInstance_OnKillerSet");
static_assert(sizeof(DemogorgonHuskAnimInstance_OnKillerSet) == 0x000008, "Wrong size on DemogorgonHuskAnimInstance_OnKillerSet");
static_assert(offsetof(DemogorgonHuskAnimInstance_OnKillerSet, killer) == 0x000000, "Member 'DemogorgonHuskAnimInstance_OnKillerSet::killer' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.Authority_OnDestroyChargePercentChanged
// 0x0010 (0x0010 - 0x0000)
struct DemogorgonPortal_Authority_OnDestroyChargePercentChanged final
{
public:
	class UChargeableComponent*                   chargeableComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         percentCompletionChange;                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         totalPercentComplete;                              // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_Authority_OnDestroyChargePercentChanged) == 0x000008, "Wrong alignment on DemogorgonPortal_Authority_OnDestroyChargePercentChanged");
static_assert(sizeof(DemogorgonPortal_Authority_OnDestroyChargePercentChanged) == 0x000010, "Wrong size on DemogorgonPortal_Authority_OnDestroyChargePercentChanged");
static_assert(offsetof(DemogorgonPortal_Authority_OnDestroyChargePercentChanged, chargeableComponent) == 0x000000, "Member 'DemogorgonPortal_Authority_OnDestroyChargePercentChanged::chargeableComponent' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_Authority_OnDestroyChargePercentChanged, percentCompletionChange) == 0x000008, "Member 'DemogorgonPortal_Authority_OnDestroyChargePercentChanged::percentCompletionChange' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_Authority_OnDestroyChargePercentChanged, totalPercentComplete) == 0x00000C, "Member 'DemogorgonPortal_Authority_OnDestroyChargePercentChanged::totalPercentComplete' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.Authority_OnTeleportChargePercentChanged
// 0x0010 (0x0010 - 0x0000)
struct DemogorgonPortal_Authority_OnTeleportChargePercentChanged final
{
public:
	class UChargeableComponent*                   chargeableComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         percentCompletionChange;                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         totalPercentComplete;                              // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_Authority_OnTeleportChargePercentChanged) == 0x000008, "Wrong alignment on DemogorgonPortal_Authority_OnTeleportChargePercentChanged");
static_assert(sizeof(DemogorgonPortal_Authority_OnTeleportChargePercentChanged) == 0x000010, "Wrong size on DemogorgonPortal_Authority_OnTeleportChargePercentChanged");
static_assert(offsetof(DemogorgonPortal_Authority_OnTeleportChargePercentChanged, chargeableComponent) == 0x000000, "Member 'DemogorgonPortal_Authority_OnTeleportChargePercentChanged::chargeableComponent' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_Authority_OnTeleportChargePercentChanged, percentCompletionChange) == 0x000008, "Member 'DemogorgonPortal_Authority_OnTeleportChargePercentChanged::percentCompletionChange' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_Authority_OnTeleportChargePercentChanged, totalPercentComplete) == 0x00000C, "Member 'DemogorgonPortal_Authority_OnTeleportChargePercentChanged::totalPercentComplete' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.OnBeginOverlapPortalArea
// 0x00B0 (0x00B0 - 0x0000)
struct DemogorgonPortal_OnBeginOverlapPortalArea final
{
public:
	class UPrimitiveComponent*                    overlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 otherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    otherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         otherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             sweepResult;                                       // 0x0020(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_OnBeginOverlapPortalArea) == 0x000008, "Wrong alignment on DemogorgonPortal_OnBeginOverlapPortalArea");
static_assert(sizeof(DemogorgonPortal_OnBeginOverlapPortalArea) == 0x0000B0, "Wrong size on DemogorgonPortal_OnBeginOverlapPortalArea");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, overlappedComponent) == 0x000000, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::overlappedComponent' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, otherActor) == 0x000008, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::otherActor' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, otherComp) == 0x000010, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::otherComp' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, otherBodyIndex) == 0x000018, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::otherBodyIndex' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, bFromSweep) == 0x00001C, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::bFromSweep' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnBeginOverlapPortalArea, sweepResult) == 0x000020, "Member 'DemogorgonPortal_OnBeginOverlapPortalArea::sweepResult' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.OnEndOverlapPortalArea
// 0x0020 (0x0020 - 0x0000)
struct DemogorgonPortal_OnEndOverlapPortalArea final
{
public:
	class UPrimitiveComponent*                    overlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 otherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    otherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         otherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DemogorgonPortal_OnEndOverlapPortalArea) == 0x000008, "Wrong alignment on DemogorgonPortal_OnEndOverlapPortalArea");
static_assert(sizeof(DemogorgonPortal_OnEndOverlapPortalArea) == 0x000020, "Wrong size on DemogorgonPortal_OnEndOverlapPortalArea");
static_assert(offsetof(DemogorgonPortal_OnEndOverlapPortalArea, overlappedComponent) == 0x000000, "Member 'DemogorgonPortal_OnEndOverlapPortalArea::overlappedComponent' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnEndOverlapPortalArea, otherActor) == 0x000008, "Member 'DemogorgonPortal_OnEndOverlapPortalArea::otherActor' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnEndOverlapPortalArea, otherComp) == 0x000010, "Member 'DemogorgonPortal_OnEndOverlapPortalArea::otherComp' has a wrong offset!");
static_assert(offsetof(DemogorgonPortal_OnEndOverlapPortalArea, otherBodyIndex) == 0x000018, "Member 'DemogorgonPortal_OnEndOverlapPortalArea::otherBodyIndex' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.OnPortalDestroyed
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortal_OnPortalDestroyed final
{
public:
	class ADBDPlayer*                             player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_OnPortalDestroyed) == 0x000008, "Wrong alignment on DemogorgonPortal_OnPortalDestroyed");
static_assert(sizeof(DemogorgonPortal_OnPortalDestroyed) == 0x000008, "Wrong size on DemogorgonPortal_OnPortalDestroyed");
static_assert(offsetof(DemogorgonPortal_OnPortalDestroyed, player) == 0x000000, "Member 'DemogorgonPortal_OnPortalDestroyed::player' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.OnPortalStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPortal_OnPortalStateChanged final
{
public:
	EDemogorgonPortalState                        state;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_OnPortalStateChanged) == 0x000001, "Wrong alignment on DemogorgonPortal_OnPortalStateChanged");
static_assert(sizeof(DemogorgonPortal_OnPortalStateChanged) == 0x000001, "Wrong size on DemogorgonPortal_OnPortalStateChanged");
static_assert(offsetof(DemogorgonPortal_OnPortalStateChanged, state) == 0x000000, "Member 'DemogorgonPortal_OnPortalStateChanged::state' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.OnTeleportAbilityCooldownChangedVFX
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX final
{
public:
	bool                                          isOnCooldown;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX) == 0x000001, "Wrong alignment on DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX");
static_assert(sizeof(DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX) == 0x000001, "Wrong size on DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX");
static_assert(offsetof(DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX, isOnCooldown) == 0x000000, "Member 'DemogorgonPortal_OnTeleportAbilityCooldownChangedVFX::isOnCooldown' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.PlaySoundFromPortal
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortal_PlaySoundFromPortal final
{
public:
	class UAkAudioEvent*                          soundEvent;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_PlaySoundFromPortal) == 0x000008, "Wrong alignment on DemogorgonPortal_PlaySoundFromPortal");
static_assert(sizeof(DemogorgonPortal_PlaySoundFromPortal) == 0x000008, "Wrong size on DemogorgonPortal_PlaySoundFromPortal");
static_assert(offsetof(DemogorgonPortal_PlaySoundFromPortal, soundEvent) == 0x000000, "Member 'DemogorgonPortal_PlaySoundFromPortal::soundEvent' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortal.IsTargeted
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPortal_IsTargeted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortal_IsTargeted) == 0x000001, "Wrong alignment on DemogorgonPortal_IsTargeted");
static_assert(sizeof(DemogorgonPortal_IsTargeted) == 0x000001, "Wrong size on DemogorgonPortal_IsTargeted");
static_assert(offsetof(DemogorgonPortal_IsTargeted, ReturnValue) == 0x000000, "Member 'DemogorgonPortal_IsTargeted::ReturnValue' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalPlacerStateComponent.InitializeTunableValues
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortalPlacerStateComponent_InitializeTunableValues final
{
public:
	class ASlasherPlayer*                         killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalPlacerStateComponent_InitializeTunableValues) == 0x000008, "Wrong alignment on DemogorgonPortalPlacerStateComponent_InitializeTunableValues");
static_assert(sizeof(DemogorgonPortalPlacerStateComponent_InitializeTunableValues) == 0x000008, "Wrong size on DemogorgonPortalPlacerStateComponent_InitializeTunableValues");
static_assert(offsetof(DemogorgonPortalPlacerStateComponent_InitializeTunableValues, killer) == 0x000000, "Member 'DemogorgonPortalPlacerStateComponent_InitializeTunableValues::killer' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalPlacerStateComponent.GetRemainingPortalCount
// 0x0004 (0x0004 - 0x0000)
struct DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount) == 0x000004, "Wrong alignment on DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount");
static_assert(sizeof(DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount) == 0x000004, "Wrong size on DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount");
static_assert(offsetof(DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount, ReturnValue) == 0x000000, "Member 'DemogorgonPortalPlacerStateComponent_GetRemainingPortalCount::ReturnValue' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalPlacerStateComponent.GetTeleportDuration
// 0x0004 (0x0004 - 0x0000)
struct DemogorgonPortalPlacerStateComponent_GetTeleportDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalPlacerStateComponent_GetTeleportDuration) == 0x000004, "Wrong alignment on DemogorgonPortalPlacerStateComponent_GetTeleportDuration");
static_assert(sizeof(DemogorgonPortalPlacerStateComponent_GetTeleportDuration) == 0x000004, "Wrong size on DemogorgonPortalPlacerStateComponent_GetTeleportDuration");
static_assert(offsetof(DemogorgonPortalPlacerStateComponent_GetTeleportDuration, ReturnValue) == 0x000000, "Member 'DemogorgonPortalPlacerStateComponent_GetTeleportDuration::ReturnValue' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalPlacerStateComponent.IsUsePortalCooldownDone
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone) == 0x000001, "Wrong alignment on DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone");
static_assert(sizeof(DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone) == 0x000001, "Wrong size on DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone");
static_assert(offsetof(DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone, ReturnValue) == 0x000000, "Member 'DemogorgonPortalPlacerStateComponent_IsUsePortalCooldownDone::ReturnValue' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalRadiusDetectorComponent.Authority_CallOnPortalEffectsApplied
// 0x0014 (0x0014 - 0x0000)
struct DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied final
{
public:
	TDelegate<void()>                             callback;                                          // 0x0000(0x0014)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied) == 0x000004, "Wrong alignment on DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied");
static_assert(sizeof(DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied) == 0x000014, "Wrong size on DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied");
static_assert(offsetof(DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied, callback) == 0x000000, "Member 'DemogorgonPortalRadiusDetectorComponent_Authority_CallOnPortalEffectsApplied::callback' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalTargetingComponent.GetTargetedPortal
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortalTargetingComponent_GetTargetedPortal final
{
public:
	class ADemogorgonPortal*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalTargetingComponent_GetTargetedPortal) == 0x000008, "Wrong alignment on DemogorgonPortalTargetingComponent_GetTargetedPortal");
static_assert(sizeof(DemogorgonPortalTargetingComponent_GetTargetedPortal) == 0x000008, "Wrong size on DemogorgonPortalTargetingComponent_GetTargetedPortal");
static_assert(offsetof(DemogorgonPortalTargetingComponent_GetTargetedPortal, ReturnValue) == 0x000000, "Member 'DemogorgonPortalTargetingComponent_GetTargetedPortal::ReturnValue' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalTargetingComponent.Multicast_SetTargetedPortal
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal final
{
public:
	class ADemogorgonPortal*                      targetedPortal;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal) == 0x000008, "Wrong alignment on DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal");
static_assert(sizeof(DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal) == 0x000008, "Wrong size on DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal");
static_assert(offsetof(DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal, targetedPortal) == 0x000000, "Member 'DemogorgonPortalTargetingComponent_Multicast_SetTargetedPortal::targetedPortal' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalTargetingComponent.Server_SetTargetedPortal
// 0x0008 (0x0008 - 0x0000)
struct DemogorgonPortalTargetingComponent_Server_SetTargetedPortal final
{
public:
	class ADemogorgonPortal*                      targetedPortal;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalTargetingComponent_Server_SetTargetedPortal) == 0x000008, "Wrong alignment on DemogorgonPortalTargetingComponent_Server_SetTargetedPortal");
static_assert(sizeof(DemogorgonPortalTargetingComponent_Server_SetTargetedPortal) == 0x000008, "Wrong size on DemogorgonPortalTargetingComponent_Server_SetTargetedPortal");
static_assert(offsetof(DemogorgonPortalTargetingComponent_Server_SetTargetedPortal, targetedPortal) == 0x000000, "Member 'DemogorgonPortalTargetingComponent_Server_SetTargetedPortal::targetedPortal' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPortalTargetingComponent.SetIsPorting
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPortalTargetingComponent_SetIsPorting final
{
public:
	bool                                          isPorting;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPortalTargetingComponent_SetIsPorting) == 0x000001, "Wrong alignment on DemogorgonPortalTargetingComponent_SetIsPorting");
static_assert(sizeof(DemogorgonPortalTargetingComponent_SetIsPorting) == 0x000001, "Wrong size on DemogorgonPortalTargetingComponent_SetIsPorting");
static_assert(offsetof(DemogorgonPortalTargetingComponent_SetIsPorting, isPorting) == 0x000000, "Member 'DemogorgonPortalTargetingComponent_SetIsPorting::isPorting' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPounceInteraction.OnChargedAttackReadyChanged
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPounceInteraction_OnChargedAttackReadyChanged final
{
public:
	bool                                          ready;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPounceInteraction_OnChargedAttackReadyChanged) == 0x000001, "Wrong alignment on DemogorgonPounceInteraction_OnChargedAttackReadyChanged");
static_assert(sizeof(DemogorgonPounceInteraction_OnChargedAttackReadyChanged) == 0x000001, "Wrong size on DemogorgonPounceInteraction_OnChargedAttackReadyChanged");
static_assert(offsetof(DemogorgonPounceInteraction_OnChargedAttackReadyChanged, ready) == 0x000000, "Member 'DemogorgonPounceInteraction_OnChargedAttackReadyChanged::ready' has a wrong offset!");

// Function TheDemogorgon.DemogorgonPounceInteraction.TriggerHuntingAudioEvent
// 0x0001 (0x0001 - 0x0000)
struct DemogorgonPounceInteraction_TriggerHuntingAudioEvent final
{
public:
	bool                                          isHunting;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DemogorgonPounceInteraction_TriggerHuntingAudioEvent) == 0x000001, "Wrong alignment on DemogorgonPounceInteraction_TriggerHuntingAudioEvent");
static_assert(sizeof(DemogorgonPounceInteraction_TriggerHuntingAudioEvent) == 0x000001, "Wrong size on DemogorgonPounceInteraction_TriggerHuntingAudioEvent");
static_assert(offsetof(DemogorgonPounceInteraction_TriggerHuntingAudioEvent, isHunting) == 0x000000, "Member 'DemogorgonPounceInteraction_TriggerHuntingAudioEvent::isHunting' has a wrong offset!");

// Function TheDemogorgon.DestroyDemogorgonPortalInteraction.Authority_OnChargeApplied
// 0x0018 (0x0018 - 0x0000)
struct DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied final
{
public:
	float                                         individualChargeAmount;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         totalChargeAmount;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 chargeInstigator;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          wasCoop;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         deltaTime;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied) == 0x000008, "Wrong alignment on DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied");
static_assert(sizeof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied) == 0x000018, "Wrong size on DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied");
static_assert(offsetof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied, individualChargeAmount) == 0x000000, "Member 'DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied::individualChargeAmount' has a wrong offset!");
static_assert(offsetof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied, totalChargeAmount) == 0x000004, "Member 'DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied::totalChargeAmount' has a wrong offset!");
static_assert(offsetof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied, chargeInstigator) == 0x000008, "Member 'DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied::chargeInstigator' has a wrong offset!");
static_assert(offsetof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied, wasCoop) == 0x000010, "Member 'DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied::wasCoop' has a wrong offset!");
static_assert(offsetof(DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied, deltaTime) == 0x000014, "Member 'DestroyDemogorgonPortalInteraction_Authority_OnChargeApplied::deltaTime' has a wrong offset!");

// Function TheDemogorgon.ElevensSodaAddon.Multicast_HighlightGenerator
// 0x0008 (0x0008 - 0x0000)
struct ElevensSodaAddon_Multicast_HighlightGenerator final
{
public:
	const class AGenerator*                       generator;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElevensSodaAddon_Multicast_HighlightGenerator) == 0x000008, "Wrong alignment on ElevensSodaAddon_Multicast_HighlightGenerator");
static_assert(sizeof(ElevensSodaAddon_Multicast_HighlightGenerator) == 0x000008, "Wrong size on ElevensSodaAddon_Multicast_HighlightGenerator");
static_assert(offsetof(ElevensSodaAddon_Multicast_HighlightGenerator, generator) == 0x000000, "Member 'ElevensSodaAddon_Multicast_HighlightGenerator::generator' has a wrong offset!");

// Function TheDemogorgon.ElevensSodaAddon.Multicast_UnhighlightGenerator
// 0x0008 (0x0008 - 0x0000)
struct ElevensSodaAddon_Multicast_UnhighlightGenerator final
{
public:
	const class AGenerator*                       generator;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElevensSodaAddon_Multicast_UnhighlightGenerator) == 0x000008, "Wrong alignment on ElevensSodaAddon_Multicast_UnhighlightGenerator");
static_assert(sizeof(ElevensSodaAddon_Multicast_UnhighlightGenerator) == 0x000008, "Wrong size on ElevensSodaAddon_Multicast_UnhighlightGenerator");
static_assert(offsetof(ElevensSodaAddon_Multicast_UnhighlightGenerator, generator) == 0x000000, "Member 'ElevensSodaAddon_Multicast_UnhighlightGenerator::generator' has a wrong offset!");

// Function TheDemogorgon.TeleportToDemogorgonPortalInteraction.OnLocallyObservedChanged
// 0x0001 (0x0001 - 0x0000)
struct TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged final
{
public:
	bool                                          isKillerLocallyObserved;                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged) == 0x000001, "Wrong alignment on TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged");
static_assert(sizeof(TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged) == 0x000001, "Wrong size on TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged");
static_assert(offsetof(TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged, isKillerLocallyObserved) == 0x000000, "Member 'TeleportToDemogorgonPortalInteraction_OnLocallyObservedChanged::isKillerLocallyObserved' has a wrong offset!");

// Function TheDemogorgon.TeleportToDemogorgonPortalInteraction.OnSlasherSet
// 0x0008 (0x0008 - 0x0000)
struct TeleportToDemogorgonPortalInteraction_OnSlasherSet final
{
public:
	class ASlasherPlayer*                         killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TeleportToDemogorgonPortalInteraction_OnSlasherSet) == 0x000008, "Wrong alignment on TeleportToDemogorgonPortalInteraction_OnSlasherSet");
static_assert(sizeof(TeleportToDemogorgonPortalInteraction_OnSlasherSet) == 0x000008, "Wrong size on TeleportToDemogorgonPortalInteraction_OnSlasherSet");
static_assert(offsetof(TeleportToDemogorgonPortalInteraction_OnSlasherSet, killer) == 0x000000, "Member 'TeleportToDemogorgonPortalInteraction_OnSlasherSet::killer' has a wrong offset!");

}

