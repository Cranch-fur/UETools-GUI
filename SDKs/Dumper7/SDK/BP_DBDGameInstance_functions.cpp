#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DBDGameInstance

#include "Basic.hpp"

#include "BP_DBDGameInstance_classes.hpp"
#include "BP_DBDGameInstance_parameters.hpp"


namespace SDK
{

// Function BP_DBDGameInstance.BP_DBDGameInstance_C.ExecuteUbergraph_BP_DBDGameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::ExecuteUbergraph_BP_DBDGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "ExecuteUbergraph_BP_DBDGameInstance");

	Params::BP_DBDGameInstance_C_ExecuteUbergraph_BP_DBDGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event F::PanoramaScreenshotCreated
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_F__PanoramaScreenshotCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event F::PanoramaScreenshotCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::PanoramaScreenshot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Panorama_Camera_Transform                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotation_Step                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quality_Level                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__PanoramaScreenshot(const struct FTransform& Panorama_Camera_Transform, float FOV, float Rotation_Step, int32 Quality_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::PanoramaScreenshot");

	Params::BP_DBDGameInstance_C_Event_C__PanoramaScreenshot Parms{};

	Parms.Panorama_Camera_Transform = std::move(Panorama_Camera_Transform);
	Parms.FOV = FOV;
	Parms.Rotation_Step = Rotation_Step;
	Parms.Quality_Level = Quality_Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::SilentSoftLoadAsset
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Object_Soft_Class                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__SilentSoftLoadAsset(TSoftClassPtr<class UClass> Object_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::SilentSoftLoadAsset");

	Params::BP_DBDGameInstance_C_Event_C__SilentSoftLoadAsset Parms{};

	Parms.Object_Soft_Class = Object_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::ClearConsole
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__ClearConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::ClearConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::Help Implemintation
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__Help_Implemintation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::Help Implemintation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::SoftConstructWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Widget_Class                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__SoftConstructWidget(TSoftClassPtr<class UClass> Soft_Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::SoftConstructWidget");

	Params::BP_DBDGameInstance_C_Event_C__SoftConstructWidget Parms{};

	Parms.Soft_Widget_Class = Soft_Widget_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::SoftLoadAsset
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Object_Soft_Class                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__SoftLoadAsset(TSoftClassPtr<class UClass> Object_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::SoftLoadAsset");

	Params::BP_DBDGameInstance_C_Event_C__SoftLoadAsset Parms{};

	Parms.Object_Soft_Class = Object_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::SoftSummonPosses
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Actor_Soft_Class                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__SoftSummonPosses(TSoftClassPtr<class UClass> Actor_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::SoftSummonPosses");

	Params::BP_DBDGameInstance_C_Event_C__SoftSummonPosses Parms{};

	Parms.Actor_Soft_Class = Actor_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.DestroyGameplayModdingBlueprints
// (Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::DestroyGameplayModdingBlueprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "DestroyGameplayModdingBlueprints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.DestroyStartScreenModdingBlueprints
// (Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::DestroyStartScreenModdingBlueprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "DestroyStartScreenModdingBlueprints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.DestroyLobbyModdingBlueprints
// (Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::DestroyLobbyModdingBlueprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "DestroyLobbyModdingBlueprints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event T::Cheat Flying Controls
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_T__Cheat_Flying_Controls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event T::Cheat Flying Controls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event C::SoftSummon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Actor_Soft_Class                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_C__SoftSummon(TSoftClassPtr<class UClass> Actor_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event C::SoftSummon");

	Params::BP_DBDGameInstance_C_Event_C__SoftSummon Parms{};

	Parms.Actor_Soft_Class = Actor_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event ObtainGameAssets
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_ObtainGameAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event ObtainGameAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event LoadModdingBlueprints
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_LoadModdingBlueprints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event LoadModdingBlueprints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnGameStateObtained
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DBDGameState                          DBDGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnGameStateObtained(E_DBDGameState DBDGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnGameStateObtained");

	Params::BP_DBDGameInstance_C_OnGameStateObtained Parms{};

	Parms.DBDGameState = DBDGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Event Force On Level Changed
// (BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Event_Force_On_Level_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Event Force On Level Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLevelChanged
// (Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLevelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLevelChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_B8840FD4449AD6A97F069D9F15DE2734
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_B8840FD4449AD6A97F069D9F15DE2734(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_B8840FD4449AD6A97F069D9F15DE2734");

	Params::BP_DBDGameInstance_C_OnLoaded_B8840FD4449AD6A97F069D9F15DE2734 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_7F68F5B64B2631B744F30BBC66822B66
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_7F68F5B64B2631B744F30BBC66822B66(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_7F68F5B64B2631B744F30BBC66822B66");

	Params::BP_DBDGameInstance_C_OnLoaded_7F68F5B64B2631B744F30BBC66822B66 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_757DC81E4290CEE866D6B58F895F56F8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_757DC81E4290CEE866D6B58F895F56F8(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_757DC81E4290CEE866D6B58F895F56F8");

	Params::BP_DBDGameInstance_C_OnLoaded_757DC81E4290CEE866D6B58F895F56F8 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_85BF75A54ED7999AEC3B329CB21BBD90
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_85BF75A54ED7999AEC3B329CB21BBD90(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_85BF75A54ED7999AEC3B329CB21BBD90");

	Params::BP_DBDGameInstance_C_OnLoaded_85BF75A54ED7999AEC3B329CB21BBD90 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_FCBCE05946A17F6C0ABFB0968E584837
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_FCBCE05946A17F6C0ABFB0968E584837(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_FCBCE05946A17F6C0ABFB0968E584837");

	Params::BP_DBDGameInstance_C_OnLoaded_FCBCE05946A17F6C0ABFB0968E584837 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_F6BE95784C77419348B622A227AD6132
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_F6BE95784C77419348B622A227AD6132(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_F6BE95784C77419348B622A227AD6132");

	Params::BP_DBDGameInstance_C_OnLoaded_F6BE95784C77419348B622A227AD6132 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.OnLoaded_1D0724A74B76FD1E1EEF599DD7F680DC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::OnLoaded_1D0724A74B76FD1E1EEF599DD7F680DC(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "OnLoaded_1D0724A74B76FD1E1EEF599DD7F680DC");

	Params::BP_DBDGameInstance_C_OnLoaded_1D0724A74B76FD1E1EEF599DD7F680DC Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.CommandTest
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::CommandTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "CommandTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.DebugMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Print_to_Screen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Print_to_Log                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::DebugMessage(const class FText& Message, bool Print_to_Screen, bool Print_to_Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "DebugMessage");

	Params::BP_DBDGameInstance_C_DebugMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.Print_to_Screen = Print_to_Screen;
	Parms.Print_to_Log = Print_to_Log;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.GetWasActorsLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Was_Actors_Loaded                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::GetWasActorsLoaded(bool* Was_Actors_Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "GetWasActorsLoaded");

	Params::BP_DBDGameInstance_C_GetWasActorsLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Was_Actors_Loaded != nullptr)
		*Was_Actors_Loaded = Parms.Was_Actors_Loaded;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_RunningPC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController**               Running_Player_Controller                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_RunningPC(class APlayerController** Running_Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_RunningPC");

	Params::BP_DBDGameInstance_C_Get_RunningPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Running_Player_Controller != nullptr)
		*Running_Player_Controller = Parms.Running_Player_Controller;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_IsWidgetExists
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_IsWidgetExists(class UClass* Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_IsWidgetExists");

	Params::BP_DBDGameInstance_C_Get_IsWidgetExists Parms{};

	Parms.Widget_Class = Widget_Class;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_IsProtectedWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUserWidget*                      User_Widget_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Protected_Widget                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_IsProtectedWidget(class UUserWidget* User_Widget_Reference, bool* Is_Protected_Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_IsProtectedWidget");

	Params::BP_DBDGameInstance_C_Get_IsProtectedWidget Parms{};

	Parms.User_Widget_Reference = User_Widget_Reference;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Protected_Widget != nullptr)
		*Is_Protected_Widget = Parms.Is_Protected_Widget;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_CharacterIsFlying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter*                       Character_Reference                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Flying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_CharacterIsFlying(class ACharacter* Character_Reference, bool* Is_Flying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_CharacterIsFlying");

	Params::BP_DBDGameInstance_C_Get_CharacterIsFlying Parms{};

	Parms.Character_Reference = Character_Reference;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Flying != nullptr)
		*Is_Flying = Parms.Is_Flying;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_ProperFullPath
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             Input_Path                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>*            Soft_Object_Reference                                  (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_ProperFullPath(TSoftClassPtr<class UClass> Input_Path, TSoftClassPtr<class UClass>* Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_ProperFullPath");

	Params::BP_DBDGameInstance_C_Get_ProperFullPath Parms{};

	Parms.Input_Path = Input_Path;

	UObject::ProcessEvent(Func, &Parms);

	if (Soft_Object_Reference != nullptr)
		*Soft_Object_Reference = Parms.Soft_Object_Reference;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_FormattedTextRenderActorText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText*                            Formatted_Output                                       (Parm, OutParm)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_FormattedTextRenderActorText(const class FText& Input, class FText* Formatted_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_FormattedTextRenderActorText");

	Params::BP_DBDGameInstance_C_Get_FormattedTextRenderActorText Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	if (Formatted_Output != nullptr)
		*Formatted_Output = std::move(Parms.Formatted_Output);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_SoftClassToSoftObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             Input_Path                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject**                         Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_SoftClassToSoftObject(TSoftClassPtr<class UClass> Input_Path, class UObject** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_SoftClassToSoftObject");

	Params::BP_DBDGameInstance_C_Get_SoftClassToSoftObject Parms{};

	Parms.Input_Path = Input_Path;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_CleanFoundActors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>&                  Found_Actors_Array                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>*                  Clean_Found_Actors_Array                               (Parm, OutParm)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_CleanFoundActors(TArray<class AActor*>& Found_Actors_Array, TArray<class AActor*>* Clean_Found_Actors_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_CleanFoundActors");

	Params::BP_DBDGameInstance_C_Get_CleanFoundActors Parms{};

	Parms.Found_Actors_Array = std::move(Found_Actors_Array);

	UObject::ProcessEvent(Func, &Parms);

	Found_Actors_Array = std::move(Parms.Found_Actors_Array);

	if (Clean_Found_Actors_Array != nullptr)
		*Clean_Found_Actors_Array = std::move(Parms.Clean_Found_Actors_Array);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_OptimalWaypointUpdateDelay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Found_Actors_Amount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Optimal_Delay                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_OptimalWaypointUpdateDelay(int32 Found_Actors_Amount, float* Optimal_Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_OptimalWaypointUpdateDelay");

	Params::BP_DBDGameInstance_C_Get_OptimalWaypointUpdateDelay Parms{};

	Parms.Found_Actors_Amount = Found_Actors_Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Optimal_Delay != nullptr)
		*Optimal_Delay = Parms.Optimal_Delay;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_AttachRuleToAttachementRule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_AttachRule                            E_AttachRule                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttachmentRule*                        E_AttachementRule                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_AttachRuleToAttachementRule(E_AttachRule E_AttachRule, EAttachmentRule* E_AttachementRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_AttachRuleToAttachementRule");

	Params::BP_DBDGameInstance_C_Get_AttachRuleToAttachementRule Parms{};

	Parms.E_AttachRule = E_AttachRule;

	UObject::ProcessEvent(Func, &Parms);

	if (E_AttachementRule != nullptr)
		*E_AttachementRule = Parms.E_AttachementRule;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_LevelStreamingManager
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_LevelStreamingManager_C**     Level_Streaming_Manager_Reference_0                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_LevelStreamingManager(class ABP_LevelStreamingManager_C** Level_Streaming_Manager_Reference_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_LevelStreamingManager");

	Params::BP_DBDGameInstance_C_Get_LevelStreamingManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Level_Streaming_Manager_Reference_0 != nullptr)
		*Level_Streaming_Manager_Reference_0 = Parms.Level_Streaming_Manager_Reference_0;
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Set_EnableInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_Input                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Actor_Reference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                Player_Controller_Reference                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Set_EnableInput(bool Enable_Input, class AActor* Actor_Reference, class APlayerController* Player_Controller_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Set_EnableInput");

	Params::BP_DBDGameInstance_C_Set_EnableInput Parms{};

	Parms.Enable_Input = Enable_Input;
	Parms.Actor_Reference = Actor_Reference;
	Parms.Player_Controller_Reference = Player_Controller_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ChangeSize
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Size                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ChangeSize(float New_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ChangeSize");

	Params::BP_DBDGameInstance_C_UETools_ChangeSize Parms{};

	Parms.New_Size = New_Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FOV
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_FOV                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FOV(float New_FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FOV");

	Params::BP_DBDGameInstance_C_UETools_FOV Parms{};

	Parms.New_FOV = New_FOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Ghost
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Ghost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Ghost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Fly
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Fly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Fly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Walk
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Walk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Walk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_God
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_God()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_God");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Slomo
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Time_Dilation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Slomo(float New_Time_Dilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Slomo");

	Params::BP_DBDGameInstance_C_UETools_Slomo Parms{};

	Parms.New_Time_Dilation = New_Time_Dilation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetName
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    New_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetName(const class FString& New_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetName");

	Params::BP_DBDGameInstance_C_UETools_SetName Parms{};

	Parms.New_Name = std::move(New_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_PlayersOnly
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_PlayersOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_PlayersOnly");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetGamePaused
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetGamePaused(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetGamePaused");

	Params::BP_DBDGameInstance_C_UETools_SetGamePaused Parms{};

	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Summon
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Summon(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Summon");

	Params::BP_DBDGameInstance_C_UETools_Summon Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftSummon
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Actor_Soft_Class                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftSummon(TSoftClassPtr<class UClass> Actor_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftSummon");

	Params::BP_DBDGameInstance_C_UETools_SoftSummon Parms{};

	Parms.Actor_Soft_Class = Actor_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyAll
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyAll(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyAll");

	Params::BP_DBDGameInstance_C_UETools_DestroyAll Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyAllContains
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    String_To_Search                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyAllContains(class UClass* Actor_Class, const class FString& String_To_Search)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyAllContains");

	Params::BP_DBDGameInstance_C_UETools_DestroyAllContains Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.String_To_Search = std::move(String_To_Search);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyActor");

	Params::BP_DBDGameInstance_C_UETools_DestroyActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_StreamLevelIn
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_StreamLevelIn(class FName Level_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_StreamLevelIn");

	Params::BP_DBDGameInstance_C_UETools_StreamLevelIn Parms{};

	Parms.Level_Name = Level_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_StreamLevelPrepare
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_StreamLevelPrepare(class FName Level_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_StreamLevelPrepare");

	Params::BP_DBDGameInstance_C_UETools_StreamLevelPrepare Parms{};

	Parms.Level_Name = Level_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_StreamLevelOut
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_StreamLevelOut(class FName Level_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_StreamLevelOut");

	Params::BP_DBDGameInstance_C_UETools_StreamLevelOut Parms{};

	Parms.Level_Name = Level_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_LoadLevelInstance
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Level_Location_X                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Level_Location_Y                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Level_Location_Z                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Level_Rotation_Roll                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Level_Rotation_Pitch                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Level_Rotation_Yaw                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_LoadLevelInstance(const class FString& Level_Name, float Level_Location_X, float Level_Location_Y, float Level_Location_Z, float Level_Rotation_Roll, float Level_Rotation_Pitch, float Level_Rotation_Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_LoadLevelInstance");

	Params::BP_DBDGameInstance_C_UETools_LoadLevelInstance Parms{};

	Parms.Level_Name = std::move(Level_Name);
	Parms.Level_Location_X = Level_Location_X;
	Parms.Level_Location_Y = Level_Location_Y;
	Parms.Level_Location_Z = Level_Location_Z;
	Parms.Level_Rotation_Roll = Level_Rotation_Roll;
	Parms.Level_Rotation_Pitch = Level_Rotation_Pitch;
	Parms.Level_Rotation_Yaw = Level_Rotation_Yaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleFreeCamera
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleFreeCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleFreeCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetFreeCameraSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Setting_Name                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetFreeCameraSettings(const class FString& Setting_Name, float New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetFreeCameraSettings");

	Params::BP_DBDGameInstance_C_UETools_SetFreeCameraSettings Parms{};

	Parms.Setting_Name = std::move(Setting_Name);
	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetFreeCameraSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Setting_Name                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetFreeCameraSettings(const class FString& Setting_Name, float New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetFreeCameraSettings");

	Params::BP_DBDGameInstance_C_UETools_GetFreeCameraSettings Parms{};

	Parms.Setting_Name = std::move(Setting_Name);
	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleSkylight
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SkyLightType                          Sky_Light_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleSkylight(E_SkyLightType Sky_Light_Type, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleSkylight");

	Params::BP_DBDGameInstance_C_UETools_ToggleSkylight Parms{};

	Parms.Sky_Light_Type = Sky_Light_Type;
	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleFlashlight
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_FlashLightType                        Flash_Light_Type                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleFlashlight(E_FlashLightType Flash_Light_Type, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleFlashlight");

	Params::BP_DBDGameInstance_C_UETools_ToggleFlashlight Parms{};

	Parms.Flash_Light_Type = Flash_Light_Type;
	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleActors(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleActors");

	Params::BP_DBDGameInstance_C_UETools_ToggleActors Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleWidgets
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleDebugStats
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleDebugStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleDebugStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleLevelsList
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sort_Levels_by_Streamed_In                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleLevelsList(bool Sort_Levels_by_Streamed_In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleLevelsList");

	Params::BP_DBDGameInstance_C_UETools_ToggleLevelsList Parms{};

	Parms.Sort_Levels_by_Streamed_In = Sort_Levels_by_Streamed_In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleSelfVisibility
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleSelfVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleSelfVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleBlockingVolumesVis
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleBlockingVolumesVis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleBlockingVolumesVis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleTriggerVolumesVis
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleTriggerVolumesVis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleTriggerVolumesVis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleActorsBoundsVis
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Only_Colliding_Components                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Include_From_Child_Components                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleActorsBoundsVis(class UClass* Actor_Class, bool Only_Colliding_Components, bool Include_From_Child_Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleActorsBoundsVis");

	Params::BP_DBDGameInstance_C_UETools_ToggleActorsBoundsVis Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Only_Colliding_Components = Only_Colliding_Components;
	Parms.Include_From_Child_Components = Include_From_Child_Components;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ToggleCheatFlyingControls
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ToggleCheatFlyingControls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ToggleCheatFlyingControls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_AddConsoleBinding
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_AddConsoleBinding(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_AddConsoleBinding");

	Params::BP_DBDGameInstance_C_UETools_AddConsoleBinding Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_RemoveConsoleBinding
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_RemoveConsoleBinding(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_RemoveConsoleBinding");

	Params::BP_DBDGameInstance_C_UETools_RemoveConsoleBinding Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Bind
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const class FString&                    Console_Command_Press                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Console_Command_Release                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Bind(const struct FKey& Key, const class FString& Console_Command_Press, const class FString& Console_Command_Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Bind");

	Params::BP_DBDGameInstance_C_UETools_Bind Parms{};

	Parms.Key = std::move(Key);
	Parms.Console_Command_Press = std::move(Console_Command_Press);
	Parms.Console_Command_Release = std::move(Console_Command_Release);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_BindToggle
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const class FString&                    Console_Command_Press                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Console_Command_Release                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_BindToggle(const struct FKey& Key, const class FString& Console_Command_Press, const class FString& Console_Command_Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_BindToggle");

	Params::BP_DBDGameInstance_C_UETools_BindToggle Parms{};

	Parms.Key = std::move(Key);
	Parms.Console_Command_Press = std::move(Console_Command_Press);
	Parms.Console_Command_Release = std::move(Console_Command_Release);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_UnBind
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_UnBind(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_UnBind");

	Params::BP_DBDGameInstance_C_UETools_UnBind Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_AspectRatio
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Aspect_Ratio                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_AspectRatio(float New_Aspect_Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_AspectRatio");

	Params::BP_DBDGameInstance_C_UETools_AspectRatio Parms{};

	Parms.New_Aspect_Ratio = New_Aspect_Ratio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_CharacterAction
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CharacterAction                       Character_Action                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Strength                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_CharacterAction(E_CharacterAction Character_Action, float Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_CharacterAction");

	Params::BP_DBDGameInstance_C_UETools_CharacterAction Parms{};

	Parms.Character_Action = Character_Action;
	Parms.Strength = Strength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetJumpSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Setting_Name                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetJumpSettings(const class FString& Setting_Name, float New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetJumpSettings");

	Params::BP_DBDGameInstance_C_UETools_SetJumpSettings Parms{};

	Parms.Setting_Name = std::move(Setting_Name);
	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetJumpSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetJumpSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetJumpSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ReturnToSpawn
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ReturnToSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ReturnToSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetMaxWalkSpeed
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Max_Walk_Speed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetMaxWalkSpeed(float New_Max_Walk_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetMaxWalkSpeed");

	Params::BP_DBDGameInstance_C_UETools_SetMaxWalkSpeed Parms{};

	Parms.New_Max_Walk_Speed = New_Max_Walk_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ResetMaxWalkSpeed
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ResetMaxWalkSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ResetMaxWalkSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetMaxAcceleration
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Max_Acceleration_Value                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetMaxAcceleration(float New_Max_Acceleration_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetMaxAcceleration");

	Params::BP_DBDGameInstance_C_UETools_SetMaxAcceleration Parms{};

	Parms.New_Max_Acceleration_Value = New_Max_Acceleration_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ResetMaxAcceleration
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ResetMaxAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ResetMaxAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetGravityScale
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Gravity_Scale                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetGravityScale(float New_Gravity_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetGravityScale");

	Params::BP_DBDGameInstance_C_UETools_SetGravityScale Parms{};

	Parms.New_Gravity_Scale = New_Gravity_Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ResetGravityScale
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ResetGravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ResetGravityScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SummonPossess
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SummonPossess(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SummonPossess");

	Params::BP_DBDGameInstance_C_UETools_SummonPossess Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftSummonPossess
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Actor_Soft_Class                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftSummonPossess(TSoftClassPtr<class UClass> Actor_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftSummonPossess");

	Params::BP_DBDGameInstance_C_UETools_SoftSummonPossess Parms{};

	Parms.Actor_Soft_Class = Actor_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetActorClass
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetActorClass(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetActorClass");

	Params::BP_DBDGameInstance_C_UETools_GetActorClass Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ViewActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ViewActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ViewActor");

	Params::BP_DBDGameInstance_C_UETools_ViewActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ControlActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ControlActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ControlActor");

	Params::BP_DBDGameInstance_C_UETools_ControlActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_PossessActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_PossessActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_PossessActor");

	Params::BP_DBDGameInstance_C_UETools_PossessActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ComeToMe
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ComeToMe(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ComeToMe");

	Params::BP_DBDGameInstance_C_UETools_ComeToMe Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ComeToMeActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ComeToMeActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ComeToMeActor");

	Params::BP_DBDGameInstance_C_UETools_ComeToMeActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftLoadAsset
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Asset_Soft_Class                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftLoadAsset(TSoftClassPtr<class UClass> Asset_Soft_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftLoadAsset");

	Params::BP_DBDGameInstance_C_UETools_SoftLoadAsset Parms{};

	Parms.Asset_Soft_Class = Asset_Soft_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructStaticMesh
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructStaticMesh(TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructStaticMesh");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructStaticMesh Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructSkeletalMesh
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructSkeletalMesh(TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructSkeletalMesh");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructSkeletalMesh Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructLevelSequence
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructLevelSequence(TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructLevelSequence");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructLevelSequence Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructAnimSequence
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Skeletal_Mesh_Component_Index                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Animation_Looping                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructAnimSequence(const class FString& Actor_Name, int32 Skeletal_Mesh_Component_Index, TSoftClassPtr<class UClass> Soft_Object_Reference, bool Animation_Looping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructAnimSequence");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructAnimSequence Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.Skeletal_Mesh_Component_Index = Skeletal_Mesh_Component_Index;
	Parms.Soft_Object_Reference = Soft_Object_Reference;
	Parms.Animation_Looping = Animation_Looping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetLevelSequenceActorMeta
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetLevelSequenceActorMeta(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetLevelSequenceActorMeta");

	Params::BP_DBDGameInstance_C_UETools_GetLevelSequenceActorMeta Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructSound2D
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructSound2D(TSoftClassPtr<class UClass> Soft_Object_Reference, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructSound2D");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructSound2D Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructSoundAtLocation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructSoundAtLocation(TSoftClassPtr<class UClass> Soft_Object_Reference, float X, float Y, float Z, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructSoundAtLocation");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructSoundAtLocation Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ConstructObject
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Object_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ConstructObject(class UClass* Object_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ConstructObject");

	Params::BP_DBDGameInstance_C_UETools_ConstructObject Parms{};

	Parms.Object_Class = Object_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructObject
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructObject(TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructObject");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructObject Parms{};

	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_TeleportTo
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_TeleportTo(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_TeleportTo");

	Params::BP_DBDGameInstance_C_UETools_TeleportTo Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_TeleportToActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_TeleportToActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_TeleportToActor");

	Params::BP_DBDGameInstance_C_UETools_TeleportToActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FindActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FindActors(class UClass* Actor_Class, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FindActors");

	Params::BP_DBDGameInstance_C_UETools_FindActors Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FindActorsContains
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    String_To_Search                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FindActorsContains(class UClass* Actor_Class, const class FString& String_To_Search)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FindActorsContains");

	Params::BP_DBDGameInstance_C_UETools_FindActorsContains Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.String_To_Search = std::move(String_To_Search);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FindActorsInDistance
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Maximum_Distance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FindActorsInDistance(class UClass* Actor_Class, float Maximum_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FindActorsInDistance");

	Params::BP_DBDGameInstance_C_UETools_FindActorsInDistance Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Maximum_Distance = Maximum_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FindActorsInDistanceContains
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Maximum_Distance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    String_To_Search                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FindActorsInDistanceContains(class UClass* Actor_Class, float Maximum_Distance, const class FString& String_To_Search)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FindActorsInDistanceContains");

	Params::BP_DBDGameInstance_C_UETools_FindActorsInDistanceContains Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Maximum_Distance = Maximum_Distance;
	Parms.String_To_Search = std::move(String_To_Search);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_FindHiddenActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_FindHiddenActors(class UClass* Actor_Class, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_FindHiddenActors");

	Params::BP_DBDGameInstance_C_UETools_FindHiddenActors Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListActors(class UClass* Actor_Class, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListActors");

	Params::BP_DBDGameInstance_C_UETools_ListActors Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListActorsContains
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    String_To_Search                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListActorsContains(class UClass* Actor_Class, const class FString& String_To_Search)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListActorsContains");

	Params::BP_DBDGameInstance_C_UETools_ListActorsContains Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.String_To_Search = std::move(String_To_Search);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListActorsInDistance
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Maximum_Distance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListActorsInDistance(class UClass* Actor_Class, float Maximum_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListActorsInDistance");

	Params::BP_DBDGameInstance_C_UETools_ListActorsInDistance Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Maximum_Distance = Maximum_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListActorsInDistanceContains
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Maximum_Distance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    String_To_Search                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListActorsInDistanceContains(class UClass* Actor_Class, float Maximum_Distance, const class FString& String_To_Search)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListActorsInDistanceContains");

	Params::BP_DBDGameInstance_C_UETools_ListActorsInDistanceContains Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Maximum_Distance = Maximum_Distance;
	Parms.String_To_Search = std::move(String_To_Search);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListHiddenActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListHiddenActors(class UClass* Actor_Class, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListHiddenActors");

	Params::BP_DBDGameInstance_C_UETools_ListHiddenActors Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ListWidgets
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ListWidgets(class UClass* Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ListWidgets");

	Params::BP_DBDGameInstance_C_UETools_ListWidgets Parms{};

	Parms.Widget_Class = Widget_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_CustomLight
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CustomLightType                       Custom_Light_Type                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cast_Shadows                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_CustomLight(E_CustomLightType Custom_Light_Type, float Intensity, float Radius, bool Cast_Shadows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_CustomLight");

	Params::BP_DBDGameInstance_C_UETools_CustomLight Parms{};

	Parms.Custom_Light_Type = Custom_Light_Type;
	Parms.Intensity = Intensity;
	Parms.Radius = Radius;
	Parms.Cast_Shadows = Cast_Shadows;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_WorldGridActors
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_WorldGridActors(class UClass* Actor_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_WorldGridActors");

	Params::BP_DBDGameInstance_C_UETools_WorldGridActors Parms{};

	Parms.Actor_Class = Actor_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_WorldGridActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_WorldGridActor(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_WorldGridActor");

	Params::BP_DBDGameInstance_C_UETools_WorldGridActor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ConstructWidget
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ConstructWidget(class UClass* Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ConstructWidget");

	Params::BP_DBDGameInstance_C_UETools_ConstructWidget Parms{};

	Parms.Widget_Class = Widget_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SoftConstructWidget
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Soft_Widget_Class                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SoftConstructWidget(TSoftClassPtr<class UClass> Soft_Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SoftConstructWidget");

	Params::BP_DBDGameInstance_C_UETools_SoftConstructWidget Parms{};

	Parms.Soft_Widget_Class = Soft_Widget_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetWidgetVis
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Widget_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESlateVisibility                        New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetWidgetVis(const class FString& Widget_Name, ESlateVisibility New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetWidgetVis");

	Params::BP_DBDGameInstance_C_UETools_SetWidgetVis Parms{};

	Parms.Widget_Name = std::move(Widget_Name);
	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetWidgetsVis
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetWidgetsVis(class UClass* Widget_Class, ESlateVisibility New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetWidgetsVis");

	Params::BP_DBDGameInstance_C_UETools_SetWidgetsVis Parms{};

	Parms.Widget_Class = Widget_Class;
	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyWidgets
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyWidgets(class UClass* Widget_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyWidgets");

	Params::BP_DBDGameInstance_C_UETools_DestroyWidgets Parms{};

	Parms.Widget_Class = Widget_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyWidget
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Widget_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyWidget(const class FString& Widget_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyWidget");

	Params::BP_DBDGameInstance_C_UETools_DestroyWidget Parms{};

	Parms.Widget_Name = std::move(Widget_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_Help
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_Help()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_Help");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetEngineMeta
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetEngineMeta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetEngineMeta");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ServerExec
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ServerExec(const class FString& Message, class FName Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ServerExec");

	Params::BP_DBDGameInstance_C_UETools_ServerExec Parms{};

	Parms.Message = std::move(Message);
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetActorLocation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sweep                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teleport                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetActorLocation(const class FString& Actor_Name, float X, float Y, float Z, bool Sweep, bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetActorLocation");

	Params::BP_DBDGameInstance_C_UETools_SetActorLocation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Sweep = Sweep;
	Parms.Teleport = Teleport;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetActorLocation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetActorLocation(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetActorLocation");

	Params::BP_DBDGameInstance_C_UETools_GetActorLocation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetActorRotation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Roll                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Teleport_Physics                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetActorRotation(const class FString& Actor_Name, float Roll, float Pitch, float Yaw, bool Teleport_Physics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetActorRotation");

	Params::BP_DBDGameInstance_C_UETools_SetActorRotation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.Roll = Roll;
	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.Teleport_Physics = Teleport_Physics;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetActorRotation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetActorRotation(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetActorRotation");

	Params::BP_DBDGameInstance_C_UETools_GetActorRotation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetActorScale
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetActorScale(const class FString& Actor_Name, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetActorScale");

	Params::BP_DBDGameInstance_C_UETools_SetActorScale Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetActorScale
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetActorScale(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetActorScale");

	Params::BP_DBDGameInstance_C_UETools_GetActorScale Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_AttachActorToActor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_To_Attach_Name                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Parent_Actor_Name                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_AttachRule                            Location_Rule                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AttachRule                            Rotation_Rule                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AttachRule                            Scale_Rule                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Weld_Simulated_Bodies                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_AttachActorToActor(const class FString& Actor_To_Attach_Name, const class FString& Parent_Actor_Name, E_AttachRule Location_Rule, E_AttachRule Rotation_Rule, E_AttachRule Scale_Rule, bool Weld_Simulated_Bodies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_AttachActorToActor");

	Params::BP_DBDGameInstance_C_UETools_AttachActorToActor Parms{};

	Parms.Actor_To_Attach_Name = std::move(Actor_To_Attach_Name);
	Parms.Parent_Actor_Name = std::move(Parent_Actor_Name);
	Parms.Location_Rule = Location_Rule;
	Parms.Rotation_Rule = Rotation_Rule;
	Parms.Scale_Rule = Scale_Rule;
	Parms.Weld_Simulated_Bodies = Weld_Simulated_Bodies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_AttachActorToActorSocket
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_To_Attach_Name                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Parent_Actor_Name                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Parent_Actor_Socket_Name                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AttachRule                            Location_Rule                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AttachRule                            Rotation_Rule                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AttachRule                            Scale_Rule                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Weld_Simulated_Bodies                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_AttachActorToActorSocket(const class FString& Actor_To_Attach_Name, const class FString& Parent_Actor_Name, class FName Parent_Actor_Socket_Name, E_AttachRule Location_Rule, E_AttachRule Rotation_Rule, E_AttachRule Scale_Rule, bool Weld_Simulated_Bodies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_AttachActorToActorSocket");

	Params::BP_DBDGameInstance_C_UETools_AttachActorToActorSocket Parms{};

	Parms.Actor_To_Attach_Name = std::move(Actor_To_Attach_Name);
	Parms.Parent_Actor_Name = std::move(Parent_Actor_Name);
	Parms.Parent_Actor_Socket_Name = Parent_Actor_Socket_Name;
	Parms.Location_Rule = Location_Rule;
	Parms.Rotation_Rule = Rotation_Rule;
	Parms.Scale_Rule = Scale_Rule;
	Parms.Weld_Simulated_Bodies = Weld_Simulated_Bodies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetActorLocationAndRotation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Roll                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sweep                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teleport                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetActorLocationAndRotation(const class FString& Actor_Name, float X, float Y, float Z, float Roll, float Pitch, float Yaw, bool Sweep, bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetActorLocationAndRotation");

	Params::BP_DBDGameInstance_C_UETools_SetActorLocationAndRotation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Roll = Roll;
	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.Sweep = Sweep;
	Parms.Teleport = Teleport;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetActorLocationAndRotation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetActorLocationAndRotation(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetActorLocationAndRotation");

	Params::BP_DBDGameInstance_C_UETools_GetActorLocationAndRotation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetTextRenderActorText
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FText&                      New_Text                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetTextRenderActorText(const class FString& Actor_Name, const class FText& New_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetTextRenderActorText");

	Params::BP_DBDGameInstance_C_UETools_SetTextRenderActorText Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Text = std::move(New_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetTextRenderActorHorizontalAlignment
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_HorizontalTextAlignment               New_Horizontal_Alignment                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetTextRenderActorHorizontalAlignment(const class FString& Actor_Name, E_HorizontalTextAlignment New_Horizontal_Alignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetTextRenderActorHorizontalAlignment");

	Params::BP_DBDGameInstance_C_UETools_SetTextRenderActorHorizontalAlignment Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Horizontal_Alignment = New_Horizontal_Alignment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetTextRenderActorVerticalAlignment
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_VerticalTextAlignment                 New_Vertical_Alignment                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetTextRenderActorVerticalAlignment(const class FString& Actor_Name, E_VerticalTextAlignment New_Vertical_Alignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetTextRenderActorVerticalAlignment");

	Params::BP_DBDGameInstance_C_UETools_SetTextRenderActorVerticalAlignment Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Vertical_Alignment = New_Vertical_Alignment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetTextRenderActorSize
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   New_Size                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetTextRenderActorSize(const class FString& Actor_Name, float New_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetTextRenderActorSize");

	Params::BP_DBDGameInstance_C_UETools_SetTextRenderActorSize Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Size = New_Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetTextRenderActorColor
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// uint8                                   R                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetTextRenderActorColor(const class FString& Actor_Name, uint8 R, uint8 G, uint8 B, uint8 A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetTextRenderActorColor");

	Params::BP_DBDGameInstance_C_UETools_SetTextRenderActorColor Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.R = R;
	Parms.G = G;
	Parms.B = B;
	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetTextRenderActorMeta
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetTextRenderActorMeta(const class FString& Actor_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetTextRenderActorMeta");

	Params::BP_DBDGameInstance_C_UETools_GetTextRenderActorMeta Parms{};

	Parms.Actor_Name = std::move(Actor_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ExecuteActorFunction
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Function_Name                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ExecuteActorFunction(const class FString& Actor_Name, const class FString& Function_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ExecuteActorFunction");

	Params::BP_DBDGameInstance_C_UETools_ExecuteActorFunction Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.Function_Name = std::move(Function_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ExecuteWidgetFunction
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Widget_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Function_Name                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ExecuteWidgetFunction(const class FString& Widget_Name, const class FString& Function_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ExecuteWidgetFunction");

	Params::BP_DBDGameInstance_C_UETools_ExecuteWidgetFunction Parms{};

	Parms.Widget_Name = std::move(Widget_Name);
	Parms.Function_Name = std::move(Function_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsVisibility
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsVisibility(class UClass* Actor_Class, bool New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsVisibility");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsVisibility Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorVisibility
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorVisibility(const class FString& Actor_Name, bool New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorVisibility");

	Params::BP_DBDGameInstance_C_UETools_ForceActorVisibility Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsCollision
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    New_Collision                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsCollision(class UClass* Actor_Class, bool New_Collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsCollision");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsCollision Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Collision = New_Collision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorCollision
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_Collision                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorCollision(const class FString& Actor_Name, bool New_Collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorCollision");

	Params::BP_DBDGameInstance_C_UETools_ForceActorCollision Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Collision = New_Collision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsMobility
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EComponentMobility                      New_Mobility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsMobility(class UClass* Actor_Class, EComponentMobility New_Mobility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsMobility");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsMobility Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Mobility = New_Mobility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorMobility
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EComponentMobility                      New_Mobility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorMobility(const class FString& Actor_Name, EComponentMobility New_Mobility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorMobility");

	Params::BP_DBDGameInstance_C_UETools_ForceActorMobility Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Mobility = New_Mobility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsCastShadows
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    New_Cast_Shadows                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsCastShadows(class UClass* Actor_Class, bool New_Cast_Shadows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsCastShadows");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsCastShadows Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Cast_Shadows = New_Cast_Shadows;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorCastShadows
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_Cast_Shadows                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorCastShadows(const class FString& Actor_Name, bool New_Cast_Shadows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorCastShadows");

	Params::BP_DBDGameInstance_C_UETools_ForceActorCastShadows Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Cast_Shadows = New_Cast_Shadows;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsTimeDilation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   New_Time_Dilation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsTimeDilation(class UClass* Actor_Class, float New_Time_Dilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsTimeDilation");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsTimeDilation Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Time_Dilation = New_Time_Dilation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorTimeDilation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   New_Time_Dilation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorTimeDilation(const class FString& Actor_Name, float New_Time_Dilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorTimeDilation");

	Params::BP_DBDGameInstance_C_UETools_ForceActorTimeDilation Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Time_Dilation = New_Time_Dilation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsDynamicMaterial
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsDynamicMaterial(class UClass* Actor_Class, TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsDynamicMaterial");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsDynamicMaterial Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorDynamicMaterial
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Soft_Object_Reference                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorDynamicMaterial(const class FString& Actor_Name, TSoftClassPtr<class UClass> Soft_Object_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorDynamicMaterial");

	Params::BP_DBDGameInstance_C_UETools_ForceActorDynamicMaterial Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.Soft_Object_Reference = Soft_Object_Reference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorsCanCharacterStepOn
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    New_Can_Character_Step_On                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorsCanCharacterStepOn(class UClass* Actor_Class, bool New_Can_Character_Step_On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorsCanCharacterStepOn");

	Params::BP_DBDGameInstance_C_UETools_ForceActorsCanCharacterStepOn Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Can_Character_Step_On = New_Can_Character_Step_On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceActorCanCharacterStepOn
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_Can_Character_Step_On                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceActorCanCharacterStepOn(const class FString& Actor_Name, bool New_Can_Character_Step_On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceActorCanCharacterStepOn");

	Params::BP_DBDGameInstance_C_UETools_ForceActorCanCharacterStepOn Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Can_Character_Step_On = New_Can_Character_Step_On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetEnableActorsAI
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    New_Enable_AI                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetEnableActorsAI(class UClass* Actor_Class, bool New_Enable_AI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetEnableActorsAI");

	Params::BP_DBDGameInstance_C_UETools_SetEnableActorsAI Parms{};

	Parms.Actor_Class = Actor_Class;
	Parms.New_Enable_AI = New_Enable_AI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetEnableActorAI
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Actor_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_Enable_AI                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetEnableActorAI(const class FString& Actor_Name, bool New_Enable_AI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetEnableActorAI");

	Params::BP_DBDGameInstance_C_UETools_SetEnableActorAI Parms{};

	Parms.Actor_Name = std::move(Actor_Name);
	Parms.New_Enable_AI = New_Enable_AI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetWorldSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WorldSettings                         E_WorldSettings                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetWorldSettings(E_WorldSettings E_WorldSettings, float New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetWorldSettings");

	Params::BP_DBDGameInstance_C_UETools_SetWorldSettings Parms{};

	Parms.E_WorldSettings = E_WorldSettings;
	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetWorldSettings
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetWorldSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetWorldSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetWorldOriginLocation
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetWorldOriginLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetWorldOriginLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_SetWorldOriginLocation
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_SetWorldOriginLocation(int32 X, int32 Y, int32 Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_SetWorldOriginLocation");

	Params::BP_DBDGameInstance_C_UETools_SetWorldOriginLocation Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceThirdPerson
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceThirdPerson()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceThirdPerson");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_PromoScreenshot
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QualityLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_PromoScreenshot(int32 QualityLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_PromoScreenshot");

	Params::BP_DBDGameInstance_C_UETools_PromoScreenshot Parms{};

	Parms.QualityLevel = QualityLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_PanoramaScreenshot
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotation_Step                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quality_Level                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_PanoramaScreenshot(float FOV, float Rotation_Step, int32 Quality_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_PanoramaScreenshot");

	Params::BP_DBDGameInstance_C_UETools_PanoramaScreenshot Parms{};

	Parms.FOV = FOV;
	Parms.Rotation_Step = Rotation_Step;
	Parms.Quality_Level = Quality_Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceEpicQuality
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceEpicQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceEpicQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceLowQuality
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceLowQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceLowQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForcePotatoQuality
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForcePotatoQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForcePotatoQuality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ForceUpscaling
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Screen_Percentage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Sharpening_Level                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ForceUpscaling(float Screen_Percentage, float Sharpening_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ForceUpscaling");

	Params::BP_DBDGameInstance_C_UETools_ForceUpscaling Parms{};

	Parms.Screen_Percentage = Screen_Percentage;
	Parms.Sharpening_Level = Sharpening_Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_GetAllRunningClasses
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorClassType                        Actor_Class_Type                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_GetAllRunningClasses(E_ActorClassType Actor_Class_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_GetAllRunningClasses");

	Params::BP_DBDGameInstance_C_UETools_GetAllRunningClasses Parms{};

	Parms.Actor_Class_Type = Actor_Class_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_DestroyAllLighting
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_DestroyAllLighting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_DestroyAllLighting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.UETools_ExportLevelsList
// (Exec, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ExportLevelsListMethod                Export_Levels_List_Method                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ULevelStreaming*>*         Streaming_Levels                                       (Parm, OutParm)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::UETools_ExportLevelsList(E_ExportLevelsListMethod Export_Levels_List_Method, TArray<class ULevelStreaming*>* Streaming_Levels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "UETools_ExportLevelsList");

	Params::BP_DBDGameInstance_C_UETools_ExportLevelsList Parms{};

	Parms.Export_Levels_List_Method = Export_Levels_List_Method;

	UObject::ProcessEvent(Func, &Parms);

	if (Streaming_Levels != nullptr)
		*Streaming_Levels = std::move(Parms.Streaming_Levels);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.cls
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::cls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "cls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.clear
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.help
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::help()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "help");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.fps_max
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::fps_max(float New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "fps_max");

	Params::BP_DBDGameInstance_C_fps_max Parms{};

	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DBDGameInstance.BP_DBDGameInstance_C.Get_FloatToBool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void BP_DBDGameInstance::UBP_DBDGameInstance_C::Get_FloatToBool(float Value, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DBDGameInstance_C", "Get_FloatToBool");

	Params::BP_DBDGameInstance_C_Get_FloatToBool Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}

}

