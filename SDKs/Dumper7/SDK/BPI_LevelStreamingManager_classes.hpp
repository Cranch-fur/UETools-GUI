#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LevelStreamingManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_LevelStreamingManager.BPI_LevelStreamingManager_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_LevelStreamingManager_C final
{
public:
	void Stream_Level_In(class FName Level_Name, bool Make_Visible_After_Load, bool Should_Block_on_Load);
	void Stream_Level_Out(class FName Level_Name, bool Should_Block_on_Unload);
	void Flush_Level_Streaming();
	void Load_Level_Instance(const class FString& Level_Name, const struct FVector& Location, const struct FRotator& Rotation, const class FString& Optional_Level_Name_Override);
	void Open_Level(class FName Level_Name, bool Absolute, const class FString& Options);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_LevelStreamingManager_C">();
	}
	static class IBPI_LevelStreamingManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_LevelStreamingManager_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_LevelStreamingManager_C) == 0x000001, "Wrong alignment on IBPI_LevelStreamingManager_C");
static_assert(sizeof(IBPI_LevelStreamingManager_C) == 0x000001, "Wrong size on IBPI_LevelStreamingManager_C");

}

