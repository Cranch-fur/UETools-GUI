#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK31

#include "Basic.hpp"

#include "TheK31_classes.hpp"
#include "TheK31_parameters.hpp"


namespace SDK
{

// Function TheK31.Addon_K31Power_18.Authority_OnLevelReadyToPlay
// (Final, Native, Private)

void UAddon_K31Power_18::Authority_OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_K31Power_18", "Authority_OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.Addon_K31Power_20.Authority_OnGameEventReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAddon_K31Power_20::Authority_OnGameEventReceived(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_K31Power_20", "Authority_OnGameEventReceived");

	Params::Addon_K31Power_20_Authority_OnGameEventReceived Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.Addon_K31Power_20.Authority_OnTerrorRadiusLifetimeTimerDone
// (Final, Native, Private)

void UAddon_K31Power_20::Authority_OnTerrorRadiusLifetimeTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_K31Power_20", "Authority_OnTerrorRadiusLifetimeTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.Addon_K31Power_20.OnRep_TargetDrone
// (Final, Native, Private)

void UAddon_K31Power_20::OnRep_TargetDrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Addon_K31Power_20", "OnRep_TargetDrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.DroneRestrictedPlacementAreaStrategy.OnDroneAcquiredChanged
// (Final, Native, Private)
// Parameters:
// const bool                              acquired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDroneRestrictedPlacementAreaStrategy::OnDroneAcquiredChanged(const bool acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroneRestrictedPlacementAreaStrategy", "OnDroneAcquiredChanged");

	Params::DroneRestrictedPlacementAreaStrategy_OnDroneAcquiredChanged Parms{};

	Parms.acquired = acquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.DroneRestrictedPlacementAreaStrategy.OnDroneEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          endPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDroneRestrictedPlacementAreaStrategy::OnDroneEndPlay(class AActor* actor, EEndPlayReason endPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroneRestrictedPlacementAreaStrategy", "OnDroneEndPlay");

	Params::DroneRestrictedPlacementAreaStrategy_OnDroneEndPlay Parms{};

	Parms.actor = actor;
	Parms.endPlayReason = endPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.InspectK31DroneInteraction.OnChargeCompletedChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    completed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            instigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UInspectK31DroneInteraction::OnChargeCompletedChanged(bool completed, const TArray<class AActor*>& instigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InspectK31DroneInteraction", "OnChargeCompletedChanged");

	Params::InspectK31DroneInteraction_OnChargeCompletedChanged Parms{};

	Parms.completed = completed;
	Parms.instigatorsForCompletion = std::move(instigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.InspectK31DroneInteraction.Server_SetIsPressingInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    isPressing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInspectK31DroneInteraction::Server_SetIsPressingInput(bool isPressing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InspectK31DroneInteraction", "Server_SetIsPressingInput");

	Params::InspectK31DroneInteraction_Server_SetIsPressingInput Parms{};

	Parms.isPressing = isPressing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.OnCustomizationAnimationMappingIDChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   animationMappingIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31AnimInstance::OnCustomizationAnimationMappingIDChanged(int32 animationMappingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "OnCustomizationAnimationMappingIDChanged");

	Params::K31AnimInstance_OnCustomizationAnimationMappingIDChanged Parms{};

	Parms.animationMappingIndex = animationMappingIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31AnimInstance.OnGameEventReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK31AnimInstance::OnGameEventReceived(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "OnGameEventReceived");

	Params::K31AnimInstance_OnGameEventReceived Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.ResetIsActivatingADrone
// (Final, Native, Protected, BlueprintCallable)

void UK31AnimInstance::ResetIsActivatingADrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "ResetIsActivatingADrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.ResetIsDeployingADrone
// (Final, Native, Protected, BlueprintCallable)

void UK31AnimInstance::ResetIsDeployingADrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "ResetIsDeployingADrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.ResetIsRecallingADrone
// (Final, Native, Protected, BlueprintCallable)

void UK31AnimInstance::ResetIsRecallingADrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "ResetIsRecallingADrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.ResetIsReceivingADronePassively
// (Final, Native, Protected, BlueprintCallable)

void UK31AnimInstance::ResetIsReceivingADronePassively()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "ResetIsReceivingADronePassively");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31AnimInstance.GetCustoAnimTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UK31AnimInstance::GetCustoAnimTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "GetCustoAnimTags");

	Params::K31AnimInstance_GetCustoAnimTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31AnimInstance.GetCustomizationMappingID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK31AnimInstance::GetCustomizationMappingID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31AnimInstance", "GetCustomizationMappingID");

	Params::K31AnimInstance_GetCustomizationMappingID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31ClawTrap.Cosmetic_OnBatteryChargeUpdated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   newCharge                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31ClawTrap::Cosmetic_OnBatteryChargeUpdated(float newCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "Cosmetic_OnBatteryChargeUpdated");

	Params::K31ClawTrap_Cosmetic_OnBatteryChargeUpdated Parms{};

	Parms.newCharge = newCharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31ClawTrap.Cosmetic_OnIsBroadcastingChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isBroadcasting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31ClawTrap::Cosmetic_OnIsBroadcastingChanged(bool isBroadcasting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "Cosmetic_OnIsBroadcastingChanged");

	Params::K31ClawTrap_Cosmetic_OnIsBroadcastingChanged Parms{};

	Parms.isBroadcasting = isBroadcasting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31ClawTrap.Cosmetic_OnTrapAdded
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK31ClawTrap::Cosmetic_OnTrapAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "Cosmetic_OnTrapAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK31.K31ClawTrap.Cosmetic_OnTrapRemoved
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    wasRemovedAutomatically                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31ClawTrap::Cosmetic_OnTrapRemoved(bool wasRemovedAutomatically)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "Cosmetic_OnTrapRemoved");

	Params::K31ClawTrap_Cosmetic_OnTrapRemoved Parms{};

	Parms.wasRemovedAutomatically = wasRemovedAutomatically;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31ClawTrap.Cosmetic_Spark
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK31ClawTrap::Cosmetic_Spark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "Cosmetic_Spark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK31.K31ClawTrap.OnAnimNotifyManuallyRemoveTrap
// (Final, Native, Public, BlueprintCallable)

void AK31ClawTrap::OnAnimNotifyManuallyRemoveTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31ClawTrap", "OnAnimNotifyManuallyRemoveTrap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31Drone.Cosmetic_OnIsHackableStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isHackable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31Drone::Cosmetic_OnIsHackableStateChanged(bool isHackable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Drone", "Cosmetic_OnIsHackableStateChanged");

	Params::K31Drone_Cosmetic_OnIsHackableStateChanged Parms{};

	Parms.isHackable = isHackable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31Drone.Cosmetic_OnLocallyObservedChanged
// (Event, Public, BlueprintEvent)

void AK31Drone::Cosmetic_OnLocallyObservedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Drone", "Cosmetic_OnLocallyObservedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK31.K31Drone.Cosmetic_OnRevertToScoutingCurrentChargeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   chargePercentage                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31Drone::Cosmetic_OnRevertToScoutingCurrentChargeChanged(float chargePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Drone", "Cosmetic_OnRevertToScoutingCurrentChargeChanged");

	Params::K31Drone_Cosmetic_OnRevertToScoutingCurrentChargeChanged Parms{};

	Parms.chargePercentage = chargePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31Drone.Native_OnLocallyObservedChanged
// (Final, Native, Private)

void AK31Drone::Native_OnLocallyObservedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Drone", "Native_OnLocallyObservedChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31Drone.OnAcquiredChanged
// (Final, Native, Private)
// Parameters:
// const bool                              acquired                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31Drone::OnAcquiredChanged(const bool acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Drone", "OnAcquiredChanged");

	Params::K31Drone_OnAcquiredChanged Parms{};

	Parms.acquired = acquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneActionProcessor.Client_ReceiveActionResponse
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FK31DroneActionResponse&   response                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UK31DroneActionProcessor::Client_ReceiveActionResponse(const struct FK31DroneActionResponse& response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneActionProcessor", "Client_ReceiveActionResponse");

	Params::K31DroneActionProcessor_Client_ReceiveActionResponse Parms{};

	Parms.response = std::move(response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneActionProcessor.Server_RequestAction
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const struct FK31DroneActionRequest&    request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UK31DroneActionProcessor::Server_RequestAction(const struct FK31DroneActionRequest& request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneActionProcessor", "Server_RequestAction");

	Params::K31DroneActionProcessor_Server_RequestAction Parms{};

	Parms.request = std::move(request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneActiveState.Authority_OnChargeDepleted
// (Final, Native, Private)

void UK31DroneActiveState::Authority_OnChargeDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneActiveState", "Authority_OnChargeDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneActiveState.GetRevertToScoutingCurrentCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31DroneActiveState::GetRevertToScoutingCurrentCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneActiveState", "GetRevertToScoutingCurrentCharge");

	Params::K31DroneActiveState_GetRevertToScoutingCurrentCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneActiveState.GetRevertToScoutingMaxCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31DroneActiveState::GetRevertToScoutingMaxCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneActiveState", "GetRevertToScoutingMaxCharge");

	Params::K31DroneActiveState_GetRevertToScoutingMaxCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneHackableAvoidanceSensor.Authority_OnKillerCollisionBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK31DroneHackableAvoidanceSensor::Authority_OnKillerCollisionBegin(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableAvoidanceSensor", "Authority_OnKillerCollisionBegin");

	Params::K31DroneHackableAvoidanceSensor_Authority_OnKillerCollisionBegin Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableAvoidanceSensor.Authority_OnKillerCollisionEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31DroneHackableAvoidanceSensor::Authority_OnKillerCollisionEnd(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableAvoidanceSensor", "Authority_OnKillerCollisionEnd");

	Params::K31DroneHackableAvoidanceSensor_Authority_OnKillerCollisionEnd Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableAvoidanceSensor.Authority_OnSurvivorCollisionBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UK31DroneHackableAvoidanceSensor::Authority_OnSurvivorCollisionBegin(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableAvoidanceSensor", "Authority_OnSurvivorCollisionBegin");

	Params::K31DroneHackableAvoidanceSensor_Authority_OnSurvivorCollisionBegin Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableAvoidanceSensor.Authority_OnSurvivorCollisionEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31DroneHackableAvoidanceSensor::Authority_OnSurvivorCollisionEnd(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableAvoidanceSensor", "Authority_OnSurvivorCollisionEnd");

	Params::K31DroneHackableAvoidanceSensor_Authority_OnSurvivorCollisionEnd Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableAvoidanceSensor.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              killerPrimitive                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              survivorPrimitive                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31DroneHackableAvoidanceSensor::Init(class UPrimitiveComponent* killerPrimitive, class UPrimitiveComponent* survivorPrimitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableAvoidanceSensor", "Init");

	Params::K31DroneHackableAvoidanceSensor_Init Parms{};

	Parms.killerPrimitive = killerPrimitive;
	Parms.survivorPrimitive = survivorPrimitive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableComponent.OnRep_IsHackable
// (Final, Native, Private)

void UK31DroneHackableComponent::OnRep_IsHackable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableComponent", "OnRep_IsHackable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneHackableComponent.IsHackable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK31DroneHackableComponent::IsHackable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneHackableComponent", "IsHackable");

	Params::K31DroneHackableComponent_IsHackable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneLaserController.OnLocallyObservedChanged
// (Final, Native, Private)

void UK31DroneLaserController::OnLocallyObservedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserController", "OnLocallyObservedChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneLaserScanActor.ActivateDroneLaserScan
// (Final, Native, Public, BlueprintCallable)

void AK31DroneLaserScanActor::ActivateDroneLaserScan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserScanActor", "ActivateDroneLaserScan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneLaserScanActor.DeactivateDroneLaserScan
// (Final, Native, Public, BlueprintCallable)

void AK31DroneLaserScanActor::DeactivateDroneLaserScan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserScanActor", "DeactivateDroneLaserScan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneLaserScanActor.InitDroneLaserScan
// (Final, Native, Public, BlueprintCallable)

void AK31DroneLaserScanActor::InitDroneLaserScan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserScanActor", "InitDroneLaserScan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneLaserScanActor.RequestStaticDepthCapturesUpdate
// (Final, Native, Public, BlueprintCallable)

void AK31DroneLaserScanActor::RequestStaticDepthCapturesUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserScanActor", "RequestStaticDepthCapturesUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneLaserScanActor.UpdateLaserScanMeshMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstance*                newLaserScanMeshMaterial                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31DroneLaserScanActor::UpdateLaserScanMeshMaterial(class UMaterialInstance* newLaserScanMeshMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneLaserScanActor", "UpdateLaserScanMeshMaterial");

	Params::K31DroneLaserScanActor_UpdateLaserScanMeshMaterial Parms{};

	Parms.newLaserScanMeshMaterial = newLaserScanMeshMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneMovementComponent.OnRep_DeployDatum
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FDroneDeployDatum&         oldDeployDatum                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK31DroneMovementComponent::OnRep_DeployDatum(const struct FDroneDeployDatum& oldDeployDatum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "OnRep_DeployDatum");

	Params::K31DroneMovementComponent_OnRep_DeployDatum Parms{};

	Parms.oldDeployDatum = std::move(oldDeployDatum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneMovementComponent.OnRep_ReplicatedMovement
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FDroneRepMovement&         oldRepMovement                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK31DroneMovementComponent::OnRep_ReplicatedMovement(const struct FDroneRepMovement& oldRepMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "OnRep_ReplicatedMovement");

	Params::K31DroneMovementComponent_OnRep_ReplicatedMovement Parms{};

	Parms.oldRepMovement = std::move(oldRepMovement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneMovementComponent.GetDistanceToTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31DroneMovementComponent::GetDistanceToTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "GetDistanceToTarget");

	Params::K31DroneMovementComponent_GetDistanceToTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneMovementComponent.GetMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EK31DroneMovementMode                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EK31DroneMovementMode UK31DroneMovementComponent::GetMovementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "GetMovementMode");

	Params::K31DroneMovementComponent_GetMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneMovementComponent.GetTargetFlightHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDroneFlyingHeight                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDroneFlyingHeight UK31DroneMovementComponent::GetTargetFlightHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "GetTargetFlightHeight");

	Params::K31DroneMovementComponent_GetTargetFlightHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneMovementComponent.HasReachedDeployLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK31DroneMovementComponent::HasReachedDeployLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "HasReachedDeployLocation");

	Params::K31DroneMovementComponent_HasReachedDeployLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneMovementComponent.IsMeshAttachedToCharacterForDeploy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UK31DroneMovementComponent::IsMeshAttachedToCharacterForDeploy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneMovementComponent", "IsMeshAttachedToCharacterForDeploy");

	Params::K31DroneMovementComponent_IsMeshAttachedToCharacterForDeploy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31DroneScoutDetectionComponent.OnLaserActive
// (Final, Native, Private)
// Parameters:
// class UActorComponent*                  component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    reset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31DroneScoutDetectionComponent::OnLaserActive(class UActorComponent* component, bool reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneScoutDetectionComponent", "OnLaserActive");

	Params::K31DroneScoutDetectionComponent_OnLaserActive Parms{};

	Parms.component = component;
	Parms.reset = reset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneScoutDetectionComponent.OnLaserDeactivate
// (Final, Native, Private)
// Parameters:
// class UActorComponent*                  component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31DroneScoutDetectionComponent::OnLaserDeactivate(class UActorComponent* component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneScoutDetectionComponent", "OnLaserDeactivate");

	Params::K31DroneScoutDetectionComponent_OnLaserDeactivate Parms{};

	Parms.component = component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneStateController.OnRep_AuthorityRepCurrentState
// (Final, Native, Private)

void UK31DroneStateController::OnRep_AuthorityRepCurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneStateController", "OnRep_AuthorityRepCurrentState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneStateController.OnRep_States
// (Final, Native, Private)

void UK31DroneStateController::OnRep_States()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneStateController", "OnRep_States");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31DroneStateController.GetCurrentStateID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EK31DroneStateID                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EK31DroneStateID UK31DroneStateController::GetCurrentStateID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31DroneStateController", "GetCurrentStateID");

	Params::K31DroneStateController_GetCurrentStateID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31MenuAnimInstance.OnCustomizationAnimationMappingIDChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   animationMappingIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31MenuAnimInstance::OnCustomizationAnimationMappingIDChanged(int32 animationMappingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31MenuAnimInstance", "OnCustomizationAnimationMappingIDChanged");

	Params::K31MenuAnimInstance_OnCustomizationAnimationMappingIDChanged Parms{};

	Parms.animationMappingIndex = animationMappingIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31MenuAnimInstance.GetCustoAnimTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UK31MenuAnimInstance::GetCustoAnimTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31MenuAnimInstance", "GetCustoAnimTags");

	Params::K31MenuAnimInstance_GetCustoAnimTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31MenuAnimInstance.GetCustomizationMappingID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK31MenuAnimInstance::GetCustomizationMappingID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31MenuAnimInstance", "GetCustomizationMappingID");

	Params::K31MenuAnimInstance_GetCustomizationMappingID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P01.GetHasteEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P01::GetHasteEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P01", "GetHasteEffectDurationAtLevel");

	Params::K31P01_GetHasteEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P01.GetHasteEffectMovementSpeedIncrease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P01::GetHasteEffectMovementSpeedIncrease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P01", "GetHasteEffectMovementSpeedIncrease");

	Params::K31P01_GetHasteEffectMovementSpeedIncrease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P02.BP_RevealAndMakeSurvivorScream
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivorPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31P02::BP_RevealAndMakeSurvivorScream(class ACamperPlayer* survivorPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P02", "BP_RevealAndMakeSurvivorScream");

	Params::K31P02_BP_RevealAndMakeSurvivorScream Parms{};

	Parms.survivorPlayer = survivorPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31P02.Multicast_RevealAndMakeSurvivorScream
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31P02::Multicast_RevealAndMakeSurvivorScream(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P02", "Multicast_RevealAndMakeSurvivorScream");

	Params::K31P02_Multicast_RevealAndMakeSurvivorScream Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31P02.GetActivePerkDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P02::GetActivePerkDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P02", "GetActivePerkDurationAtLevel");

	Params::K31P02_GetActivePerkDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P02.GetRevealAuraSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P02::GetRevealAuraSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P02", "GetRevealAuraSeconds");

	Params::K31P02_GetRevealAuraSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P02.GetScreamDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P02::GetScreamDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P02", "GetScreamDistance");

	Params::K31P02_GetScreamDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P03.GetHealPenaltyAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P03::GetHealPenaltyAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P03", "GetHealPenaltyAtLevel");

	Params::K31P03_GetHealPenaltyAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31P03.GetReduceHealingSpeedEffectSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK31P03::GetReduceHealingSpeedEffectSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31P03", "GetReduceHealingSpeedEffectSeconds");

	Params::K31P03_GetReduceHealingSpeedEffectSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31Power.OnRepPowerCooldownTimer
// (Final, Native, Private)

void AK31Power::OnRepPowerCooldownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Power", "OnRepPowerCooldownTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31Power.Authority_UpdateHasteBasedOnScannedSurvivors
// (Final, Native, Private, Const)

void AK31Power::Authority_UpdateHasteBasedOnScannedSurvivors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Power", "Authority_UpdateHasteBasedOnScannedSurvivors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31Power.OnRepPowerState
// (Final, Native, Private, Const)

void AK31Power::OnRepPowerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Power", "OnRepPowerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31PowerCosmeticHelper.Cosmetic_DoesRadarDetectAnySurvivorsUpdatedEvent
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    doesRadarDetectAnySurvivors                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31PowerCosmeticHelper::Cosmetic_DoesRadarDetectAnySurvivorsUpdatedEvent(bool doesRadarDetectAnySurvivors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31PowerCosmeticHelper", "Cosmetic_DoesRadarDetectAnySurvivorsUpdatedEvent");

	Params::K31PowerCosmeticHelper_Cosmetic_DoesRadarDetectAnySurvivorsUpdatedEvent Parms{};

	Parms.doesRadarDetectAnySurvivors = doesRadarDetectAnySurvivors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31PowerCosmeticHelper.Cosmetic_IsOnPowerCooldownUpdatedEvent
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isPowerOnCooldown                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31PowerCosmeticHelper::Cosmetic_IsOnPowerCooldownUpdatedEvent(bool isPowerOnCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31PowerCosmeticHelper", "Cosmetic_IsOnPowerCooldownUpdatedEvent");

	Params::K31PowerCosmeticHelper_Cosmetic_IsOnPowerCooldownUpdatedEvent Parms{};

	Parms.isPowerOnCooldown = isPowerOnCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31RadarAnimInstance.OnGameEventReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK31RadarAnimInstance::OnGameEventReceived(const struct FGameplayTag& gameplayTag, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31RadarAnimInstance", "OnGameEventReceived");

	Params::K31RadarAnimInstance_OnGameEventReceived Parms{};

	Parms.gameplayTag = std::move(gameplayTag);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31RadarAnimInstance.ResetIsActivatingADrone
// (Final, Native, Protected, BlueprintCallable)

void UK31RadarAnimInstance::ResetIsActivatingADrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31RadarAnimInstance", "ResetIsActivatingADrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31RadarAnimInstance.ResetIsRecallingADrone
// (Final, Native, Protected, BlueprintCallable)

void UK31RadarAnimInstance::ResetIsRecallingADrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31RadarAnimInstance", "ResetIsRecallingADrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31Scanner.GetEncodedPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FLinearColor>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FLinearColor> UK31Scanner::GetEncodedPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31Scanner", "GetEncodedPoints");

	Params::K31Scanner_GetEncodedPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.K31SurvivorClawTrapComponent.Authority_OnDamageStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      newDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31SurvivorClawTrapComponent::Authority_OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState newDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "Authority_OnDamageStateChanged");

	Params::K31SurvivorClawTrapComponent_Authority_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.newDamageState = newDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnCamperEscaped
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayTag&              gameEventType                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameEventData&            gameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UK31SurvivorClawTrapComponent::OnCamperEscaped(const struct FGameplayTag& gameEventType, const struct FGameEventData& gameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnCamperEscaped");

	Params::K31SurvivorClawTrapComponent_OnCamperEscaped Parms{};

	Parms.gameEventType = std::move(gameEventType);
	Parms.gameEventData = std::move(gameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnIntroCompleted
// (Final, Native, Private)

void UK31SurvivorClawTrapComponent::OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnRep_IsBroadcasting
// (Final, Native, Private)

void UK31SurvivorClawTrapComponent::OnRep_IsBroadcasting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnRep_IsBroadcasting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnRep_IsTrapped
// (Final, Native, Private)

void UK31SurvivorClawTrapComponent::OnRep_IsTrapped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnRep_IsTrapped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnRep_OriginatingPower
// (Final, Native, Private)
// Parameters:
// class AK31Power*                        oldPower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31SurvivorClawTrapComponent::OnRep_OriginatingPower(class AK31Power* oldPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnRep_OriginatingPower");

	Params::K31SurvivorClawTrapComponent_OnRep_OriginatingPower Parms{};

	Parms.oldPower = oldPower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorClawTrapComponent.OnRep_RemoveClawTrapInteraction
// (Final, Native, Private)

void UK31SurvivorClawTrapComponent::OnRep_RemoveClawTrapInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorClawTrapComponent", "OnRep_RemoveClawTrapInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_OnDetectedByDrone
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AK31Drone*                        drone                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isOnCooldown                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_OnDetectedByDrone(class AK31Drone* drone, bool isOnCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_OnDetectedByDrone");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_OnDetectedByDrone Parms{};

	Parms.drone = drone;
	Parms.isOnCooldown = isOnCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_OnIsBroadcasting
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isBroadcasting                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_OnIsBroadcasting(bool isBroadcasting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_OnIsBroadcasting");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_OnIsBroadcasting Parms{};

	Parms.isBroadcasting = isBroadcasting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_OnIsOverlappingActiveZoneChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isOverlappingActiveZone                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_OnIsOverlappingActiveZoneChanged(bool isOverlappingActiveZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_OnIsOverlappingActiveZoneChanged");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_OnIsOverlappingActiveZoneChanged Parms{};

	Parms.isOverlappingActiveZone = isOverlappingActiveZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_OnIsSurvivorDetectedAndVisibleOnScanner
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isSurvivorDetectedAndVisibleOnScanner                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_OnIsSurvivorDetectedAndVisibleOnScanner(bool isSurvivorDetectedAndVisibleOnScanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_OnIsSurvivorDetectedAndVisibleOnScanner");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_OnIsSurvivorDetectedAndVisibleOnScanner Parms{};

	Parms.isSurvivorDetectedAndVisibleOnScanner = isSurvivorDetectedAndVisibleOnScanner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_OnIsTrappedByClawTrap
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    isTrapped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_OnIsTrappedByClawTrap(bool isTrapped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_OnIsTrappedByClawTrap");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_OnIsTrappedByClawTrap Parms{};

	Parms.isTrapped = isTrapped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorCosmeticHelperActor.Cosmetic_UpdateLockOnProgress
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   currentProgressPercent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFullyLockedOn                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK31SurvivorCosmeticHelperActor::Cosmetic_UpdateLockOnProgress(float currentProgressPercent, bool isFullyLockedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorCosmeticHelperActor", "Cosmetic_UpdateLockOnProgress");

	Params::K31SurvivorCosmeticHelperActor_Cosmetic_UpdateLockOnProgress Parms{};

	Parms.currentProgressPercent = currentProgressPercent;
	Parms.isFullyLockedOn = isFullyLockedOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.K31SurvivorDetection.Authority_OnChargeCompleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    completed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            instigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UK31SurvivorDetection::Authority_OnChargeCompleted(bool completed, const TArray<class AActor*>& instigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorDetection", "Authority_OnChargeCompleted");

	Params::K31SurvivorDetection_Authority_OnChargeCompleted Parms{};

	Parms.completed = completed;
	Parms.instigatorsForCompletion = std::move(instigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorDetection.Authority_OnDamageStateChanged
// (Final, Native, Private)
// Parameters:
// ECamperDamageState                      oldDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECamperDamageState                      newDamageState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31SurvivorDetection::Authority_OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState newDamageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorDetection", "Authority_OnDamageStateChanged");

	Params::K31SurvivorDetection_Authority_OnDamageStateChanged Parms{};

	Parms.oldDamageState = oldDamageState;
	Parms.newDamageState = newDamageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorDetection.OnRep_ChargeableComponent
// (Final, Native, Private)

void UK31SurvivorDetection::OnRep_ChargeableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorDetection", "OnRep_ChargeableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorDetection.OnRep_IsFullyLockedOn
// (Final, Native, Private)

void UK31SurvivorDetection::OnRep_IsFullyLockedOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorDetection", "OnRep_IsFullyLockedOn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31SurvivorDetection.OnRep_OriginatingPower
// (Final, Native, Private)
// Parameters:
// class AK31Power*                        oldPower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31SurvivorDetection::OnRep_OriginatingPower(class AK31Power* oldPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31SurvivorDetection", "OnRep_OriginatingPower");

	Params::K31SurvivorDetection_OnRep_OriginatingPower Parms{};

	Parms.oldPower = oldPower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31WeakPointScoreEmitter.Authority_OnDechargeBegin
// (Final, Native, Private)
// Parameters:
// class UChargeableComponent*             chargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31WeakPointScoreEmitter::Authority_OnDechargeBegin(class UChargeableComponent* chargeableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31WeakPointScoreEmitter", "Authority_OnDechargeBegin");

	Params::K31WeakPointScoreEmitter_Authority_OnDechargeBegin Parms{};

	Parms.chargeableComponent = chargeableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31WeakPointScoreEmitter.Authority_OnDechargeEnd
// (Final, Native, Private)
// Parameters:
// class UChargeableComponent*             chargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK31WeakPointScoreEmitter::Authority_OnDechargeEnd(class UChargeableComponent* chargeableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31WeakPointScoreEmitter", "Authority_OnDechargeEnd");

	Params::K31WeakPointScoreEmitter_Authority_OnDechargeEnd Parms{};

	Parms.chargeableComponent = chargeableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.K31WeakPointScoreEmitter.Authority_OnLevelReadyToPlay
// (Final, Native, Private)

void UK31WeakPointScoreEmitter::Authority_OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K31WeakPointScoreEmitter", "Authority_OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S35P01.GetCooldownDurationSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US35P01::GetCooldownDurationSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P01", "GetCooldownDurationSeconds");

	Params::S35P01_GetCooldownDurationSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S35P01.GetFastVaultsTimeSecondsAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US35P01::GetFastVaultsTimeSecondsAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P01", "GetFastVaultsTimeSecondsAtLevel");

	Params::S35P01_GetFastVaultsTimeSecondsAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S35P02.GetHasteEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US35P02::GetHasteEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P02", "GetHasteEffectDurationAtLevel");

	Params::S35P02_GetHasteEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S35P03.OnRep_IsStatusEffectActiveOnOwningSurvivor
// (Final, Native, Private)

void US35P03::OnRep_IsStatusEffectActiveOnOwningSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P03", "OnRep_IsStatusEffectActiveOnOwningSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S35P03.GetCooldownDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US35P03::GetCooldownDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P03", "GetCooldownDurationAtLevel");

	Params::S35P03_GetCooldownDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S35P03.GetPerkRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US35P03::GetPerkRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P03", "GetPerkRange");

	Params::S35P03_GetPerkRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S35P03Effect.OnRep_GiveBuffToPlayer
// (Final, Native, Private)

void US35P03Effect::OnRep_GiveBuffToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S35P03Effect", "OnRep_GiveBuffToPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S36P01.Authority_OnIsRunningAndMovingChanged
// (Final, Native, Private)
// Parameters:
// const bool                              isRunningAndMoving                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US36P01::Authority_OnIsRunningAndMovingChanged(const bool isRunningAndMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P01", "Authority_OnIsRunningAndMovingChanged");

	Params::S36P01_Authority_OnIsRunningAndMovingChanged Parms{};

	Parms.isRunningAndMoving = isRunningAndMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S36P01.GetExhaustedEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P01::GetExhaustedEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P01", "GetExhaustedEffectDurationAtLevel");

	Params::S36P01_GetExhaustedEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P01.GetHasteEffectDurationSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P01::GetHasteEffectDurationSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P01", "GetHasteEffectDurationSeconds");

	Params::S36P01_GetHasteEffectDurationSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P01.GetHasteEffectMovementSpeedIncrease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P01::GetHasteEffectMovementSpeedIncrease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P01", "GetHasteEffectMovementSpeedIncrease");

	Params::S36P01_GetHasteEffectMovementSpeedIncrease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P02.OnRecoverAbilityButtonTriggeredCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    owningSurvivor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US36P02::OnRecoverAbilityButtonTriggeredCosmetic(class ACamperPlayer* owningSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P02", "OnRecoverAbilityButtonTriggeredCosmetic");

	Params::S36P02_OnRecoverAbilityButtonTriggeredCosmetic Parms{};

	Parms.owningSurvivor = owningSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.S36P02.GetBrokenStatusDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P02::GetBrokenStatusDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P02", "GetBrokenStatusDurationAtLevel");

	Params::S36P02_GetBrokenStatusDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P02Interaction.OnRecoverInteractionUsed_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void US36P02Interaction::OnRecoverInteractionUsed_Cosmetic(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P02Interaction", "OnRecoverInteractionUsed_Cosmetic");

	Params::S36P02Interaction_OnRecoverInteractionUsed_Cosmetic Parms{};

	Parms.survivor = survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK31.S36P03.OnRep_IsStatusEffectActiveOnOwningSurvivor
// (Final, Native, Private)

void US36P03::OnRep_IsStatusEffectActiveOnOwningSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P03", "OnRep_IsStatusEffectActiveOnOwningSurvivor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S36P03.GetCooldownDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P03::GetCooldownDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P03", "GetCooldownDurationAtLevel");

	Params::S36P03_GetCooldownDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P03.GetPerkRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float US36P03::GetPerkRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P03", "GetPerkRange");

	Params::S36P03_GetPerkRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.S36P03Effect.OnRep_GiveBuffToPlayer
// (Final, Native, Private)

void US36P03Effect::OnRep_GiveBuffToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P03Effect", "OnRep_GiveBuffToPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.S36P03Effect.ShouldGiveBuff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool US36P03Effect::ShouldGiveBuff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("S36P03Effect", "ShouldGiveBuff");

	Params::S36P03Effect_ShouldGiveBuff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK31.SurvivorHackDroneInteraction.Authority_OnMinigameEnd
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDirectionalMinigameResult              result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorHackDroneInteraction::Authority_OnMinigameEnd(class ACamperPlayer* survivor, EDirectionalMinigameResult result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorHackDroneInteraction", "Authority_OnMinigameEnd");

	Params::SurvivorHackDroneInteraction_Authority_OnMinigameEnd Parms{};

	Parms.survivor = survivor;
	Parms.result = result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK31.SurvivorRemoveClawTrapInteraction.Authority_OnMinigameEnd
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDirectionalMinigameResult              result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorRemoveClawTrapInteraction::Authority_OnMinigameEnd(class ACamperPlayer* survivor, EDirectionalMinigameResult result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorRemoveClawTrapInteraction", "Authority_OnMinigameEnd");

	Params::SurvivorRemoveClawTrapInteraction_Authority_OnMinigameEnd Parms{};

	Parms.survivor = survivor;
	Parms.result = result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

