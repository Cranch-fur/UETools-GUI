#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheHag

#include "Basic.hpp"

#include "DBDAnimation_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDInteraction_classes.hpp"


namespace SDK
{

// Class TheHag.HagAnimInstance
// 0x0000 (0x0600 - 0x0600)
class UHagAnimInstance final : public UKillerAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HagAnimInstance">();
	}
	static class UHagAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHagAnimInstance>();
	}
};
static_assert(alignof(UHagAnimInstance) == 0x000010, "Wrong alignment on UHagAnimInstance");
static_assert(sizeof(UHagAnimInstance) == 0x000600, "Wrong size on UHagAnimInstance");

// Class TheHag.HagDynamicAccessoryAnimInstance
// 0x0000 (0x02D0 - 0x02D0)
class UHagDynamicAccessoryAnimInstance final : public UDynamicAccessoryAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HagDynamicAccessoryAnimInstance">();
	}
	static class UHagDynamicAccessoryAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHagDynamicAccessoryAnimInstance>();
	}
};
static_assert(alignof(UHagDynamicAccessoryAnimInstance) == 0x000010, "Wrong alignment on UHagDynamicAccessoryAnimInstance");
static_assert(sizeof(UHagDynamicAccessoryAnimInstance) == 0x0002D0, "Wrong size on UHagDynamicAccessoryAnimInstance");

// Class TheHag.HagScoreComponent
// 0x00A8 (0x0160 - 0x00B8)
class UHagScoreComponent final : public UActorComponent
{
public:
	struct FDBDTunableRowHandle                   _trapAttackDuration;                               // 0x00B8(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x80];                                      // 0x00E0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnActorEndPlay(class AActor* actor, EEndPlayReason endPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HagScoreComponent">();
	}
	static class UHagScoreComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHagScoreComponent>();
	}
};
static_assert(alignof(UHagScoreComponent) == 0x000008, "Wrong alignment on UHagScoreComponent");
static_assert(sizeof(UHagScoreComponent) == 0x000160, "Wrong size on UHagScoreComponent");
static_assert(offsetof(UHagScoreComponent, _trapAttackDuration) == 0x0000B8, "Member 'UHagScoreComponent::_trapAttackDuration' has a wrong offset!");

// Class TheHag.PhantomTrap
// 0x0098 (0x03C0 - 0x0328)
class APhantomTrap final : public AInteractable
{
public:
	uint8                                         Pad_328[0x18];                                     // 0x0328(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UTerrorRadiusEmitterComponent*          _terrorRadiusEmitter;                              // 0x0340(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _camperOutlineDuration;                            // 0x0348(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _lineOfSightTraceMinInterval;                      // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _speedTolerance;                                   // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        _trapLocation;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                       _triggerZone;                                      // 0x0360(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _wipeAwayInteractionChargeable;                    // 0x0368(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWipeAwayPhantomTrapInteraction*        _wipeAwayInteraction;                              // 0x0370(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                            _wipeAwayInteractor;                               // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                    _wipeAwayInteractionZone;                          // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _wipeAwayTimeDuration;                             // 0x0388(0x0028)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnTrapDestroyed(class ACamperPlayer* playerDestroyingTrap);
	bool CanActivateTrap(class ACamperPlayer* camper, bool isInUse);
	void InitializeTerrorRadiusEmitter(class ASlasherPlayer* OwningSlasher);
	void Multicast_DestroyTrap(class ACamperPlayer* playerDestroyingTrap);
	void OnTrapActivated();
	void OnTrapReset();

	class USkeletalMeshComponent* GetMesh() const;
	bool IsTrapSet() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PhantomTrap">();
	}
	static class APhantomTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<APhantomTrap>();
	}
};
static_assert(alignof(APhantomTrap) == 0x000008, "Wrong alignment on APhantomTrap");
static_assert(sizeof(APhantomTrap) == 0x0003C0, "Wrong size on APhantomTrap");
static_assert(offsetof(APhantomTrap, _terrorRadiusEmitter) == 0x000340, "Member 'APhantomTrap::_terrorRadiusEmitter' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _camperOutlineDuration) == 0x000348, "Member 'APhantomTrap::_camperOutlineDuration' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _lineOfSightTraceMinInterval) == 0x00034C, "Member 'APhantomTrap::_lineOfSightTraceMinInterval' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _speedTolerance) == 0x000350, "Member 'APhantomTrap::_speedTolerance' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _trapLocation) == 0x000358, "Member 'APhantomTrap::_trapLocation' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _triggerZone) == 0x000360, "Member 'APhantomTrap::_triggerZone' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _wipeAwayInteractionChargeable) == 0x000368, "Member 'APhantomTrap::_wipeAwayInteractionChargeable' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _wipeAwayInteraction) == 0x000370, "Member 'APhantomTrap::_wipeAwayInteraction' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _wipeAwayInteractor) == 0x000378, "Member 'APhantomTrap::_wipeAwayInteractor' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _wipeAwayInteractionZone) == 0x000380, "Member 'APhantomTrap::_wipeAwayInteractionZone' has a wrong offset!");
static_assert(offsetof(APhantomTrap, _wipeAwayTimeDuration) == 0x000388, "Member 'APhantomTrap::_wipeAwayTimeDuration' has a wrong offset!");

// Class TheHag.TeleportToPhantomTrap
// 0x0060 (0x0680 - 0x0620)
class UTeleportToPhantomTrap final : public UInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _teleportMaxDistance;                              // 0x0618(0x0028)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _slowdownTimeAfterTeleport;                        // 0x0640(0x0028)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _hagSlowdownAfterTeleportEffectID;                 // 0x0668(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_674[0xC];                                      // 0x0674(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnTeleport(class ASlasherPlayer* slasher, class APhantomTrap* trap);
	void Cosmetic_OnInteractionFinished(class ADBDPlayer* slasher, bool hasInteractionStarted);
	void Cosmetic_OnTeleport(class ASlasherPlayer* slasher, class APhantomTrap* trap);

	class APhantomTrap* GetPhantomTrap() const;
	float GetTeleportMaxDistance(class ASlasherPlayer* slasher) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TeleportToPhantomTrap">();
	}
	static class UTeleportToPhantomTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeleportToPhantomTrap>();
	}
};
static_assert(alignof(UTeleportToPhantomTrap) == 0x000010, "Wrong alignment on UTeleportToPhantomTrap");
static_assert(sizeof(UTeleportToPhantomTrap) == 0x000680, "Wrong size on UTeleportToPhantomTrap");
static_assert(offsetof(UTeleportToPhantomTrap, _teleportMaxDistance) == 0x000618, "Member 'UTeleportToPhantomTrap::_teleportMaxDistance' has a wrong offset!");
static_assert(offsetof(UTeleportToPhantomTrap, _slowdownTimeAfterTeleport) == 0x000640, "Member 'UTeleportToPhantomTrap::_slowdownTimeAfterTeleport' has a wrong offset!");
static_assert(offsetof(UTeleportToPhantomTrap, _hagSlowdownAfterTeleportEffectID) == 0x000668, "Member 'UTeleportToPhantomTrap::_hagSlowdownAfterTeleportEffectID' has a wrong offset!");

// Class TheHag.WipeAwayPhantomTrapInteraction
// 0x0000 (0x0780 - 0x0780)
class UWipeAwayPhantomTrapInteraction final : public UBasicChargeableInteraction
{
public:
	void CancelInteraction(class ADBDPlayer* player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WipeAwayPhantomTrapInteraction">();
	}
	static class UWipeAwayPhantomTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWipeAwayPhantomTrapInteraction>();
	}
};
static_assert(alignof(UWipeAwayPhantomTrapInteraction) == 0x000010, "Wrong alignment on UWipeAwayPhantomTrapInteraction");
static_assert(sizeof(UWipeAwayPhantomTrapInteraction) == 0x000780, "Wrong size on UWipeAwayPhantomTrapInteraction");

}

