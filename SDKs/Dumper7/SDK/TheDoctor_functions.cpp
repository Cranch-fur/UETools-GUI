#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheDoctor

#include "Basic.hpp"

#include "TheDoctor_classes.hpp"
#include "TheDoctor_parameters.hpp"


namespace SDK
{

// Function TheDoctor.Alert.OnPerkActivate_Cosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UAlert::OnPerkActivate_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Alert", "OnPerkActivate_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.CartersSpark.Authority_StartShockAttackComboTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    shockedSurvivor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACartersSpark::Authority_StartShockAttackComboTimer(class ACamperPlayer* shockedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CartersSpark", "Authority_StartShockAttackComboTimer");

	Params::CartersSpark_Authority_StartShockAttackComboTimer Parms{};

	Parms.shockedSurvivor = shockedSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.CartersSpark.CancelSurvivorInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACartersSpark::CancelSurvivorInteraction(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CartersSpark", "CancelSurvivorInteraction");

	Params::CartersSpark_CancelSurvivorInteraction Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.CartersSpark.Cosmetic_OnShockTherapyZoneDetonated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             survivorsHitCount                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACartersSpark::Cosmetic_OnShockTherapyZoneDetonated(class ADBDPlayer* killer, const int32 survivorsHitCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CartersSpark", "Cosmetic_OnShockTherapyZoneDetonated");

	Params::CartersSpark_Cosmetic_OnShockTherapyZoneDetonated Parms{};

	Parms.killer = killer;
	Parms.survivorsHitCount = survivorsHitCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DisciplineEffect.Cosmetic_ActivateKillerRedStain
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    activate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDisciplineEffect::Cosmetic_ActivateKillerRedStain(bool activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "Cosmetic_ActivateKillerRedStain");

	Params::DisciplineEffect_Cosmetic_ActivateKillerRedStain Parms{};

	Parms.activate = activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DisciplineEffect.Cosmetic_ActivateSurvivorRedStain
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    activate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDisciplineEffect::Cosmetic_ActivateSurvivorRedStain(bool activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "Cosmetic_ActivateSurvivorRedStain");

	Params::DisciplineEffect_Cosmetic_ActivateSurvivorRedStain Parms{};

	Parms.activate = activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DisciplineEffect.Cosmetic_SpawnRedStains
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UDisciplineEffect::Cosmetic_SpawnRedStains()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "Cosmetic_SpawnRedStains");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.DisciplineEffect.Cosmetic_UpdateKillerRedStain
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDisciplineEffect::Cosmetic_UpdateKillerRedStain(bool visible, float deltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "Cosmetic_UpdateKillerRedStain");

	Params::DisciplineEffect_Cosmetic_UpdateKillerRedStain Parms{};

	Parms.visible = visible;
	Parms.deltaTime = deltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DisciplineEffect.Cosmetic_UpdateSurvivorRedStain
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDisciplineEffect::Cosmetic_UpdateSurvivorRedStain(bool visible, float deltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "Cosmetic_UpdateSurvivorRedStain");

	Params::DisciplineEffect_Cosmetic_UpdateSurvivorRedStain Parms{};

	Parms.visible = visible;
	Parms.deltaTime = deltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DisciplineEffect.SetRedStainInterpolating
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    isInterpolating                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDisciplineEffect::SetRedStainInterpolating(bool isInterpolating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DisciplineEffect", "SetRedStainInterpolating");

	Params::DisciplineEffect_SetRedStainInterpolating Parms{};

	Parms.isInterpolating = isInterpolating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.DoctorCheatComponent.DBD_AddMadness
// (Final, Exec, Native, Public)
// Parameters:
// float                                   madnessToAdd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    localPlayerId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDoctorCheatComponent::DBD_AddMadness(float madnessToAdd, const class FString& localPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorCheatComponent", "DBD_AddMadness");

	Params::DoctorCheatComponent_DBD_AddMadness Parms{};

	Parms.madnessToAdd = madnessToAdd;
	Parms.localPlayerId = std::move(localPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.DoctorPowerSubAnimInstance.OnShockTherapyAnimationAttackStart
// (Final, Native, Protected, BlueprintCallable)

void UDoctorPowerSubAnimInstance::OnShockTherapyAnimationAttackStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorPowerSubAnimInstance", "OnShockTherapyAnimationAttackStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.DoctorPowerSubAnimInstance.OnShockTherapyAnimationAttackStop
// (Final, Native, Protected, BlueprintCallable)

void UDoctorPowerSubAnimInstance::OnShockTherapyAnimationAttackStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorPowerSubAnimInstance", "OnShockTherapyAnimationAttackStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryDoctorApparitionSequenceStart
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTransform&                illusionaryDoctorTransform                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const float                             apparitionDuration                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnIllusionaryDoctorApparitionSequenceStart(const struct FTransform& illusionaryDoctorTransform, const float apparitionDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnIllusionaryDoctorApparitionSequenceStart");

	Params::DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart Parms{};

	Parms.illusionaryDoctorTransform = std::move(illusionaryDoctorTransform);
	Parms.apparitionDuration = apparitionDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryPalletActivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class APallet*                    pallet                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnIllusionaryPalletActivated(const class APallet* pallet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnIllusionaryPalletActivated");

	Params::DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated Parms{};

	Parms.pallet = pallet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryPalletDeactivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class APallet*                    pallet                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnIllusionaryPalletDeactivated(const class APallet* pallet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnIllusionaryPalletDeactivated");

	Params::DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated Parms{};

	Parms.pallet = pallet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnInsaneSkillCheck
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnInsaneSkillCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnInsaneSkillCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnMadnessChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   newTier                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    increased                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnMadnessChanged(int32 newTier, bool increased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnMadnessChanged");

	Params::DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged Parms{};

	Parms.newTier = newTier;
	Parms.increased = increased;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnMadnessIntermittentScream
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnMadnessIntermittentScream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnMadnessIntermittentScream");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnOwningSurvivorShocked
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ADoctorSurvivorCosmeticHelperActor::Cosmetic_OnOwningSurvivorShocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "Cosmetic_OnOwningSurvivorShocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayerSeeIllusionaryPalletGlitch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APallet*                          pallet                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADoctorSurvivorCosmeticHelperActor::CanPlayerSeeIllusionaryPalletGlitch(class APallet* pallet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "CanPlayerSeeIllusionaryPalletGlitch");

	Params::DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch Parms{};

	Parms.pallet = pallet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayOverwhelmingMadnessAnimation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADoctorSurvivorCosmeticHelperActor::CanPlayOverwhelmingMadnessAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "CanPlayOverwhelmingMadnessAnimation");

	Params::DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayOverwhelmingMadnessAudio
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADoctorSurvivorCosmeticHelperActor::CanPlayOverwhelmingMadnessAudio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "CanPlayOverwhelmingMadnessAudio");

	Params::DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayShockedAnimation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADoctorSurvivorCosmeticHelperActor::CanPlayShockedAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "CanPlayShockedAnimation");

	Params::DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.GetIllusionaryDoctor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AIllusionaryDoctor*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AIllusionaryDoctor* ADoctorSurvivorCosmeticHelperActor::GetIllusionaryDoctor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "GetIllusionaryDoctor");

	Params::DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.GetSurvivorMadnessEffect
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USurvivorMadnessEffect*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USurvivorMadnessEffect* ADoctorSurvivorCosmeticHelperActor::GetSurvivorMadnessEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "GetSurvivorMadnessEffect");

	Params::DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.IsSurvivorOperatingLocker
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADoctorSurvivorCosmeticHelperActor::IsSurvivorOperatingLocker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoctorSurvivorCosmeticHelperActor", "IsSurvivorOperatingLocker");

	Params::DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.IllusionaryDoctor.ActivateIllusion
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AIllusionaryDoctor::ActivateIllusion(const struct FTransform& transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryDoctor", "ActivateIllusion");

	Params::IllusionaryDoctor_ActivateIllusion Parms{};

	Parms.transform = std::move(transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryDoctor.DeactivateIllusion
// (Final, Native, Public, BlueprintCallable)

void AIllusionaryDoctor::DeactivateIllusion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryDoctor", "DeactivateIllusion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryDoctorEffect.Multicast_DebugDisplayInfo
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const float                             timeRemainingBeforeActivation                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    messageColor                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryDoctorEffect::Multicast_DebugDisplayInfo(const float timeRemainingBeforeActivation, const struct FColor& messageColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryDoctorEffect", "Multicast_DebugDisplayInfo");

	Params::IllusionaryDoctorEffect_Multicast_DebugDisplayInfo Parms{};

	Parms.timeRemainingBeforeActivation = timeRemainingBeforeActivation;
	Parms.messageColor = std::move(messageColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryDoctorEffect.Multicast_StartIllusionaryDoctorAppearSequence
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FTransform&                illusionaryDoctorTransform                             (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UIllusionaryDoctorEffect::Multicast_StartIllusionaryDoctorAppearSequence(const struct FTransform& illusionaryDoctorTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryDoctorEffect", "Multicast_StartIllusionaryDoctorAppearSequence");

	Params::IllusionaryDoctorEffect_Multicast_StartIllusionaryDoctorAppearSequence Parms{};

	Parms.illusionaryDoctorTransform = std::move(illusionaryDoctorTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletBaseAddon.Authority_OnIllusionaryPalletActorOverlapped
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UIllusionaryPalletBaseAddon::Authority_OnIllusionaryPalletActorOverlapped(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletBaseAddon", "Authority_OnIllusionaryPalletActorOverlapped");

	Params::IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletBaseAddon.Multicast_ActivateIllusionaryPallet
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APallet*                          pallet                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isPalletDown                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryPalletBaseAddon::Multicast_ActivateIllusionaryPallet(class APallet* pallet, bool isPalletDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletBaseAddon", "Multicast_ActivateIllusionaryPallet");

	Params::IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet Parms{};

	Parms.pallet = pallet;
	Parms.isPalletDown = isPalletDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletBaseAddon.Multicast_DeactivateIllusionaryPallet
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APallet*                          pallet                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       triggeringPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryPalletBaseAddon::Multicast_DeactivateIllusionaryPallet(class APallet* pallet, class ADBDPlayer* triggeringPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletBaseAddon", "Multicast_DeactivateIllusionaryPallet");

	Params::IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet Parms{};

	Parms.pallet = pallet;
	Parms.triggeringPlayer = triggeringPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletComponent.ActivateIllusionaryPallet
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              isPalletDown                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryPalletComponent::ActivateIllusionaryPallet(const bool isPalletDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "ActivateIllusionaryPallet");

	Params::IllusionaryPalletComponent_ActivateIllusionaryPallet Parms{};

	Parms.isPalletDown = isPalletDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletComponent.DeactivateIllusionaryPallet
// (Final, Native, Protected, BlueprintCallable)

void UIllusionaryPalletComponent::DeactivateIllusionaryPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "DeactivateIllusionaryPallet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IllusionaryPalletComponent.OnStartIllusionaryPalletActivation
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              isPalletDown                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryPalletComponent::OnStartIllusionaryPalletActivation(const bool isPalletDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "OnStartIllusionaryPalletActivation");

	Params::IllusionaryPalletComponent_OnStartIllusionaryPalletActivation Parms{};

	Parms.isPalletDown = isPalletDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.IllusionaryPalletComponent.OnStartIllusionaryPalletDeactivation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       triggeringPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIllusionaryPalletComponent::OnStartIllusionaryPalletDeactivation(class ADBDPlayer* triggeringPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "OnStartIllusionaryPalletDeactivation");

	Params::IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation Parms{};

	Parms.triggeringPlayer = triggeringPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.IllusionaryPalletComponent.CanLocallyObservedPlayerSeeIllusionaryPallet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UIllusionaryPalletComponent::CanLocallyObservedPlayerSeeIllusionaryPallet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "CanLocallyObservedPlayerSeeIllusionaryPallet");

	Params::IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.IllusionaryPalletComponent.GetGlitchEffectRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UIllusionaryPalletComponent::GetGlitchEffectRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IllusionaryPalletComponent", "GetGlitchEffectRange");

	Params::IllusionaryPalletComponent_GetGlitchEffectRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.IridescentQueenEffect.Authority_OnSurvivorOverlappedDischargeZone
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              overlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           otherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              otherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   otherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                sweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UIridescentQueenEffect::Authority_OnSurvivorOverlappedDischargeZone(class UPrimitiveComponent* overlappedComponent, class AActor* otherActor, class UPrimitiveComponent* otherComp, int32 otherBodyIndex, bool bFromSweep, const struct FHitResult& sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Authority_OnSurvivorOverlappedDischargeZone");

	Params::IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone Parms{};

	Parms.overlappedComponent = overlappedComponent;
	Parms.otherActor = otherActor;
	Parms.otherComp = otherComp;
	Parms.otherBodyIndex = otherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.sweepResult = std::move(sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IridescentQueenEffect.Cosmetic_OnDischargeOnSurvivor
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       survivorToShock                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIridescentQueenEffect::Cosmetic_OnDischargeOnSurvivor(class ADBDPlayer* survivorToShock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Cosmetic_OnDischargeOnSurvivor");

	Params::IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor Parms{};

	Parms.survivorToShock = survivorToShock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.IridescentQueenEffect.Cosmetic_OnDischargeZoneActivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UIridescentQueenEffect::Cosmetic_OnDischargeZoneActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Cosmetic_OnDischargeZoneActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.IridescentQueenEffect.Cosmetic_OnDischargeZoneDeactivated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UIridescentQueenEffect::Cosmetic_OnDischargeZoneDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Cosmetic_OnDischargeZoneDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.IridescentQueenEffect.Cosmetic_SpawnStaticFieldFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UIridescentQueenEffect::Cosmetic_SpawnStaticFieldFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Cosmetic_SpawnStaticFieldFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.IridescentQueenEffect.Cosmetic_UpdateStaticFieldFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UIridescentQueenEffect::Cosmetic_UpdateStaticFieldFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Cosmetic_UpdateStaticFieldFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.IridescentQueenEffect.Multicast_DischargeOnSurvivor
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ACamperPlayer*                    survivor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIridescentQueenEffect::Multicast_DischargeOnSurvivor(class ACamperPlayer* survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "Multicast_DischargeOnSurvivor");

	Params::IridescentQueenEffect_Multicast_DischargeOnSurvivor Parms{};

	Parms.survivor = survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IridescentQueenEffect.OnRep_ChargeActive
// (Final, Native, Private)

void UIridescentQueenEffect::OnRep_ChargeActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "OnRep_ChargeActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.IridescentQueenEffect.GetStaticFieldMovementSpeed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStaticFieldMovementSpeed               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStaticFieldMovementSpeed UIridescentQueenEffect::GetStaticFieldMovementSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IridescentQueenEffect", "GetStaticFieldMovementSpeed");

	Params::IridescentQueenEffect_GetStaticFieldMovementSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.Lithe.GetMovementSpeedDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ULithe::GetMovementSpeedDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Lithe", "GetMovementSpeedDuration");

	Params::Lithe_GetMovementSpeedDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.Lithe.GetMovementSpeedPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ULithe::GetMovementSpeedPercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Lithe", "GetMovementSpeedPercentage");

	Params::Lithe_GetMovementSpeedPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.Overcharge.GetRegressionRateMultiplierCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UCurveFloat*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCurveFloat* UOvercharge::GetRegressionRateMultiplierCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Overcharge", "GetRegressionRateMultiplierCurve");

	Params::Overcharge_GetRegressionRateMultiplierCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.Overcharge.GetSkillCheckFailurePenaltyAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOvercharge::GetSkillCheckFailurePenaltyAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Overcharge", "GetSkillCheckFailurePenaltyAtLevel");

	Params::Overcharge_GetSkillCheckFailurePenaltyAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.ShockTherapy.Cosmetic_OnShockTherapyChargeEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    charged                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShockTherapy::Cosmetic_OnShockTherapyChargeEnd(class ADBDPlayer* player, bool charged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapy", "Cosmetic_OnShockTherapyChargeEnd");

	Params::ShockTherapy_Cosmetic_OnShockTherapyChargeEnd Parms{};

	Parms.player = player;
	Parms.charged = charged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.ShockTherapy.Multicast_ActivateShockTherapyAOE
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// const struct FTransform&                shockTherapyZoneTransform                              (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UShockTherapy::Multicast_ActivateShockTherapyAOE(const struct FTransform& shockTherapyZoneTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapy", "Multicast_ActivateShockTherapyAOE");

	Params::ShockTherapy_Multicast_ActivateShockTherapyAOE Parms{};

	Parms.shockTherapyZoneTransform = std::move(shockTherapyZoneTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.ShockTherapy.Multicast_DetonateShockTherapy
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<class ACamperPlayer*>&     shockedSurvivors                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   madnessToAdd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShockTherapy::Multicast_DetonateShockTherapy(const TArray<class ACamperPlayer*>& shockedSurvivors, float madnessToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapy", "Multicast_DetonateShockTherapy");

	Params::ShockTherapy_Multicast_DetonateShockTherapy Parms{};

	Parms.shockedSurvivors = std::move(shockedSurvivors);
	Parms.madnessToAdd = madnessToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.ShockTherapy.OnLevelReadyToPlay
// (Final, Native, Private)

void UShockTherapy::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapy", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.ShockTherapyAOE.Cosmetic_ActivateShockTherapyAOE
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AShockTherapyAOE::Cosmetic_ActivateShockTherapyAOE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapyAOE", "Cosmetic_ActivateShockTherapyAOE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.ShockTherapyAOE.OnScaleInitialized
// (Event, Protected, BlueprintEvent)

void AShockTherapyAOE::OnScaleInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapyAOE", "OnScaleInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.ShockTherapyAOEPreview.SetAttackZonePreviewScale
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   scale                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShockTherapyAOEPreview::SetAttackZonePreviewScale(const struct FVector& scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShockTherapyAOEPreview", "SetAttackZonePreviewScale");

	Params::ShockTherapyAOEPreview_SetAttackZonePreviewScale Parms{};

	Parms.scale = std::move(scale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.SnapOutOfIt.Authority_OnSkillCheckResponseAuthority
// (Final, Native, Private)
// Parameters:
// bool                                    success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bonus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    triggerLoudNoise                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillCheckCustomType                   type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnapOutOfIt::Authority_OnSkillCheckResponseAuthority(bool success, bool bonus, class ADBDPlayer* player, bool triggerLoudNoise, ESkillCheckCustomType type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnapOutOfIt", "Authority_OnSkillCheckResponseAuthority");

	Params::SnapOutOfIt_Authority_OnSkillCheckResponseAuthority Parms{};

	Parms.success = success;
	Parms.bonus = bonus;
	Parms.player = player;
	Parms.triggerLoudNoise = triggerLoudNoise;
	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.StaticBlast.Cosmetic_OnStaticBlastChargeEnd
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    charged                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStaticBlast::Cosmetic_OnStaticBlastChargeEnd(class ADBDPlayer* player, bool charged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticBlast", "Cosmetic_OnStaticBlastChargeEnd");

	Params::StaticBlast_Cosmetic_OnStaticBlastChargeEnd Parms{};

	Parms.player = player;
	Parms.charged = charged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheDoctor.StaticBlast.Multicast_StaticBlastShockSurvivors
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const TArray<class ACamperPlayer*>&     survivorsToShock                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UStaticBlast::Multicast_StaticBlastShockSurvivors(const TArray<class ACamperPlayer*>& survivorsToShock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticBlast", "Multicast_StaticBlastShockSurvivors");

	Params::StaticBlast_Multicast_StaticBlastShockSurvivors Parms{};

	Parms.survivorsToShock = std::move(survivorsToShock);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.SurvivorMadnessEffect.ActivateMadnessBubbleIndicator
// (Event, Protected, BlueprintEvent)

void USurvivorMadnessEffect::ActivateMadnessBubbleIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "ActivateMadnessBubbleIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.SurvivorMadnessEffect.Authority_AddMadness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   amountToAdd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorMadnessEffect::Authority_AddMadness(float amountToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "Authority_AddMadness");

	Params::SurvivorMadnessEffect_Authority_AddMadness Parms{};

	Parms.amountToAdd = amountToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.SurvivorMadnessEffect.Multicast_MadnessIntermittentScream
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void USurvivorMadnessEffect::Multicast_MadnessIntermittentScream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "Multicast_MadnessIntermittentScream");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.SurvivorMadnessEffect.Multicast_OnMadnessTierChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const int32                             newMadnessTier                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             oldMadnessTier                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USurvivorMadnessEffect::Multicast_OnMadnessTierChanged(const int32 newMadnessTier, const int32 oldMadnessTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "Multicast_OnMadnessTierChanged");

	Params::SurvivorMadnessEffect_Multicast_OnMadnessTierChanged Parms{};

	Parms.newMadnessTier = newMadnessTier;
	Parms.oldMadnessTier = oldMadnessTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.SurvivorMadnessEffect.OnRep_MadnessAmount
// (Final, Native, Private)

void USurvivorMadnessEffect::OnRep_MadnessAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "OnRep_MadnessAmount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheDoctor.SurvivorMadnessEffect.SpawnMadnessBubbleIndicator
// (Event, Protected, BlueprintEvent)

void USurvivorMadnessEffect::SpawnMadnessBubbleIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "SpawnMadnessBubbleIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheDoctor.SurvivorMadnessEffect.GetMadnessTier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USurvivorMadnessEffect::GetMadnessTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivorMadnessEffect", "GetMadnessTier");

	Params::SurvivorMadnessEffect_GetMadnessTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.TheDoctorUtilities.CanGainInsanity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADBDPlayer*                 player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTheDoctorUtilities::CanGainInsanity(const class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TheDoctorUtilities", "CanGainInsanity");

	Params::TheDoctorUtilities_CanGainInsanity Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.TheDoctorUtilities.GetMadnessTier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADBDPlayer*                 player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTheDoctorUtilities::GetMadnessTier(const class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TheDoctorUtilities", "GetMadnessTier");

	Params::TheDoctorUtilities_GetMadnessTier Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.TheDoctorUtilities.GetSurvivorMadnessEffect
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADBDPlayer*                 player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USurvivorMadnessEffect*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USurvivorMadnessEffect* UTheDoctorUtilities::GetSurvivorMadnessEffect(const class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TheDoctorUtilities", "GetSurvivorMadnessEffect");

	Params::TheDoctorUtilities_GetSurvivorMadnessEffect Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheDoctor.TheDoctorUtilities.IsTotallyInsane
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADBDPlayer*                 player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTheDoctorUtilities::IsTotallyInsane(const class ADBDPlayer* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TheDoctorUtilities", "IsTotallyInsane");

	Params::TheDoctorUtilities_IsTotallyInsane Parms{};

	Parms.player = player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

