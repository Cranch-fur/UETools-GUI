#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventUtilities

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class SpecialEventUtilities.RespawnableTrigger
// 0x0000 (0x00B8 - 0x00B8)
class URespawnableTrigger : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableTrigger">();
	}
	static class URespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnableTrigger>();
	}
};
static_assert(alignof(URespawnableTrigger) == 0x000008, "Wrong alignment on URespawnableTrigger");
static_assert(sizeof(URespawnableTrigger) == 0x0000B8, "Wrong size on URespawnableTrigger");

// Class SpecialEventUtilities.RespawnableInteractable
// 0x0028 (0x0350 - 0x0328)
class ARespawnableInteractable : public AInteractable
{
public:
	TMulticastInlineDelegate<void(class ARespawnableInteractable* respawnableInteractable)> OnInteractionEnded; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ARespawnableInteractable* respawnableInteractable, bool isInteracting)> OnIsInteractingChanged; // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _isHidden;                                         // 0x0348(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHidden();
	void OnRep_IsHidden();
	void OnUnhidden();

	bool IsHidden() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableInteractable">();
	}
	static class ARespawnableInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARespawnableInteractable>();
	}
};
static_assert(alignof(ARespawnableInteractable) == 0x000008, "Wrong alignment on ARespawnableInteractable");
static_assert(sizeof(ARespawnableInteractable) == 0x000350, "Wrong size on ARespawnableInteractable");
static_assert(offsetof(ARespawnableInteractable, OnInteractionEnded) == 0x000328, "Member 'ARespawnableInteractable::OnInteractionEnded' has a wrong offset!");
static_assert(offsetof(ARespawnableInteractable, OnIsInteractingChanged) == 0x000338, "Member 'ARespawnableInteractable::OnIsInteractingChanged' has a wrong offset!");
static_assert(offsetof(ARespawnableInteractable, _isHidden) == 0x000348, "Member 'ARespawnableInteractable::_isHidden' has a wrong offset!");

// Class SpecialEventUtilities.RespawningEventComponent
// 0x0010 (0x00C8 - 0x00B8)
class URespawningEventComponent : public UActorComponent
{
public:
	class URespawnableStrategy*                   _respawnableStrategy;                              // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URespawnablePositioner*                 _respawnablePositioner;                            // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnIsInteractingWithAnyRespawnableInteractableChanged(class ARespawnableInteractable* respawnableInteractable, bool isInteracting);
	void DBD_ForceRespawnSpecialEventObject();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawningEventComponent">();
	}
	static class URespawningEventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawningEventComponent>();
	}
};
static_assert(alignof(URespawningEventComponent) == 0x000008, "Wrong alignment on URespawningEventComponent");
static_assert(sizeof(URespawningEventComponent) == 0x0000C8, "Wrong size on URespawningEventComponent");
static_assert(offsetof(URespawningEventComponent, _respawnableStrategy) == 0x0000B8, "Member 'URespawningEventComponent::_respawnableStrategy' has a wrong offset!");
static_assert(offsetof(URespawningEventComponent, _respawnablePositioner) == 0x0000C0, "Member 'URespawningEventComponent::_respawnablePositioner' has a wrong offset!");

// Class SpecialEventUtilities.InteractionRespawnableTrigger
// 0x0008 (0x00C0 - 0x00B8)
class UInteractionRespawnableTrigger : public URespawnableTrigger
{
public:
	class URespawningEventComponent*              _respawningEventComponent;                         // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Authority_OnInteractionEnded(class ARespawnableInteractable* respawnableInteractable);
	void Authority_OnNewRespawnableSubscribed(class ARespawnableInteractable* newRespawnableInteractable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InteractionRespawnableTrigger">();
	}
	static class UInteractionRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionRespawnableTrigger>();
	}
};
static_assert(alignof(UInteractionRespawnableTrigger) == 0x000008, "Wrong alignment on UInteractionRespawnableTrigger");
static_assert(sizeof(UInteractionRespawnableTrigger) == 0x0000C0, "Wrong size on UInteractionRespawnableTrigger");
static_assert(offsetof(UInteractionRespawnableTrigger, _respawningEventComponent) == 0x0000B8, "Member 'UInteractionRespawnableTrigger::_respawningEventComponent' has a wrong offset!");

// Class SpecialEventUtilities.PlayerEventDispatcher
// 0x0060 (0x0118 - 0x00B8)
class UPlayerEventDispatcher final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x60];                                      // 0x00B8(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerEventDispatcher">();
	}
	static class UPlayerEventDispatcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerEventDispatcher>();
	}
};
static_assert(alignof(UPlayerEventDispatcher) == 0x000008, "Wrong alignment on UPlayerEventDispatcher");
static_assert(sizeof(UPlayerEventDispatcher) == 0x000118, "Wrong size on UPlayerEventDispatcher");

// Class SpecialEventUtilities.RespawnablePositioner
// 0x0028 (0x00E0 - 0x00B8)
class URespawnablePositioner final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class ARespawnableInteractable* respawnableInteractable, bool isInteracting)> OnIsInteractingWithAnyRespawnableInteractableChangedEvent; // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ARespawnableInteractable*>       _respawnableInteractables;                         // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnIsInteractingChangedEvent(class ARespawnableInteractable* respawnableInteractable, bool isInteracting);

	const TArray<class ARespawnableInteractable*> Authority_GetRespawnables() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnablePositioner">();
	}
	static class URespawnablePositioner* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnablePositioner>();
	}
};
static_assert(alignof(URespawnablePositioner) == 0x000008, "Wrong alignment on URespawnablePositioner");
static_assert(sizeof(URespawnablePositioner) == 0x0000E0, "Wrong size on URespawnablePositioner");
static_assert(offsetof(URespawnablePositioner, OnIsInteractingWithAnyRespawnableInteractableChangedEvent) == 0x0000B8, "Member 'URespawnablePositioner::OnIsInteractingWithAnyRespawnableInteractableChangedEvent' has a wrong offset!");
static_assert(offsetof(URespawnablePositioner, _respawnableInteractables) == 0x0000C8, "Member 'URespawnablePositioner::_respawnableInteractables' has a wrong offset!");

// Class SpecialEventUtilities.RespawnableStrategy
// 0x0000 (0x00B8 - 0x00B8)
class URespawnableStrategy : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableStrategy">();
	}
	static class URespawnableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnableStrategy>();
	}
};
static_assert(alignof(URespawnableStrategy) == 0x000008, "Wrong alignment on URespawnableStrategy");
static_assert(sizeof(URespawnableStrategy) == 0x0000B8, "Wrong size on URespawnableStrategy");

// Class SpecialEventUtilities.RespawnAtRandomLocationStrategy
// 0x0000 (0x00B8 - 0x00B8)
class URespawnAtRandomLocationStrategy final : public URespawnableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnAtRandomLocationStrategy">();
	}
	static class URespawnAtRandomLocationStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnAtRandomLocationStrategy>();
	}
};
static_assert(alignof(URespawnAtRandomLocationStrategy) == 0x000008, "Wrong alignment on URespawnAtRandomLocationStrategy");
static_assert(sizeof(URespawnAtRandomLocationStrategy) == 0x0000B8, "Wrong size on URespawnAtRandomLocationStrategy");

// Class SpecialEventUtilities.RespawnFurthestFromPlayersStrategy
// 0x0000 (0x00B8 - 0x00B8)
class URespawnFurthestFromPlayersStrategy final : public URespawnableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnFurthestFromPlayersStrategy">();
	}
	static class URespawnFurthestFromPlayersStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnFurthestFromPlayersStrategy>();
	}
};
static_assert(alignof(URespawnFurthestFromPlayersStrategy) == 0x000008, "Wrong alignment on URespawnFurthestFromPlayersStrategy");
static_assert(sizeof(URespawnFurthestFromPlayersStrategy) == 0x0000B8, "Wrong size on URespawnFurthestFromPlayersStrategy");

// Class SpecialEventUtilities.RespawningEventUtilities
// 0x0000 (0x0030 - 0x0030)
class URespawningEventUtilities final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawningEventUtilities">();
	}
	static class URespawningEventUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawningEventUtilities>();
	}
};
static_assert(alignof(URespawningEventUtilities) == 0x000008, "Wrong alignment on URespawningEventUtilities");
static_assert(sizeof(URespawningEventUtilities) == 0x000030, "Wrong size on URespawningEventUtilities");

// Class SpecialEventUtilities.TimedInteractionRespawnableTrigger
// 0x0038 (0x00F8 - 0x00C0)
class UTimedInteractionRespawnableTrigger final : public UInteractionRespawnableTrigger
{
public:
	uint8                                         Pad_C0[0x38];                                      // 0x00C0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimedInteractionRespawnableTrigger">();
	}
	static class UTimedInteractionRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimedInteractionRespawnableTrigger>();
	}
};
static_assert(alignof(UTimedInteractionRespawnableTrigger) == 0x000008, "Wrong alignment on UTimedInteractionRespawnableTrigger");
static_assert(sizeof(UTimedInteractionRespawnableTrigger) == 0x0000F8, "Wrong size on UTimedInteractionRespawnableTrigger");

// Class SpecialEventUtilities.TimedRespawnableTrigger
// 0x0048 (0x0100 - 0x00B8)
class UTimedRespawnableTrigger final : public URespawnableTrigger
{
public:
	class URespawningEventComponent*              _respawningEventComponent;                         // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x40];                                      // 0x00C0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimedRespawnableTrigger">();
	}
	static class UTimedRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimedRespawnableTrigger>();
	}
};
static_assert(alignof(UTimedRespawnableTrigger) == 0x000008, "Wrong alignment on UTimedRespawnableTrigger");
static_assert(sizeof(UTimedRespawnableTrigger) == 0x000100, "Wrong size on UTimedRespawnableTrigger");
static_assert(offsetof(UTimedRespawnableTrigger, _respawningEventComponent) == 0x0000B8, "Member 'UTimedRespawnableTrigger::_respawningEventComponent' has a wrong offset!");

}

