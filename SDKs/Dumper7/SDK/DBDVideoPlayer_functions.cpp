#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDVideoPlayer

#include "Basic.hpp"

#include "DBDVideoPlayer_classes.hpp"
#include "DBDVideoPlayer_parameters.hpp"


namespace SDK
{

// Function DBDVideoPlayer.VideoBinkPlayer.OnEndReached
// (Final, Native, Protected)

void AVideoBinkPlayer::OnEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoBinkPlayer", "OnEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoBinkPlayer.OnMediaClosed
// (Final, Native, Protected)

void AVideoBinkPlayer::OnMediaClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoBinkPlayer", "OnMediaClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoBinkPlayer.OnMediaOpened
// (Final, Native, Protected)
// Parameters:
// const class FString&                    openedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVideoBinkPlayer::OnMediaOpened(const class FString& openedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoBinkPlayer", "OnMediaOpened");

	Params::VideoBinkPlayer_OnMediaOpened Parms{};

	Parms.openedUrl = std::move(openedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoThumbnailPlayer.OnEndReached
// (Final, Native, Private)

void AVideoThumbnailPlayer::OnEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoThumbnailPlayer", "OnEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoThumbnailPlayer.OnMediaClosed
// (Final, Native, Private)

void AVideoThumbnailPlayer::OnMediaClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoThumbnailPlayer", "OnMediaClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoThumbnailPlayer.OnMediaOpened
// (Final, Native, Private)
// Parameters:
// const class FString&                    openedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AVideoThumbnailPlayer::OnMediaOpened(const class FString& openedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoThumbnailPlayer", "OnMediaOpened");

	Params::VideoThumbnailPlayer_OnMediaOpened Parms{};

	Parms.openedUrl = std::move(openedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDVideoPlayer.VideoThumbnailPlayer.OnVideoAssetLoaded
// (Final, Native, Private)

void AVideoThumbnailPlayer::OnVideoAssetLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoThumbnailPlayer", "OnVideoAssetLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

