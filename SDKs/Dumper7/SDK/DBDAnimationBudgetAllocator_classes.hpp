#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAnimationBudgetAllocator

#include "Basic.hpp"

#include "AnimationBudgetAllocator_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class DBDAnimationBudgetAllocator.DBDSkeletalMeshComponentBudgeted
// 0x0060 (0x1000 - 0x0FA0)
#pragma pack(push, 0x1)
class alignas(0x10) UDBDSkeletalMeshComponentBudgeted : public USkeletalMeshComponentBudgeted
{
public:
	uint8                                         Pad_FA0[0x39];                                     // 0x0FA0(0x0039)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _autoRegisterToAnimBudgeter;                       // 0x0FD9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _autoComputeSignificance;                          // 0x0FDA(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FDB[0x5];                                      // 0x0FDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USignificanceStrategy*                  _significanceStrategy;                             // 0x0FE0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimBudgeterSignificanceStrategy*      _animBudgeterSignificanceStrategy;                 // 0x0FE8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FF0[0x8];                                      // 0x0FF0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetAnimationDependency(class USkeletalMeshComponent* meshDependency);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDSkeletalMeshComponentBudgeted">();
	}
	static class UDBDSkeletalMeshComponentBudgeted* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDSkeletalMeshComponentBudgeted>();
	}
};
#pragma pack(pop)
static_assert(alignof(UDBDSkeletalMeshComponentBudgeted) == 0x000010, "Wrong alignment on UDBDSkeletalMeshComponentBudgeted");
static_assert(sizeof(UDBDSkeletalMeshComponentBudgeted) == 0x001000, "Wrong size on UDBDSkeletalMeshComponentBudgeted");
static_assert(offsetof(UDBDSkeletalMeshComponentBudgeted, _autoRegisterToAnimBudgeter) == 0x000FD9, "Member 'UDBDSkeletalMeshComponentBudgeted::_autoRegisterToAnimBudgeter' has a wrong offset!");
static_assert(offsetof(UDBDSkeletalMeshComponentBudgeted, _autoComputeSignificance) == 0x000FDA, "Member 'UDBDSkeletalMeshComponentBudgeted::_autoComputeSignificance' has a wrong offset!");
static_assert(offsetof(UDBDSkeletalMeshComponentBudgeted, _significanceStrategy) == 0x000FE0, "Member 'UDBDSkeletalMeshComponentBudgeted::_significanceStrategy' has a wrong offset!");
static_assert(offsetof(UDBDSkeletalMeshComponentBudgeted, _animBudgeterSignificanceStrategy) == 0x000FE8, "Member 'UDBDSkeletalMeshComponentBudgeted::_animBudgeterSignificanceStrategy' has a wrong offset!");

// Class DBDAnimationBudgetAllocator.AnimBudgeterSignificanceStrategy
// 0x0000 (0x0030 - 0x0030)
class UAnimBudgeterSignificanceStrategy : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimBudgeterSignificanceStrategy">();
	}
	static class UAnimBudgeterSignificanceStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBudgeterSignificanceStrategy>();
	}
};
static_assert(alignof(UAnimBudgeterSignificanceStrategy) == 0x000008, "Wrong alignment on UAnimBudgeterSignificanceStrategy");
static_assert(sizeof(UAnimBudgeterSignificanceStrategy) == 0x000030, "Wrong size on UAnimBudgeterSignificanceStrategy");

// Class DBDAnimationBudgetAllocator.SimpleAnimBudgeterSignificanceStrategy
// 0x0008 (0x0038 - 0x0030)
class USimpleAnimBudgeterSignificanceStrategy final : public UAnimBudgeterSignificanceStrategy
{
public:
	bool                                          _tickEvenIfNotRendered;                            // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimpleAnimBudgeterSignificanceStrategy">();
	}
	static class USimpleAnimBudgeterSignificanceStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimpleAnimBudgeterSignificanceStrategy>();
	}
};
static_assert(alignof(USimpleAnimBudgeterSignificanceStrategy) == 0x000008, "Wrong alignment on USimpleAnimBudgeterSignificanceStrategy");
static_assert(sizeof(USimpleAnimBudgeterSignificanceStrategy) == 0x000038, "Wrong size on USimpleAnimBudgeterSignificanceStrategy");
static_assert(offsetof(USimpleAnimBudgeterSignificanceStrategy, _tickEvenIfNotRendered) == 0x000030, "Member 'USimpleAnimBudgeterSignificanceStrategy::_tickEvenIfNotRendered' has a wrong offset!");

// Class DBDAnimationBudgetAllocator.DBDAnimationBudgetAllocator
// 0x0120 (0x0158 - 0x0038)
class UDBDAnimationBudgetAllocator final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0x120];                                     // 0x0038(0x0120)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDAnimationBudgetAllocator">();
	}
	static class UDBDAnimationBudgetAllocator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDAnimationBudgetAllocator>();
	}
};
static_assert(alignof(UDBDAnimationBudgetAllocator) == 0x000008, "Wrong alignment on UDBDAnimationBudgetAllocator");
static_assert(sizeof(UDBDAnimationBudgetAllocator) == 0x000158, "Wrong size on UDBDAnimationBudgetAllocator");

// Class DBDAnimationBudgetAllocator.SkeletalMeshActorBudgeted
// 0x0000 (0x02B8 - 0x02B8)
class ASkeletalMeshActorBudgeted : public ASkeletalMeshActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkeletalMeshActorBudgeted">();
	}
	static class ASkeletalMeshActorBudgeted* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASkeletalMeshActorBudgeted>();
	}
};
static_assert(alignof(ASkeletalMeshActorBudgeted) == 0x000008, "Wrong alignment on ASkeletalMeshActorBudgeted");
static_assert(sizeof(ASkeletalMeshActorBudgeted) == 0x0002B8, "Wrong size on ASkeletalMeshActorBudgeted");

}

