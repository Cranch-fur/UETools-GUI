#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UETools

#include "Basic.hpp"

#include "BPFL_UETools_classes.hpp"
#include "BPFL_UETools_parameters.hpp"


namespace SDK
{

// Function BPFL_UETools.BPFL_UETools_C.Create_CheatManager
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Cheat_Manager_Class                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)
// class UCheatManager**                   Cheat_Manager_Reference                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Create_CheatManager(class UClass* Cheat_Manager_Class, class UObject* __WorldContext, class FText* Client_Message, class UCheatManager** Cheat_Manager_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Create_CheatManager");

	Params::BPFL_UETools_C_Create_CheatManager Parms{};

	Parms.Cheat_Manager_Class = Cheat_Manager_Class;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);

	if (Cheat_Manager_Reference != nullptr)
		*Cheat_Manager_Reference = Parms.Cheat_Manager_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Create_Console
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Console_Class                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)
// class UObject**                         Console_Reference                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Create_Console(class UClass* Console_Class, class UObject* __WorldContext, class FText* Client_Message, class UObject** Console_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Create_Console");

	Params::BPFL_UETools_C_Create_Console Parms{};

	Parms.Console_Class = Console_Class;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);

	if (Console_Reference != nullptr)
		*Console_Reference = Parms.Console_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Spawn_Object
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Object_Class                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UObject* UBPFL_UETools_C::Spawn_Object(TSubclassOf<class UObject> Object_Class, class UObject* Outer_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Spawn_Object");

	Params::BPFL_UETools_C_Spawn_Object Parms{};

	Parms.Object_Class = Object_Class;
	Parms.Outer_0 = Outer_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_Console
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject**                         Console_Reference                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_Console(class UObject* __WorldContext, class UObject** Console_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_Console");

	Params::BPFL_UETools_C_Get_Console Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Console_Reference != nullptr)
		*Console_Reference = Parms.Console_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_CheatManager
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCheatManager**                   Cheat_Manager_Reference                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_CheatManager(class APlayerController* Player_Controller, class UObject* __WorldContext, class UCheatManager** Cheat_Manager_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_CheatManager");

	Params::BPFL_UETools_C_Get_CheatManager Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cheat_Manager_Reference != nullptr)
		*Cheat_Manager_Reference = Parms.Cheat_Manager_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_CheatManagerClass
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass**                          Cheat_Manager_Class                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_CheatManagerClass(class APlayerController* Player_Controller, class UObject* __WorldContext, class UClass** Cheat_Manager_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_CheatManagerClass");

	Params::BPFL_UETools_C_Get_CheatManagerClass Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cheat_Manager_Class != nullptr)
		*Cheat_Manager_Class = Parms.Cheat_Manager_Class;
}


// Function BPFL_UETools.BPFL_UETools_C.Set_CheatManager
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCheatManager*                    Cheat_Manager_Reference                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Set_CheatManager(class APlayerController* Player_Controller, class UCheatManager* Cheat_Manager_Reference, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_CheatManager");

	Params::BPFL_UETools_C_Set_CheatManager Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Cheat_Manager_Reference = Cheat_Manager_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Get_CheatFlying
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCharacterMovementComponent*      Character_Movement_Component                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Boolean                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_UETools_C::Get_CheatFlying(class UCharacterMovementComponent* Character_Movement_Component, class UObject* __WorldContext, bool* Boolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_CheatFlying");

	Params::BPFL_UETools_C_Get_CheatFlying Parms{};

	Parms.Character_Movement_Component = Character_Movement_Component;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Boolean != nullptr)
		*Boolean = Parms.Boolean;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_GravityScale
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Gravity_Scale                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_GravityScale(class UObject* __WorldContext, float* Gravity_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_GravityScale");

	Params::BPFL_UETools_C_Get_GravityScale Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Gravity_Scale != nullptr)
		*Gravity_Scale = Parms.Gravity_Scale;
}


// Function BPFL_UETools.BPFL_UETools_C.Set_CheatFlying
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterMovementComponent*      Character_Movement_Component                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Boolean                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Set_CheatFlying(class UCharacterMovementComponent* Character_Movement_Component, bool Boolean, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_CheatFlying");

	Params::BPFL_UETools_C_Set_CheatFlying Parms{};

	Parms.Character_Movement_Component = Character_Movement_Component;
	Parms.Boolean = Boolean;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.ChangeSize
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Size                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Don_t_Modify_Capsule_Size                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::ChangeSize(float New_Size, bool Don_t_Modify_Capsule_Size, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "ChangeSize");

	Params::BPFL_UETools_C_ChangeSize Parms{};

	Parms.New_Size = New_Size;
	Parms.Don_t_Modify_Capsule_Size = Don_t_Modify_Capsule_Size;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Walk
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Walk(class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Walk");

	Params::BPFL_UETools_C_Walk Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Fly
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Fly(class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Fly");

	Params::BPFL_UETools_C_Fly Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Ghost
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Ghost(class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Ghost");

	Params::BPFL_UETools_C_Ghost Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.God
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::God(class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "God");

	Params::BPFL_UETools_C_God Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Slomo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Time_Dilation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Slomo(float New_Time_Dilation, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Slomo");

	Params::BPFL_UETools_C_Slomo Parms{};

	Parms.New_Time_Dilation = New_Time_Dilation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Set_CheatManagerClass
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Cheat_Manager_Class                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Set_CheatManagerClass(class APlayerController* Player_Controller, class UClass* Cheat_Manager_Class, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_CheatManagerClass");

	Params::BPFL_UETools_C_Set_CheatManagerClass Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Cheat_Manager_Class = Cheat_Manager_Class;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Get_HiddenActors
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  Hidden_Actors                                          (Parm, OutParm)

void UBPFL_UETools_C::Get_HiddenActors(class APlayerController* Player_Controller, class UObject* __WorldContext, TArray<class AActor*>* Hidden_Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_HiddenActors");

	Params::BPFL_UETools_C_Get_HiddenActors Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Hidden_Actors != nullptr)
		*Hidden_Actors = std::move(Parms.Hidden_Actors);
}


// Function BPFL_UETools.BPFL_UETools_C.Set_HiddenActors
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>&                  New_Hidden_Actors                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Set_HiddenActors(class APlayerController* Player_Controller, TArray<class AActor*>& New_Hidden_Actors, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_HiddenActors");

	Params::BPFL_UETools_C_Set_HiddenActors Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.New_Hidden_Actors = std::move(New_Hidden_Actors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	New_Hidden_Actors = std::move(Parms.New_Hidden_Actors);
}


// Function BPFL_UETools.BPFL_UETools_C.Set_Console
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Console_Reference                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Set_Console(class UObject* Console_Reference, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_Console");

	Params::BPFL_UETools_C_Set_Console Parms{};

	Parms.Console_Reference = Console_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Add_UniqueConsoleMapping
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Add_UniqueConsoleMapping(const struct FKey& Key, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Add_UniqueConsoleMapping");

	Params::BPFL_UETools_C_Add_UniqueConsoleMapping Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UETools.BPFL_UETools_C.Add_ConsoleMapping
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Add_ConsoleMapping(const struct FKey& Key, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Add_ConsoleMapping");

	Params::BPFL_UETools_C_Add_ConsoleMapping Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UETools.BPFL_UETools_C.Set_GravityScale
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Gravity_Scale                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Client_Message                                         (Parm, OutParm)

void UBPFL_UETools_C::Set_GravityScale(float New_Gravity_Scale, class UObject* __WorldContext, class FText* Client_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Set_GravityScale");

	Params::BPFL_UETools_C_Set_GravityScale Parms{};

	Parms.New_Gravity_Scale = New_Gravity_Scale;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Client_Message != nullptr)
		*Client_Message = std::move(Parms.Client_Message);
}


// Function BPFL_UETools.BPFL_UETools_C.Add_HiddenActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor_Reference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  New_Entry_Index                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Add_HiddenActor(class APlayerController* Player_Controller, class AActor* Actor_Reference, class UObject* __WorldContext, int32* New_Entry_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Add_HiddenActor");

	Params::BPFL_UETools_C_Add_HiddenActor Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Actor_Reference = Actor_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (New_Entry_Index != nullptr)
		*New_Entry_Index = Parms.New_Entry_Index;
}


// Function BPFL_UETools.BPFL_UETools_C.Rem_HiddenActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor_Reference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Was_Removed_                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_UETools_C::Rem_HiddenActor(class APlayerController* Player_Controller, class AActor* Actor_Reference, class UObject* __WorldContext, bool* Was_Removed_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Rem_HiddenActor");

	Params::BPFL_UETools_C_Rem_HiddenActor Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Actor_Reference = Actor_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Was_Removed_ != nullptr)
		*Was_Removed_ = Parms.Was_Removed_;
}


// Function BPFL_UETools.BPFL_UETools_C.ClientMessage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller_Reference                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Client_Message                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             Message_Type                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Message_LifeTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::ClientMessage(class APlayerController* Player_Controller_Reference, const class FText& Client_Message, class FName Message_Type, float Message_LifeTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "ClientMessage");

	Params::BPFL_UETools_C_ClientMessage Parms{};

	Parms.Player_Controller_Reference = Player_Controller_Reference;
	Parms.Client_Message = std::move(Client_Message);
	Parms.Message_Type = Message_Type;
	Parms.Message_LifeTime = Message_LifeTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UETools.BPFL_UETools_C.SwitchController
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayer*                          Player_Reference                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                New_Player_Controller_Reference                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::SwitchController(class UPlayer* Player_Reference, class APlayerController* New_Player_Controller_Reference, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "SwitchController");

	Params::BPFL_UETools_C_SwitchController Parms{};

	Parms.Player_Reference = Player_Reference;
	Parms.New_Player_Controller_Reference = New_Player_Controller_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UETools.BPFL_UETools_C.Get_LocalPlayer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                Player_Controller_Reference                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULocalPlayer**                    Local_Player_Reference                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_LocalPlayer(class APlayerController* Player_Controller_Reference, class UObject* __WorldContext, class ULocalPlayer** Local_Player_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_LocalPlayer");

	Params::BPFL_UETools_C_Get_LocalPlayer Parms{};

	Parms.Player_Controller_Reference = Player_Controller_Reference;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Local_Player_Reference != nullptr)
		*Local_Player_Reference = Parms.Local_Player_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_Engine
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UEngine**                         Engine_Reference                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_Engine(class UObject* __WorldContext, class UEngine** Engine_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_Engine");

	Params::BPFL_UETools_C_Get_Engine Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Engine_Reference != nullptr)
		*Engine_Reference = Parms.Engine_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_World
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWorld**                          World_Reference                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_World(class UObject* __WorldContext, class UWorld** World_Reference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_World");

	Params::BPFL_UETools_C_Get_World Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (World_Reference != nullptr)
		*World_Reference = Parms.World_Reference;
}


// Function BPFL_UETools.BPFL_UETools_C.Get_SystemObjectPath
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class UObject*                    Object                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Path                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_SystemObjectPath(const class UObject* Object, class UObject* __WorldContext, class FString* Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Get_SystemObjectPath");

	Params::BPFL_UETools_C_Get_SystemObjectPath Parms{};

	Parms.Object = Object;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Path != nullptr)
		*Path = std::move(Parms.Path);
}


// Function BPFL_UETools.BPFL_UETools_C.Remove_ConsoleMapping
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Remove_ConsoleMapping(const struct FKey& Key, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UETools_C", "Remove_ConsoleMapping");

	Params::BPFL_UETools_C_Remove_ConsoleMapping Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UETools.BPFL_UETools_C.Get_DateTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Year                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Month                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Day                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Hour                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Minute                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Second                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Millisecond                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_UETools_C::Get_DateTime(class UObject* __WorldContext, class FString* Year, class FString* Month, class FString* Day, class FString* Hour, class FString* Minute, class FString* Second, class FString* Millisecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPFL_UETools_C", "Get_DateTime");

	Params::BPFL_UETools_C_Get_DateTime Parms{};

	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Year != nullptr)
		*Year = std::move(Parms.Year);

	if (Month != nullptr)
		*Month = std::move(Parms.Month);

	if (Day != nullptr)
		*Day = std::move(Parms.Day);

	if (Hour != nullptr)
		*Hour = std::move(Parms.Hour);

	if (Minute != nullptr)
		*Minute = std::move(Parms.Minute);

	if (Second != nullptr)
		*Second = std::move(Parms.Second);

	if (Millisecond != nullptr)
		*Millisecond = std::move(Parms.Millisecond);
}

}

