#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelGenerator

#include "Basic.hpp"


namespace SDK::Params
{

// Function LevelGenerator.LevelGenerator_C.ExecuteUbergraph_LevelGenerator
// 0x001C (0x001C - 0x0000)
struct LevelGenerator_C_ExecuteUbergraph_LevelGenerator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_modifier;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator) == 0x000004, "Wrong alignment on LevelGenerator_C_ExecuteUbergraph_LevelGenerator");
static_assert(sizeof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator) == 0x00001C, "Wrong size on LevelGenerator_C_ExecuteUbergraph_LevelGenerator");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, EntryPoint) == 0x000000, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::EntryPoint' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, K2Node_Event_modifier) == 0x000004, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::K2Node_Event_modifier' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, CallFunc_FClamp_ReturnValue_1) == 0x000010, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevelGenerator_C_ExecuteUbergraph_LevelGenerator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'LevelGenerator_C_ExecuteUbergraph_LevelGenerator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function LevelGenerator.LevelGenerator_C.ApplyMist
// 0x0004 (0x0004 - 0x0000)
struct LevelGenerator_C_ApplyMist final
{
public:
	float                                         modifier;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevelGenerator_C_ApplyMist) == 0x000004, "Wrong alignment on LevelGenerator_C_ApplyMist");
static_assert(sizeof(LevelGenerator_C_ApplyMist) == 0x000004, "Wrong size on LevelGenerator_C_ApplyMist");
static_assert(offsetof(LevelGenerator_C_ApplyMist, modifier) == 0x000000, "Member 'LevelGenerator_C_ApplyMist::modifier' has a wrong offset!");

}

