#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HUD_Abnormal_Item

#include "Basic.hpp"

#include "ProjectP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_HUD_Abnormal_Item.UIW_HUD_Abnormal_Item_C
// 0x0020 (0x02C0 - 0x02A0)
class UUIW_HUD_Abnormal_Item_C final : public ULWidget
{
public:
	class UImage*                                 Img_Icon;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsPassive;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CodeName;                                          // 0x02AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         UniqueId;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetData(bool IsPassive_0, class FName CodeName_0);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("UIW_HUD_Abnormal_Item_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UIW_HUD_Abnormal_Item_C")
	}
	static class UUIW_HUD_Abnormal_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_HUD_Abnormal_Item_C>();
	}
};
DUMPER7_ASSERTS_UUIW_HUD_Abnormal_Item_C;

}

