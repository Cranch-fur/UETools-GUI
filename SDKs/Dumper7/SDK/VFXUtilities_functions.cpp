#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VFXUtilities

#include "Basic.hpp"

#include "VFXUtilities_classes.hpp"
#include "VFXUtilities_parameters.hpp"


namespace SDK
{

// Function VFXUtilities.VFXUtilities.SetParticleSystemActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFXSystemComponent*               particleSystem                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    active                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    reset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVFXUtilities::SetParticleSystemActive(class UFXSystemComponent* particleSystem, bool active, bool reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VFXUtilities", "SetParticleSystemActive");

	Params::VFXUtilities_SetParticleSystemActive Parms{};

	Parms.particleSystem = particleSystem;
	Parms.active = active;
	Parms.reset = reset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VFXUtilities.VFXUtilities.SetParticleSystemsActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TSet<class UFXSystemComponent*>&  particleSystems                                        (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    active                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    reset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVFXUtilities::SetParticleSystemsActive(const TSet<class UFXSystemComponent*>& particleSystems, bool active, bool reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VFXUtilities", "SetParticleSystemsActive");

	Params::VFXUtilities_SetParticleSystemsActive Parms{};

	Parms.particleSystems = std::move(particleSystems);
	Parms.active = active;
	Parms.reset = reset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

