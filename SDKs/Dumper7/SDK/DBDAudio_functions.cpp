#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAudio

#include "Basic.hpp"

#include "DBDAudio_classes.hpp"
#include "DBDAudio_parameters.hpp"


namespace SDK
{

// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBank
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioBank*                     bank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioUtilities::DBD_LoadPersistentBank(class UAkAudioBank* bank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioUtilities", "DBD_LoadPersistentBank");

	Params::AudioUtilities_DBD_LoadPersistentBank Parms{};

	Parms.bank = bank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBankAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioBank*                     bank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioUtilities::DBD_LoadPersistentBankAsync(class UAkAudioBank* bank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioUtilities", "DBD_LoadPersistentBankAsync");

	Params::AudioUtilities_DBD_LoadPersistentBankAsync Parms{};

	Parms.bank = bank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAudio.AudioUtilities.DBD_LoadPersistentBankByAssetPtr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAkAudioBank>      bank                                                   (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UAudioUtilities::DBD_LoadPersistentBankByAssetPtr(TSoftObjectPtr<class UAkAudioBank> bank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioUtilities", "DBD_LoadPersistentBankByAssetPtr");

	Params::AudioUtilities_DBD_LoadPersistentBankByAssetPtr Parms{};

	Parms.bank = bank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DBDAudio.AudioUtilities.DBD_PostUiEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    event                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioUtilities::DBD_PostUiEvent(class UAkAudioEvent* event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioUtilities", "DBD_PostUiEvent");

	Params::AudioUtilities_DBD_PostUiEvent Parms{};

	Parms.event = event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAudio.AudioUtilities.PostAkAudioEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    audioEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioUtilities::PostAkAudioEvent(class UAkAudioEvent* audioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioUtilities", "PostAkAudioEvent");

	Params::AudioUtilities_PostAkAudioEvent Parms{};

	Parms.audioEvent = audioEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DBDAudio.InteractionAudioComponent.PostAkEvent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    akEvent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInteractionAudioComponent::PostAkEvent(class UAkAudioEvent* akEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionAudioComponent", "PostAkEvent");

	Params::InteractionAudioComponent_PostAkEvent Parms{};

	Parms.akEvent = akEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

