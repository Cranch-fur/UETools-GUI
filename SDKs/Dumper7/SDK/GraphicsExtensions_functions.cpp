#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GraphicsExtensions

#include "Basic.hpp"

#include "GraphicsExtensions_classes.hpp"
#include "GraphicsExtensions_parameters.hpp"


namespace SDK
{

// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.DumpDebugInfo
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UGMAdaptiveShadowMapControllerComponent::DumpDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "DumpDebugInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileCountX
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGMAdaptiveShadowMapControllerComponent::GetTileCountX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "GetTileCountX");

	Params::GMAdaptiveShadowMapControllerComponent_GetTileCountX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileCountY
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGMAdaptiveShadowMapControllerComponent::GetTileCountY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "GetTileCountY");

	Params::GMAdaptiveShadowMapControllerComponent_GetTileCountY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.GetTileSize
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGMAdaptiveShadowMapControllerComponent::GetTileSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "GetTileSize");

	Params::GMAdaptiveShadowMapControllerComponent_GetTileSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.IsControllerDonePreallocatingTiles
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGMAdaptiveShadowMapControllerComponent::IsControllerDonePreallocatingTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "IsControllerDonePreallocatingTiles");

	Params::GMAdaptiveShadowMapControllerComponent_IsControllerDonePreallocatingTiles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapControllerComponent.RebuildAtlas
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UGMAdaptiveShadowMapControllerComponent::RebuildAtlas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapControllerComponent", "RebuildAtlas");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GraphicsExtensions.GMAdaptiveShadowMapSourceComponent.SetLightRadiusWithBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   BoundingSphereCenter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BoundingSphereRadius                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGMAdaptiveShadowMapSourceComponent::SetLightRadiusWithBounds(const struct FVector& BoundingSphereCenter, float BoundingSphereRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMAdaptiveShadowMapSourceComponent", "SetLightRadiusWithBounds");

	Params::GMAdaptiveShadowMapSourceComponent_SetLightRadiusWithBounds Parms{};

	Parms.BoundingSphereCenter = std::move(BoundingSphereCenter);
	Parms.BoundingSphereRadius = BoundingSphereRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GraphicsExtensions.GMShadowDepthCaptureComponent.RequestCaptureUpdate
// (Final, Native, Public, BlueprintCallable)

void UGMShadowDepthCaptureComponent::RequestCaptureUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GMShadowDepthCaptureComponent", "RequestCaptureUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

