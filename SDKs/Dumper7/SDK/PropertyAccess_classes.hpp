#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PropertyAccess

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class PropertyAccess.PropertyAccess
// 0x0000 (0x0000 - 0x0000)
class IPropertyAccess final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropertyAccess")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropertyAccess")
	}
	static class IPropertyAccess* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPropertyAccess>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IPropertyAccess;

// Class PropertyAccess.PropertyEventBroadcaster
// 0x0000 (0x0000 - 0x0000)
class IPropertyEventBroadcaster final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropertyEventBroadcaster")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropertyEventBroadcaster")
	}
	static class IPropertyEventBroadcaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPropertyEventBroadcaster>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IPropertyEventBroadcaster;

// Class PropertyAccess.PropertyEventSubscriber
// 0x0000 (0x0000 - 0x0000)
class IPropertyEventSubscriber final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropertyEventSubscriber")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropertyEventSubscriber")
	}
	static class IPropertyEventSubscriber* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPropertyEventSubscriber>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IPropertyEventSubscriber;

}

