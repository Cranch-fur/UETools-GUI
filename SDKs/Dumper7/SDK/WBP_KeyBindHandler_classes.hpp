#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyBindHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_KeyBindHandler.WBP_KeyBindHandler_C
// 0x0050 (0x02E8 - 0x0298)
class UWBP_KeyBindHandler_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FKey                                   Key;                                               // 0x02A0(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Console_Command_On_Press;                          // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Console_Command_On_Release;                        // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bWidgetProtected;                                  // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bToggleMode;                                       // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_WBP_KeyBindHandler(int32 EntryPoint);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_KeyBindHandler_C">();
	}
	static class UWBP_KeyBindHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_KeyBindHandler_C>();
	}
};
static_assert(alignof(UWBP_KeyBindHandler_C) == 0x000008, "Wrong alignment on UWBP_KeyBindHandler_C");
static_assert(sizeof(UWBP_KeyBindHandler_C) == 0x0002E8, "Wrong size on UWBP_KeyBindHandler_C");
static_assert(offsetof(UWBP_KeyBindHandler_C, UberGraphFrame) == 0x000298, "Member 'UWBP_KeyBindHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBindHandler_C, Key) == 0x0002A0, "Member 'UWBP_KeyBindHandler_C::Key' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBindHandler_C, Console_Command_On_Press) == 0x0002C0, "Member 'UWBP_KeyBindHandler_C::Console_Command_On_Press' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBindHandler_C, Console_Command_On_Release) == 0x0002D0, "Member 'UWBP_KeyBindHandler_C::Console_Command_On_Release' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBindHandler_C, bWidgetProtected) == 0x0002E0, "Member 'UWBP_KeyBindHandler_C::bWidgetProtected' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBindHandler_C, bToggleMode) == 0x0002E1, "Member 'UWBP_KeyBindHandler_C::bToggleMode' has a wrong offset!");

}

